{"version":3,"sources":["assets/homePageImage.png","firebase.js","Constants.js","screens/AllAuth.js","screens/CreateEvent.js","screens/ViewEvents.js","screens/Profile.js","screens/AskQuestion.js","screens/AnswerQuestions.js","screens/SeniorPreviousQuestions.js","screens/ManageChapter.js","screens/ManageNetwork.js","screens/AllEvents.js","App.js"],"names":["module","exports","Firebase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","COLORS","STYLEVALS","checkInternet","a","async","NetInfo","fetch","isConnected","SignUpNavigator","createStackNavigator","openLink","link","undefined","alert","WebBrowser","catch","error","console","log","AuthNav","navigation","Navigator","initialRouteName","Screen","name","component","LoginNavigationEnabled","options","headerStyle","backgroundColor","AppConstantsValues","headerTintColor","SignUpNavigationEnabled","SignUpVNavigationEnabled","SignUpHNavigationEnabled","SignUpANavigationEnabled","props","useNavigation","userType","SignUpUserOther","setUp","connectToInternet","getChaptersList","setState","ready","database","ref","once","then","snapshot","data","val","chaptersList","Object","values","chaptersListSave","signup","emailIn","passwordIn","chapter","state","key","includes","trim","email","password","auth","createUserWithEmailAndPassword","toString","user","currentUser","uid","set","Role","Chapter","Validated","updateProfile","displayName","update","DisplayName","Email","primaryRole","searchFilterFunction","search","oldData","newData","filter","item","itemData","toUpperCase","textData","indexOf","showChaptersModal","showUserModal","searchText","this","View","style","flex","margin","color","block","alignSelf","onPress","Text","SafeAreaView","StatusBar","ScrollView","padding","paddingBottom","scrollIndicatorInsets","right","marginVertical","onChangeText","text","placeholder","autoCapitalize","autoCorrect","textContentType","secureTextEntry","value","onFocus","full","rounded","minWidth","marginTop","marginBottom","justifyContent","flexDirection","alignContent","alignItems","transparent","visible","animationType","height","shadowColor","FontAwesome5","fontSize","paddingHorizontal","lightTheme","autoFocus","FlatList","keyExtractor","Math","random","keyboardShouldPersistTaps","renderItem","index","React","Component","SignUp","paddingTop","fontWeight","fontStyle","navigate","textDecorationLine","Login","forgotPassword","sendPasswordResetEmail","e","login","signInWithEmailAndPassword","width","Dimensions","get","CreateEvent","route","useState","setIsConnected","setName","volunteerLimit","setVolunteerLimit","participantLimit","setParticipantLimit","detail","setDetail","Date","eventDateWeb","setEventDateWeb","eventStartTimeWeb","setEventStartTimeWeb","eventEndTimeWeb","setEventEndTimeWeb","setLink","underReview","setUnderReview","useReducer","x","useEffect","getInternet","result","LinearGradient","colors","contentContainerStyle","maxWidth","flexGrow","marginHorizontal","borderRadius","elevation","shadowOpacity","shadowOffset","blurOnSubmit","zIndex","bottom","position","Keyboard","dismiss","rowSpan","bordered","clearButtonMode","keyboardType","warning","success","intVLimit","parseInt","intPLimit","push","EventName","EventVolunteerLimit","EventParticipantLimit","EventDetails","EventDate","EventStartTime","EventEndTime","EventLink","TimeStamp","toLocaleDateString","VolunteersSignedUp","ParticipantsSignedUp","Locked","EventComplete","sendToDB","danger","textAlign","CreateEventNav","Stack","headerLeft","TouchableOpacity","openDrawer","Entypo","marginLeft","compareLocaleTimeString","first","second","firstPMAM","split","secondPMAM","firstArr","secondArr","AllEvents","firebaseRef","on","onFirebaseValueChanged","dataDB","dataOut","keys","length","parentKey","event","currentDate","eventDateFull","getDate","toLocaleTimeString","userIsSignedUp","Participants","Volunteers","eventData","reverse","admin","refreshing","userLocation","off","stateOfEvent","backgroundColorTR","EventCompleteView","params","EventIsLive","backgroundGoing","goingState","UserIsSignedUp","stateOfEventColor","paddingVertical","paddingLeft","paddingRight","MaterialIcons","size","slice","FontAwesome","Ionicons","ViewEventsNavSenior","initialParams","ViewEventPage","headerShown","title","headerRight","marginRight","ViewEventsNavVolunteer","ViewEventsNavHead","incrementParticipants","pathAllTheWay","transaction","currentParticipants","decrementVolunteers","currentVolunteers","seniorLimit","setSeniorLimit","volunteerAmount","setVolunteerAmount","seniorAmount","setSeniorAmount","setRefreshParent","volunteerDetails","setVolunteerDetails","refreshVolunteerList","setRefreshVolunteerList","participantDetails","setParticipantDetails","isSignedUp","setIsSignedUp","cushionToPullOut","showVolunteerList","setShowVolunteerList","showSeniorList","setShowSeniorList","showEndEventModal","setShowEndEventModal","hoursGiven","setHoursGiven","refreshCompleteList","setRefreshCompleteList","allowPullout","volunteers","entries","dataFlattened","Name","UID","fillHoursGiven","participants","getVolunteerList","lockEventAction","setToWhat","eventDate","daysForCushion","comparison","setDate","signUpForEvent","checkVolunteerMatch","checkParticipantMatch","goBack","unSignUpForEvent","response","toggleRefreshList","arr","copy","getTimeDifference","start","end","startArr","isPM","msStart","miliseconds","endArr","isPMEnd","convertToTimeDisplay","duration","seconds","floor","minutes","hours","onChangeHours","hoursChange","intHoursChange","copyAllHours","onChangeMins","minsChange","intMinsChange","msConversion","timeDisplayHardCode","hoursHardCode","minutesHardCode","openZoomLink","MaterialCommunityIcons","Clipboard","setString","deleteEvent","placeholderTextColor","submitEdits","borderColor","borderWidth","extraData","volunteerUID","volunteerName","splice","deleteVolunteer","worked","giveHours","metadata","Hours","allocateHours","Linking","canOpenURL","window","open","hrs","min","sec","withNavigation","Profile","role","oldChapter","getUserData","isReady","hoursFlattened","hoursTotal","hoursDB","HoursMs","hoursInfo","totalHours","toFixed","changeData","DBPlace","updateEmail","userData","Updates","Spinner","overflow","active","refreshControl","RefreshControl","onRefresh","minHeight","scrollEnabled","ProfileNav","storeForumDownloadDate","date","getTime","AsyncStorage","setItem","getForumDownloadDateAndValidate","getItem","dateInMS","difference","daysSinceLastDownload","storeForum","jsonValue","JSON","stringify","getForum","parse","AskQuestion","forumData","dataIter","dataToSend","Answered","forum","forumDisplay","searchParse","textList","searchFull","Title","Question","sendQuestionToDatabase","question","addToQuestionBank","askerName","anonymous","Asker","QuestionKey","AskerName","questionValue","titleValue","questionTitleValue","onTextChangeTitle","onTextChange","getForumOnFocus","downloadFromDB","receivedForum","buttonHidden","expoPushToken","receivedFollowUp","followUp","prevprops","y","TouchableWithoutFeedback","styles","inputButton","underline","maxHeight","multiline","numberOfLines","bottomTab","opacity","previewText","substring","answers","listItem","AskQuestionNav","imageDownloadURL","listOfAnswers","setListOfAnswers","refreshFlatList","setRefreshFlatlist","setExpandedForImages","modalData","setModalData","modalOpen","setModalOpen","fullAnswers","finalList","arrAnswers","expandImages","answererName","Link","AnswerText","Answer","AnswerLink","AnswererName","formatAnswerTextImageInLists","statusBarTranslucent","bottomTabModal","StyleSheet","create","horizontalFlex","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","modalSection","extractKey","getData","dataArray","forEach","childSnapshot","childData","finalSortedDataArray","unshift","dataArrayDisplay","answersLength","answerValue","questionKey","Claim","submit","URLValue","ImageURL","ImageURLProcessed","prevProps","refreshParentPage","container","questionList","AnswerQuestionsNav","QuestionNew","answerText","setAnswerText","answerLink","setAnswerLink","answerModalOpen","setAnswerModalOpen","readyToSubmit","setReadyToSubmit","endAnswer","nestedScrollEnabled","presentationStyle","barStyle","path","sendAnswer","Fontisto","PreviousQuestions","refresh","promiseURLS","Promise","all","map","url","refFromURL","goToQuestionPage","disabled","URL","PreviousQuestionNav","screen","ManageChapter","dataToExtract","UIDList","finalData","volunteer","ProfileData","i","TotalHours","volunteerData","VolunteerPage","extraEventName","setExtraEventName","extraHours","setExtraHours","deductedHours","setDeductedHours","banUnbanUser","ban","parseFloat","ManageChapterNav","manageNetwork","vals","chapters","Key","masterKey","sort","b","chapterAuthKeysData","needsRefresh","AntDesign","OrgDetailsNav","ChapterPage","AddChapterPage","chapterName","setChapterName","makeid","characters","charactersLength","charAt","getAllChapterEvents","Alert","listOfChapterNames","events","toLowerCase","localeCompare","allEventsData","showEventsArr","toggleShowEvents","showEvents","eventsFlat","EventsList","AllEventsNav","ParentDrawer","createDrawerNavigator","App","initializing","setInitializing","setUser","setUserType","userChapter","setUserChapter","onAuthStateChanged","sleep","signOut","getRoleAndValidation","useRef","NavigationContainer","drawerType","overlayColor","lazy","drawerContentOptions","activeTintColor","labelStyle","loading","waitingRoom","LogOutNav","HomeSeniorNav","drawerIcon","focused","SeniorPreviousQuestions","HomeVolunteerNav","AnswerQuestion","HomeHeadNav","HomeAdminNav","ManageNetwork","NoScreen","AllAuth","openURL","handleEmailToCovidNetworks","subject","HomeSeniorNavigator","HomeScreenSenior","ImageBackground","backfaceVisibility","imageStyle","source","require","HomeVolunteerNavigator","HomeScreenVolunteer","HomeHeadNavigator","HomeScreenHead","HomeAdminNavigator","HomeScreenAdmin","LogOutNavigator","logOut","ms","resolve","setTimeout","registerRootComponent"],"mappings":"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","file":"static/js/app.80e57289.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/homePageImage.e887dbb5.png\";","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCsqo9waVx9uomqK6ijXmBsZ3wECUPQI98\",\r\n  authDomain: \"covidnetworksdb.firebaseapp.com\",\r\n  databaseURL: \"https://covidnetworksdb-default-rtdb.firebaseio.com\",\r\n  projectId: \"covidnetworksdb\",\r\n  storageBucket: \"covidnetworksdb.appspot.com\",\r\n  messagingSenderId: \"170686547439\",\r\n  appId: \"1:170686547439:web:39d489c2e9be0e4a18e21a\",\r\n  measurementId: \"G-F29EVE2XQB\"\r\n};\r\n\r\n  const Firebase = firebase.initializeApp(firebaseConfig);\r\n\r\n  export default Firebase","export const COLORS = {\r\n    primaryColor:\"#ff5a00\",\r\n    secondaryColor:\"#ff3600\",\r\n    textInButtonColor:'white',\r\n    softBlack:\"#2F2F2F\",\r\n    moneyColor:\"#38CC77\",\r\n    backgroundColor:\"#262626\",\r\n    backgroundColorFade:'#262626',\r\n    linkColor:\"#3944F7\",\r\n    cardColor:\"white\",\r\n    innerCardColor:'black',\r\n    textColor:\"black\"\r\n}\r\n\r\nexport const STYLEVALS = {\r\n    borderRadius:10,\r\n    cardWidthInList:'80%',\r\n    shadowValue:0.2,\r\n    shadowValueLarge:0.5,\r\n    shadowValueText:0\r\n  }\r\n\r\n  import NetInfo from \"@react-native-community/netinfo\";\r\n  export async function checkInternet(){\r\n    return (await NetInfo.fetch()).isConnected\r\n}\r\n\r\n//Role types: \r\n//Senior\r\n//Volunteer\r\n//Head\r\n//Admin","import { StatusBar } from 'expo-status-bar';\r\nimport React,{useEffect,useState} from 'react';\r\nimport { StyleSheet, Text, View,FlatList,RefreshControl,ScrollView,Alert, SafeAreaView,TouchableOpacity} from 'react-native';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Modal from 'modal-react-native-web';\r\nimport Firebase from '../firebase'\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport {Card,CardItem,DeckSwiper,Body,Left,Right,Spinner,Button,Input,Item,Textarea,Form,Header,Icon,Title,List,ListItem,Picker} from 'native-base';\r\nimport * as AppConstantsValues from '../Constants'\r\nimport { Ionicons,MaterialCommunityIcons,MaterialIcons,Entypo,EvilIcons,Feather,FontAwesome,FontAwesome5,Fontisto,Foundation, AntDesign } from '@expo/vector-icons';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { useNavigation, useTheme } from '@react-navigation/native'\r\nimport {SearchBar} from 'react-native-elements'\r\nimport * as WebBrowser from \"expo-web-browser\"\r\nimport { Image } from 'react-native';\r\nimport { Dimensions } from 'react-native';\r\nimport { Linking } from 'react-native';\r\n\r\n\r\nconst SignUpNavigator = createStackNavigator()\r\n\r\nfunction openLink(link) {\r\n    if(link == undefined || link == null){\r\n      alert(\"Sorry, we could not find a link, perhaps call?\")\r\n    }else{\r\n    WebBrowser.openBrowserAsync(link).catch(error => {console.log(error),alert(error)\r\n      \r\n    })\r\n  }\r\n}\r\n\r\nexport default function AuthNav({navigation}) {\r\n    return (\r\n      <SafeAreaProvider>\r\n      <SignUpNavigator.Navigator initialRouteName=\"Login\"  >\r\n        <SignUpNavigator.Screen name=\"Login\" component={LoginNavigationEnabled} options={{\r\n        \r\n        headerStyle: {\r\n          backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n         \r\n        },\r\n        headerTintColor: 'white',\r\n        \r\n        //headerLeft: () => <TouchableOpacity transparent onPress={() => navigation.openDrawer()}><Entypo style={{  color: 'white', marginLeft: 15, fontSize: 30, marginTop: 7 }} name='menu'/></TouchableOpacity>\r\n      }}/>\r\n        <SignUpNavigator.Screen name=\"Sign Up\" component={SignUpNavigationEnabled} options={{\r\n        \r\n        headerStyle: {\r\n          backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n         \r\n        },\r\n        headerTintColor: 'white'}} />\r\n        <SignUpNavigator.Screen name=\"Sign Up for Volunteers\" component={SignUpVNavigationEnabled} options={{\r\n        \r\n        headerStyle: {\r\n          backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n         \r\n        },\r\n        headerTintColor: 'white'}} />\r\n        <SignUpNavigator.Screen name=\"Sign Up for Chapter Heads\" component={SignUpHNavigationEnabled} options={{\r\n        \r\n        headerStyle: {\r\n          backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n         \r\n        },\r\n        headerTintColor: 'white'}} />\r\n        <SignUpNavigator.Screen name=\"Sign Up for Admins\" component={SignUpANavigationEnabled} options={{\r\n        \r\n        headerStyle: {\r\n          backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n         \r\n        },\r\n        headerTintColor: 'white'}} />\r\n      </SignUpNavigator.Navigator>\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n\r\nfunction LoginNavigationEnabled(props) {\r\n    const navigation = useNavigation();\r\n  \r\n    return <Login {...props} navigation={navigation} />;\r\n  }\r\n  function SignUpNavigationEnabled(props) {\r\n    const navigation = useNavigation();\r\n  \r\n    return <SignUp {...props} navigation={navigation} />;\r\n  }\r\n  function SignUpVNavigationEnabled(props) {\r\n    const navigation = useNavigation();\r\n  \r\n    return <SignUpUserOther userType={\"Volunteer\"} {...props} navigation={navigation} />;\r\n  }\r\n  function SignUpHNavigationEnabled(props) {\r\n    const navigation = useNavigation();\r\n  \r\n    return <SignUpUserOther userType={\"Head\"} {...props} navigation={navigation} />;\r\n  }\r\n  function SignUpANavigationEnabled(props) {\r\n    const navigation = useNavigation();\r\n  \r\n    return <SignUpUserOther userType={\"Admin\"} {...props} navigation={navigation} />;\r\n  }\r\n  class SignUpUserOther extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:null,\r\n            password:null,\r\n            chapter:null,\r\n            ready:false,\r\n            chaptersList:[],\r\n            chaptersListSave:[],\r\n            showChaptersModal:false,\r\n            userType:this.props.userType,\r\n            showUserModal:false,\r\n            key:null,\r\n            name:null,\r\n            searchText:null\r\n        };\r\n        \r\n      }\r\n    \r\n    async componentDidMount(){\r\n      \r\n        await this.setUp()\r\n    }\r\n\r\n    setUp = async () => {\r\n        if(await this.connectToInternet()){\r\n            await this.getChaptersList()\r\n            this.setState({ready:true})\r\n        }else{\r\n            alert(\"No Internet Detected\")\r\n        }\r\n    }\r\n\r\n    getChaptersList = async() => {\r\n        Firebase.database().ref(\"/ChaptersList\").once('value').then(snapshot => {\r\n            const data = snapshot.val()\r\n            const chaptersList = Object.values(data)\r\n            console.log(chaptersList)\r\n            this.setState({chaptersList:chaptersList,chaptersListSave:chaptersList})\r\n        })\r\n    }\r\n\r\n    connectToInternet = async() => {\r\n        return await AppConstantsValues.checkInternet()\r\n    }\r\n    signup = async(emailIn,passwordIn,chapter,userType) => {\r\n        \r\n        if(!(emailIn != null || emailIn != \"\" || passwordIn != null || passwordIn != \"\" || (chapter != null || this.props.userType == \"Admin\") || userType != null || (this.state.key != null || this.props.userType == \"Volunteer\") || this.state.name != null)){\r\n            alert(\"Please fill all fields\")\r\n        }else if(this.state.chaptersListSave.includes(chapter) == false && this.props.userType != \"Admin\"){\r\n            alert(\"Please enter a valid chapter\")\r\n        }else{\r\n\r\n            console.log(emailIn,passwordIn,this.state.key)\r\n            if(this.props.userType == \"Head\"){\r\n                Firebase.database().ref(\"ChapterAuthKeys/\" + this.state.chapter).once('value').then(snapshot => {\r\n                    console.log(snapshot.val(),\"IN HEAD AUTH\")\r\n                    if(this.state.key.trim() == snapshot.val()){\r\n                        let email = emailIn.trim()\r\n                        let password = passwordIn.trim()\r\n                        Firebase.auth().createUserWithEmailAndPassword(email,password).catch(error => {\r\n                            alert(error.toString(error))\r\n                        }).then(async user => {\r\n                            if(user){\r\n                               \r\n                                console.log(this.state.key)\r\n                            \r\n                                Firebase.database().ref(\"/UserMetaData/\" + Firebase.auth().currentUser.uid).set({\r\n                                    Role:userType,\r\n                                    Chapter:chapter,\r\n                                    Validated:true //make false if waiting room thing happening\r\n                                })\r\n                                Firebase.auth().currentUser.updateProfile({\r\n                                    displayName: this.state.name\r\n                                })\r\n                                \r\n                                let DBPlace = \"Volunteers\"\r\n                               \r\n                                Firebase.database().ref(chapter + \"/\" + DBPlace + \"/\" + Firebase.auth().currentUser.uid + \"/ProfileData\").update({\r\n                                    DisplayName : this.state.name,\r\n                                    Email:email\r\n                                })\r\n                                Firebase.database().ref(chapter + \"/UserUIDs/\" + Firebase.auth().currentUser.uid).set(1)   \r\n                            }\r\n                        })\r\n                    }else{\r\n                        alert(\"Invalid Key\")\r\n                    }\r\n                })\r\n                \r\n            }\r\n            else if(this.props.userType == \"Admin\"){\r\n               Firebase.database().ref(\"ChapterAuthKeys/\" + \"Master\").once('value').then(snapshot => {\r\n                console.log(snapshot.val(),this.state.key.trim(),\"IN Admin AUTH\")\r\n                    if(this.state.key.trim() == snapshot.val()){\r\n                        let email = emailIn.trim()\r\n                        let password = passwordIn.trim()\r\n                        Firebase.auth().createUserWithEmailAndPassword(email,password).catch(error => {\r\n                            alert(error.toString(error))\r\n                        }).then(async user => {\r\n                            if(user){\r\n                           \r\n                                console.log(this.state.key)\r\n                            \r\n                                Firebase.database().ref(\"/UserMetaData/\" + Firebase.auth().currentUser.uid).set({\r\n                                    primaryRole:userType,\r\n                                    Role:\"Head\", //admin functions as a head but can switch chapters and manage them\r\n                                    Chapter:\"Washington\",\r\n                                    Validated:true //make false if waiting room thing happening\r\n                                })\r\n                                Firebase.auth().currentUser.updateProfile({\r\n                                    displayName: this.state.name\r\n                                })\r\n                                \r\n                               \r\n                                    \r\n                                \r\n                            }\r\n                        })\r\n                    }else{\r\n                        alert(\"Invalid Key\")\r\n                    }\r\n                })\r\n                \r\n            }else{\r\n                let email = emailIn.trim()\r\n                let password = passwordIn.trim()\r\n                Firebase.auth().createUserWithEmailAndPassword(email,password).catch(error => {\r\n                    alert(error.toString(error))\r\n                }).then(async user => {\r\n                    if(user){\r\n                       \r\n                        console.log(this.state.key)\r\n                    \r\n                        Firebase.database().ref(\"/UserMetaData/\" + Firebase.auth().currentUser.uid).set({\r\n                            Role:userType,\r\n                            Chapter:chapter,\r\n                            Validated:true //make false if waiting room thing happening\r\n                        })\r\n                        Firebase.auth().currentUser.updateProfile({\r\n                            displayName: this.state.name\r\n                        })\r\n                        \r\n                        let DBPlace = \"Volunteers\"\r\n                       \r\n                        Firebase.database().ref(chapter + \"/\" + DBPlace + \"/\" + Firebase.auth().currentUser.uid + \"/ProfileData\").update({\r\n                            DisplayName : this.state.name,\r\n                            Email:email\r\n                        })        \r\n                        Firebase.database().ref(chapter + \"/UserUIDs/\" + Firebase.auth().currentUser.uid).set(1)   \r\n                        \r\n                    }\r\n                })}\r\n            \r\n        }\r\n    }\r\n    searchFilterFunction = async search => {\r\n        \r\n        \r\n        if(search == null || search == \"\"){\r\n            this.setState({chaptersList:this.state.chaptersListSave})\r\n        }else{\r\n            let oldData = this.state.chaptersListSave\r\n            \r\n            const newData = oldData.filter(item => {\r\n                const itemData = `${item.toUpperCase()}`\r\n                const textData = search.toUpperCase()\r\n    \r\n                return itemData.indexOf(textData) > -1\r\n            })\r\n            console.log(newData)\r\n            this.setState({\r\n                chaptersList:newData\r\n            })\r\n            \r\n        }\r\n        \r\n    \r\n    }\r\n\r\n    render(){\r\n        const { navigation } = this.props;\r\n        if(this.state.ready == false){\r\n            return(\r\n                <View style={{flex:1,margin:20}}>\r\n                    <Spinner color={AppConstantsValues.COLORS.primaryColor}/>\r\n                    <Button block style={{alignSelf:'center',backgroundColor:AppConstantsValues.COLORS.primaryColor}} onPress={() => this.setUp()}>\r\n                        <Text style={{color:AppConstantsValues.COLORS.textInButtonColor}}>Try again!</Text>\r\n                    </Button>\r\n                </View>\r\n            )\r\n        }\r\n        return(\r\n            <SafeAreaView style={{flex:1}}>\r\n                <StatusBar/>\r\n                <ScrollView style={{flex:1,padding:20,paddingBottom:40}} scrollIndicatorInsets={{right:1}}>\r\n                    <StatusBar/>\r\n                    <Form>\r\n                        <Item style={{marginVertical:10}}> \r\n                        <Input onChangeText={text => this.setState({name:text})} placeholder=\"Name\" autoCapitalize={'none'}\r\n                        autoCorrect={false}\r\n                       />\r\n                        </Item>\r\n                        <Item style={{marginVertical:10}}> \r\n                        <Input onChangeText={text => this.setState({email:text})} placeholder=\"Email\" autoCapitalize={'none'}\r\n                        autoCorrect={false}\r\n                        textContentType={'emailAddress'}/>\r\n                        </Item>\r\n                        <Item style={{marginVertical:10}}>\r\n                        <Input onChangeText={text => this.setState({password:text})} placeholder=\"Password\" autoCapitalize={'none'}\r\n                        autoCorrect={false}\r\n                        secureTextEntry={true}\r\n                        textContentType={'password'}/>\r\n                        </Item>\r\n                        {this.props.userType != \"Admin\" ? \r\n                        <Item style={{marginVertical:10}} onPress={() => this.setState({showChaptersModal:!this.state.showChaptersModal})}>\r\n                        <Input \r\n                        value={this.state.chapter}\r\n                        placeholder=\"Find your chapter (click here)\"\r\n                        onFocus={() => this.setState({showChaptersModal:!this.state.showChaptersModal})}\r\n                        />\r\n                        </Item>\r\n                        :\r\n                        null}\r\n                        {this.props.userType == \"Admin\" || this.props.userType == \"Head\" ? \r\n                        <Item style={{marginVertical:10}} onPress={() => this.setState({showChaptersModal:!this.state.showChaptersModal})}>\r\n                        <Input \r\n                        value={this.state.key}\r\n                        placeholder=\"Key\"\r\n                        onChangeText={text => this.setState({key:text})}\r\n                        />\r\n                        </Item>\r\n                        :\r\n                        null}\r\n                    </Form>\r\n                    <Button full rounded style={{minWidth:'50%',alignSelf:'center',marginVertical:10,padding:10,backgroundColor:AppConstantsValues.COLORS.primaryColor}}\r\n                    onPress={() => this.signup(this.state.email,this.state.password,this.state.chapter,this.state.userType)}>\r\n                        <Text style={{color:'white'}}>Sign Up</Text>\r\n                    </Button>\r\n                 \r\n                 \r\n                  \r\n                    <View style={{marginTop:50,marginBottom:20,justifyContent:'center'}}> \r\n                        <Text style={{alignSelf:'center'}}>By continuing you have agreed to the</Text>\r\n                        <Text style={{alignSelf:'center'}}>Terms of Service and Privacy Policy</Text>\r\n                        <View style={{flexDirection:'row',alignContent:'center',alignItems:'center',justifyContent:'space-evenly'}}>\r\n                            <Button transparent style={{alignSelf:'center'}} onPress={() => openLink(\"https://www.websitepolicies.com/policies/view/UeRqjtBl\")}>\r\n                                <Text style={{color:AppConstantsValues.COLORS.linkColor}}>Terms of Service</Text>\r\n                            </Button>\r\n                            <Button transparent style={{alignSelf:'center'}} onPress={() => openLink(\"https://horizon-networks.flycricket.io/privacy.html\")}>\r\n                                <Text style={{color:AppConstantsValues.COLORS.linkColor}}>Privacy Policy</Text>\r\n                            </Button>\r\n                        </View>\r\n                        \r\n                    </View>\r\n                    \r\n                </ScrollView>\r\n               \r\n                <Modal visible={this.state.showChaptersModal} animationType=\"slide\">\r\n                    <StatusBar/>\r\n                    <View style={{flex:1}}>\r\n                    <Header transparent style = {{ height: 40, backgroundColor: AppConstantsValues.COLORS.primaryColor, shadowColor: 'transparent'}}>\r\n                        <Left>\r\n                            <Button transparent  onPress = {() => this.setState({showChaptersModal:!this.state.showChaptersModal})}>\r\n                                <FontAwesome5 name=\"angle-down\" style={{ color: 'white', fontSize: 30,paddingHorizontal:10 }} />\r\n                               \r\n                            </Button>\r\n                        </Left>\r\n                        <Body>\r\n                            <Title style = {{color:  'white'}}>Chapters</Title>\r\n                        </Body>\r\n                        <Right/>\r\n                    </Header>\r\n                    <SearchBar lightTheme={true} autoFocus={true} placeholder=\"Search where you live (California, India, etc.)\" onChangeText={text => {this.setState({searchText:text});this.searchFilterFunction(text)}} value={this.state.searchText}/>\r\n                    \r\n                    <FlatList scrollIndicatorInsets={{right:1}}\r\n                    style={{flex:1,margin:15}}\r\n                    data={this.state.chaptersList}\r\n                    keyExtractor={() => Math.random(0,10000)}\r\n                    keyboardShouldPersistTaps='handled'\r\n                    renderItem={({item,index}) => {\r\n                        console.log(item)\r\n                        return(\r\n                           \r\n                                <ListItem onPress = {() => this.setState({chapter:item,showChaptersModal:false})}>\r\n                                    <Left>\r\n                                        <Text style={{fontSize:15}}>{item}</Text>\r\n                                    </Left>\r\n                                    <Right>\r\n                                        <Text>Click me!</Text>\r\n                                    </Right>\r\n                                    \r\n                                </ListItem>\r\n                           \r\n                            \r\n                        )\r\n                    }}\r\n                    />\r\n                    \r\n                    </View>\r\n                </Modal>\r\n            </SafeAreaView>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n \r\nclass SignUp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:null,\r\n            password:null,\r\n            chapter:null,\r\n            ready:false,\r\n            chaptersList:[],\r\n            chaptersListSave:[],\r\n            showChaptersModal:false,\r\n            userType:\"Senior\",\r\n            showUserModal:false,\r\n            name:null,\r\n            searchText:null\r\n        };\r\n        \r\n      }\r\n    \r\n    async componentDidMount(){\r\n      \r\n        await this.setUp()\r\n    }\r\n\r\n    setUp = async () => {\r\n        if(await this.connectToInternet()){\r\n            await this.getChaptersList()\r\n            this.setState({ready:true})\r\n        }else{\r\n            alert(\"No Internet Detected\")\r\n        }\r\n    }\r\n\r\n    getChaptersList = async() => {\r\n        Firebase.database().ref(\"/ChaptersList\").once('value').then(snapshot => {\r\n            const data = snapshot.val()\r\n            const chaptersList = Object.values(data)\r\n            console.log(chaptersList)\r\n            this.setState({chaptersList:chaptersList,chaptersListSave:chaptersList})\r\n        })\r\n    }\r\n\r\n    connectToInternet = async() => {\r\n        return await AppConstantsValues.checkInternet()\r\n    }\r\n    signup = async(emailIn,passwordIn,chapter,userType) => {\r\n        \r\n        if(emailIn == null || emailIn == \"\" || passwordIn == null || passwordIn == \"\" || chapter == null || userType == null || this.state.name == null || this.state.name == \"\"){\r\n            alert(\"Please fill all fields\")\r\n        }else if(this.state.chaptersListSave.includes(chapter) == false){\r\n            alert(\"Please enter a valid chapter\")\r\n        }  \r\n        else{\r\n            let email = emailIn.trim()\r\n            let password = passwordIn.trim()\r\n            Firebase.auth().createUserWithEmailAndPassword(email,password).catch(error => {\r\n                alert(error.toString(error))\r\n            }).then(async user => {\r\n                if(user){\r\n                    if(userType == \"Senior\"){\r\n                        Firebase.database().ref(\"/UserMetaData/\" + Firebase.auth().currentUser.uid).set({\r\n                            Role:\"Senior\",\r\n                            Chapter:chapter,\r\n                            Validated:true\r\n                        })\r\n                        Firebase.auth().currentUser.updateProfile({\r\n                            displayName: this.state.name\r\n                        })\r\n                        \r\n                        let DBPlace = \"Seniors\"\r\n                       \r\n                        Firebase.database().ref(chapter + \"/\" + DBPlace + \"/\" + Firebase.auth().currentUser.uid + \"/ProfileData\").update({\r\n                            DisplayName : this.state.name,\r\n                            Email:email\r\n                        })   \r\n                        Firebase.database().ref(chapter + \"/UserUIDs/\" + Firebase.auth().currentUser.uid).set(1)     \r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    searchFilterFunction = async search => {\r\n        \r\n        \r\n        if(search == null || search == \"\"){\r\n            this.setState({chaptersList:this.state.chaptersListSave})\r\n        }else{\r\n            let oldData = this.state.chaptersListSave\r\n            \r\n            const newData = oldData.filter(item => {\r\n                const itemData = `${item.toUpperCase()}`\r\n                const textData = search.toUpperCase()\r\n    \r\n                return itemData.indexOf(textData) > -1\r\n            })\r\n            console.log(newData)\r\n            this.setState({\r\n                chaptersList:newData\r\n            })\r\n            \r\n        }\r\n        \r\n    \r\n    }\r\n  \r\n\r\n    render(){\r\n        const { navigation } = this.props;\r\n        if(this.state.ready == false){\r\n            return(\r\n                <View style={{flex:1,margin:20}}>\r\n                    <Spinner color={AppConstantsValues.COLORS.primaryColor}/>\r\n                    <Button block style={{alignSelf:'center',backgroundColor:AppConstantsValues.COLORS.primaryColor}} onPress={() => this.setUp()}>\r\n                        <Text style={{color:AppConstantsValues.COLORS.textInButtonColor}}>Try again!</Text>\r\n                    </Button>\r\n                </View>\r\n            )\r\n        }\r\n        return(\r\n            <View style={{flex:1}}>\r\n                <StatusBar/>\r\n                <ScrollView style={{flex:1,paddingHorizontal:20,paddingTop:10}} scrollIndicatorInsets={{right:1}}>\r\n                    <StatusBar/>\r\n                    <Text style={{fontWeight:'bold',fontSize:18}}>READ BELOW PLEASE</Text>\r\n                    <Text style={{fontStyle:'italic',fontSize:15}}>If you are a senior, you're in the right place! Please fill the form</Text>\r\n                    <Text>(First Name, Email, Password, Chapter)</Text>\r\n                    <Text style={{fontStyle:'italic',fontSize:15}}>and press \"Sign Up\"</Text>\r\n                    <Form style={{flex:1}}>\r\n                        <Item style={{marginVertical:10}}> \r\n                        <Input onChangeText={text => this.setState({name:text})} placeholder=\"First Name\" autoCapitalize={'none'}\r\n                        autoCorrect={false}\r\n                        />\r\n                        </Item>\r\n                        <Item style={{marginVertical:10}}> \r\n                        <Input onChangeText={text => this.setState({email:text})} placeholder=\"Email\" autoCapitalize={'none'}\r\n                        autoCorrect={false}\r\n                        textContentType={'emailAddress'}/>\r\n                        </Item>\r\n                        <Item style={{marginVertical:10}}>\r\n                        <Input onChangeText={text => this.setState({password:text})} placeholder=\"Enter any Password\" autoCapitalize={'none'}\r\n                        autoCorrect={false}\r\n                        secureTextEntry={true}\r\n                        textContentType={'password'}/>\r\n                        </Item>\r\n                        \r\n                        <Item style={{marginVertical:10}} onPress={() => {this.setState({showChaptersModal:!this.state.showChaptersModal})}}>\r\n                        <Input \r\n                        value={this.state.chapter}\r\n                        placeholder=\"Find your chapter (click here)\"\r\n                        onFocus={() => this.setState({showChaptersModal:!this.state.showChaptersModal})}\r\n                        />\r\n                        </Item>\r\n                    </Form>\r\n                    <Button full rounded style={{minWidth:'50%',alignSelf:'center',marginVertical:10,padding:10,backgroundColor:AppConstantsValues.COLORS.primaryColor}}\r\n                    onPress={() => this.signup(this.state.email,this.state.password,this.state.chapter,this.state.userType)}>\r\n                        <Text style={{color:'white'}}>Sign Up</Text>\r\n                    </Button>\r\n                    <View style={{justifyContent:'space-evenly',height:200}}>\r\n                        <Text style={{alignSelf:'center',fontStyle:'italic'}}>If you are <Text style={{fontWeight:'bold'}}>NOT</Text> a senior choose one of these options...</Text>\r\n                    \r\n                        <Button full rounded style={{minWidth:'50%',alignSelf:'center',padding:10,backgroundColor:AppConstantsValues.COLORS.primaryColor}}\r\n                        onPress={() => navigation.navigate(\"Sign Up for Volunteers\")}>\r\n                            <Text style={{color:'white',alignSelf:'center'}}>Volunteer</Text>\r\n                        </Button>\r\n                        <Button full rounded style={{minWidth:'50%',alignSelf:'center',padding:10,backgroundColor:AppConstantsValues.COLORS.primaryColor}}\r\n                        onPress={() => navigation.navigate(\"Sign Up for Chapter Heads\")}>\r\n                            <Text style={{color:'white',alignSelf:'center'}}>Chapter head</Text>\r\n                        </Button>\r\n                        <Button full rounded style={{minWidth:'50%',alignSelf:'center',padding:10,backgroundColor:AppConstantsValues.COLORS.primaryColor}}\r\n                        onPress={() => navigation.navigate(\"Sign Up for Admins\")}>\r\n                            <Text style={{color:'white',alignSelf:'center'}}>Admin</Text>\r\n                        </Button>\r\n                    </View>\r\n                  \r\n                    <View style={{marginTop:30,marginBottom:20,justifyContent:'center',flex:1}}> \r\n                        <Text style={{alignSelf:'center'}}>By continuing you have agreed to the</Text>\r\n                        <Text style={{alignSelf:'center'}}>Terms of Service and Privacy Policy</Text>\r\n                        <View style={{flexDirection:'row',alignContent:'center',alignItems:'center',justifyContent:'space-evenly'}}>\r\n                            <Button  transparent style={{alignSelf:'center'}} onPress={() => openLink(\"https://www.websitepolicies.com/policies/view/UeRqjtBl\")}>\r\n                                <Text style={{color:AppConstantsValues.COLORS.linkColor}}>Terms of Service</Text>\r\n                            </Button>\r\n                            <Button  transparent style={{alignSelf:'center'}} onPress={() => openLink(\"https://horizon-networks.flycricket.io/privacy.html\")}>\r\n                                <Text style={{color:AppConstantsValues.COLORS.linkColor}}>Privacy Policy</Text>\r\n                            </Button>\r\n                        </View>\r\n                        \r\n                    </View>\r\n                    \r\n                </ScrollView>\r\n               \r\n                <Modal visible={this.state.showChaptersModal} animationType=\"slide\">\r\n                    <StatusBar/>\r\n                    <View style={{flex:1}}>\r\n                    \r\n                    <Header transparent style = {{ height: 40, backgroundColor: AppConstantsValues.COLORS.primaryColor, shadowColor: 'transparent'}}>\r\n                        <Left>\r\n                            <Button transparent  onPress = {() => this.setState({showChaptersModal:!this.state.showChaptersModal})}>\r\n                                <FontAwesome5 name=\"angle-down\" style={{ color: 'white', fontSize: 30,paddingHorizontal:10 }} />\r\n                               \r\n                            </Button>\r\n                        </Left>\r\n                        <Body>\r\n                            <Title style = {{color:  'white'}}>Chapters</Title>\r\n                        </Body>\r\n                        <Right/>\r\n                    </Header>\r\n                    <Text style={{paddingHorizontal:5,alignSelf:'center',fontSize:15}}><Text style={{fontWeight:'bold'}}>Click</Text> your state or country as your chapter</Text>\r\n                    <Text style={{paddingHorizontal:10,alignSelf:'center',fontSize:14}}><Text style={{textDecorationLine:'underline',fontWeight:'bold'}}>Search</Text> then click on <Text style={{textDecorationLine:'underline',fontWeight:'bold'}}>where you live</Text> in the list</Text>\r\n                    <SearchBar lightTheme={true} autoFocus={true} placeholder=\"Your state or country (California, India, etc.)\" onChangeText={text => {this.setState({searchText:text});this.searchFilterFunction(text)}} value={this.state.searchText}/>\r\n                    \r\n                    <FlatList scrollIndicatorInsets={{right:1}}\r\n                    style={{flex:1,margin:15}}\r\n                    data={this.state.chaptersList}\r\n                    keyExtractor={() => Math.random(0,10000)}\r\n                    keyboardShouldPersistTaps='handled'\r\n                    renderItem={({item,index}) => {\r\n                        console.log(item)\r\n                        return(\r\n                           \r\n                                <ListItem onPress = {() => this.setState({chapter:item,showChaptersModal:false})}>\r\n                                    <Left>\r\n                                        <Text style={{fontSize:15}}>{item}</Text>\r\n                                    </Left>\r\n                                    <Right>\r\n                                        <Text>Click me!</Text>\r\n                                    </Right>\r\n                                    \r\n                                </ListItem>\r\n                           \r\n                            \r\n                        )\r\n                    }}\r\n                    />\r\n                    \r\n                    </View>\r\n                </Modal>\r\n            </View>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:null,\r\n            password:null,\r\n            chapter:null,\r\n            ready:false,\r\n            chaptersList:[],\r\n            showChaptersModal:false\r\n        };\r\n        \r\n      }\r\n    \r\n    async componentDidMount(){\r\n      \r\n        await this.setUp()\r\n    }\r\n\r\n    setUp = async () => {\r\n        if(await this.connectToInternet()){\r\n            await this.getChaptersList()\r\n            this.setState({ready:true})\r\n        }else{\r\n            alert(\"No Internet Detected\")\r\n        }\r\n    }\r\n\r\n    getChaptersList = async() => {\r\n        Firebase.database().ref(\"/ChaptersList\").once('value').then(snapshot => {\r\n            const data = snapshot.val()\r\n            const chaptersList = Object.values(data)\r\n            console.log(chaptersList)\r\n            this.setState({chaptersList:chaptersList})\r\n        })\r\n    }\r\n\r\n    connectToInternet = async() => {\r\n        return await AppConstantsValues.checkInternet()\r\n    }\r\n    forgotPassword = (email) =>{\r\n        if(email == null || email == \"\"){\r\n            alert(\"Please enter your email above\\nThen click forgot password\")\r\n        }else{\r\n            try{\r\n                Firebase.auth().sendPasswordResetEmail(email).then(alert(\"Password reset email sent\\nMake sure to check your junk\")).catch(e => {alert(e.toString(e))})\r\n            }catch(e){\r\n                alert(e.toString(e))\r\n            }\r\n        }\r\n        \r\n        \r\n    }\r\n    login = async (emailIn,passwordIn,chapter) => {\r\n        if(emailIn == null || emailIn == \"\" || passwordIn == null || passwordIn == \"\"){\r\n            alert(\"Please fill all fields\")\r\n        }else{\r\n            let email = emailIn.trim()\r\n            let password = passwordIn.trim()\r\n            Firebase.auth().signInWithEmailAndPassword(email,password).catch(error => {\r\n                alert(error.toString(error))\r\n            })\r\n        }\r\n    }\r\n    render(){\r\n        const { navigation } = this.props;\r\n        if(this.state.ready == false){\r\n            return(\r\n                <View style={{flex:1,margin:20}}>\r\n                    <Spinner color={AppConstantsValues.COLORS.primaryColor}/>\r\n                    <Button block style={{alignSelf:'center',backgroundColor:AppConstantsValues.COLORS.primaryColor}} onPress={() => this.setUp()}>\r\n                        <Text style={{color:AppConstantsValues.COLORS.textInButtonColor}}>Try again!</Text>\r\n                    </Button>\r\n                </View>\r\n            )\r\n        }\r\n        return(\r\n            <SafeAreaView style={{flex:1}}>\r\n                <StatusBar/>\r\n                <ScrollView style={{flex:1,padding:20,paddingBottom:40}} scrollIndicatorInsets={{right:1}}>\r\n                    <StatusBar/>\r\n                    <Text style={{fontStyle:'italic',fontWeight:'bold',fontSize:17}}>If you have NEVER had an account please click \"I'm new!\"</Text>\r\n                    <Text>If you have an account login</Text>\r\n                    <Form>\r\n                        <Item style={{marginVertical:10}}> \r\n                        <Input onChangeText={text => this.setState({email:text})} placeholder=\"Email\" autoCapitalize={'none'}\r\n                        autoCorrect={false}\r\n                        textContentType={'emailAddress'}/>\r\n                        </Item>\r\n                        <Item style={{marginVertical:10}}>\r\n                        <Input onChangeText={text => this.setState({password:text})} placeholder=\"Password\" autoCapitalize={'none'}\r\n                        autoCorrect={false}\r\n                        secureTextEntry={true}\r\n                        textContentType={'password'}/>\r\n                        </Item>\r\n                       \r\n                    </Form>\r\n                    <Button full rounded style={{width:'50%',alignSelf:'center',marginVertical:10,padding:10,backgroundColor:AppConstantsValues.COLORS.primaryColor}}\r\n                    onPress={() => this.login(this.state.email,this.state.password,this.state.chapter)}>\r\n                        <Text style={{color:'white'}}>Login</Text>\r\n                    </Button>\r\n                    <Button full rounded style={{width:'50%',alignSelf:'center',padding:10,backgroundColor:AppConstantsValues.COLORS.primaryColor}}\r\n                    onPress={() => navigation.navigate(\"Sign Up\")}>\r\n                        <Text style={{color:'white',alignSelf:'center'}}>I'm new!</Text>\r\n                    </Button>\r\n                    <Button full rounded style={{width:'50%',alignSelf:'center',marginVertical:10,padding:10,backgroundColor:AppConstantsValues.COLORS.primaryColor}}\r\n                    onPress={() => this.forgotPassword(this.state.email)}>\r\n                        <Text style={{color:'white'}}>Forgot Password?</Text>\r\n                    </Button>\r\n\r\n                    {/* <View style={{flexDirection:'column',justifyContent:'center',alignItems:'center',marginTop:25}}>\r\n                        <TouchableOpacity onPress={() => Linking.openURL(\"https://apps.apple.com/ph/app/horizon-networks-senior-games/id1558778490\")}>\r\n                            <Image source={require(\"../assets/DownloadApple.png\")} style={{height:Dimensions.get('window').height * 0.075,width:400}} resizeMode=\"contain\"/>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity onPress={() => Linking.openURL(\"https://play.google.com/store/apps/details?id=com.aparson.horizonnetworks\")}>\r\n                            <Image source={require(\"../assets/google-play-badge (1).png\")} style={{height:Dimensions.get('window').height * 0.1,width:400}} resizeMode=\"contain\"/>\r\n                        </TouchableOpacity>\r\n                        \r\n                    </View> */}\r\n                    \r\n                    <View style={{marginTop:25,marginBottom:20,justifyContent:'center'}}> \r\n                        <Text style={{alignSelf:'center'}}>By continuing you have agreed to the</Text>\r\n                        <Text style={{alignSelf:'center'}}>Terms of Service and Privacy Policy</Text>\r\n                        <View style={{flexDirection:'row',alignContent:'center',alignItems:'center',justifyContent:'space-evenly'}}>\r\n                            <Button transparent style={{alignSelf:'center'}} onPress={() => openLink(\"https://www.websitepolicies.com/policies/view/UeRqjtBl\")}>\r\n                                <Text style={{color:AppConstantsValues.COLORS.linkColor}}>Terms of Service</Text>\r\n                            </Button>\r\n                            <Button transparent style={{alignSelf:'center'}} onPress={() => openLink(\"https://horizon-networks.flycricket.io/privacy.html\")}>\r\n                                <Text style={{color:AppConstantsValues.COLORS.linkColor}}>Privacy Policy</Text>\r\n                            </Button>\r\n                        </View>\r\n                        \r\n                    </View>\r\n                    \r\n                </ScrollView>\r\n               \r\n            </SafeAreaView>\r\n        )\r\n    }\r\n\r\n\r\n}","import { StatusBar } from 'expo-status-bar';\r\nimport React,{useEffect,useState,useReducer} from 'react';\r\nimport { StyleSheet, Text, View,TouchableWithoutFeedback, Keyboard,ScrollView,Dimensions,Alert,Platform,TouchableOpacity} from 'react-native';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Modal from 'modal-react-native-web';\r\nimport Firebase from '../firebase'\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport { Container, Header, Content, Form, Item, Input,Button,Spinner,Card, CardItem,Body,ListItem,Textarea } from 'native-base';\r\n\r\nimport { Ionicons,Entypo } from '@expo/vector-icons';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\n\r\nimport * as AppConstantsValues from '../Constants'\r\n\r\nimport {COLORS,STYLEVALS} from '../Constants'\r\nimport {LinearGradient} from 'expo-linear-gradient'\r\n\r\nconst daysToDownloadForum = -1\r\nconst amountOfMsPerDay = 86400000\r\nconst width = Dimensions.get('window').width;\r\nconst height = Dimensions.get('window').height;\r\nconst searchResultCardColorStart = \"#FFAE5D\"\r\n\r\n\r\n\r\n\r\nfunction CreateEvent({route,navigation}){\r\n    const [isConnected,setIsConnected] = useState(false)\r\n\r\n    const [name,setName] = useState(null)\r\n\r\n    const [volunteerLimit,setVolunteerLimit] = useState(null)\r\n    const [participantLimit,setParticipantLimit] = useState(null)\r\n    const [detail,setDetail] = useState(null)\r\n\r\n    \r\n    const [eventDate,setEventDate] = useState(new Date())\r\n    const [eventStartTime,setEventStartTime] = useState(new Date())\r\n    const [eventEndTime,setEventEndTime] = useState(new Date())\r\n    \r\n    const [eventDateWeb,setEventDateWeb] = useState(\"1/1/2021\")\r\n    const [eventStartTimeWeb,setEventStartTimeWeb] = useState(\"11:01:00 PM\")\r\n    const [eventEndTimeWeb,setEventEndTimeWeb] = useState(\"11:02:00 PM\")\r\n \r\n    const [showDatePicker,setShowDatePicker] = useState(false)\r\n    const [showStartTimePicker,setShowStartTimePicker] = useState(false)\r\n    const [showEndTimePicker,setShowEndTimePicker] = useState(false)\r\n    \r\n   const [link,setLink] = useState(null)\r\n   const [underReview,setUnderReview] = useState(true)\r\n\r\n   const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\r\n\r\n   \r\n\r\n    const clearAll = () => {\r\n        setName(\"\")\r\n   \r\n        setVolunteerLimit(\"\")\r\n        setParticipantLimit(\"\")\r\n        setDetail(\"\")\r\n   \r\n        setEventDateWeb(\"1/1/2021\")\r\n        setEventStartTimeWeb(\"11:01:00 PM\")\r\n        setEventEndTimeWeb(\"11:02:00 PM\")\r\n        \r\n        setLink(\"\")\r\n        setUnderReview(false)\r\n       \r\n      \r\n    }\r\n\r\n    \r\n  \r\n\r\n    useEffect(() =>{\r\n        getInternet()\r\n    },[])\r\n\r\n    const getInternet = async () => {\r\n        await NetInfo.fetch().then(result => {\r\n            setIsConnected(result.isConnected)\r\n        })\r\n    }\r\n\r\n    const sendToDB = async() => {\r\n        if(name == null || name == \"\" || detail == \"\" || detail == null || eventDateWeb == null || eventStartTimeWeb== null || eventEndTimeWeb== null || volunteerLimit == null || participantLimit == null || volunteerLimit == \"\" || participantLimit == \"\"){\r\n            alert(\"Please fill all fields\")\r\n            setUnderReview(true)\r\n        }else{\r\n            let intVLimit = parseInt(volunteerLimit)\r\n            let intPLimit = parseInt(participantLimit)\r\n            await Firebase.database().ref(\"/UserMetaData/\" + Firebase.auth().currentUser.uid).once('value').then(snapshot =>{\r\n                const chapter = snapshot.val().Chapter\r\n                Firebase.database().ref(chapter + \"/Events\").push({\r\n                    EventName : name,\r\n                    EventVolunteerLimit : intVLimit,\r\n                    EventParticipantLimit : intPLimit,\r\n                    EventDetails : detail,\r\n                    EventDate : eventDateWeb,\r\n                    EventStartTime : eventStartTimeWeb,\r\n                    EventEndTime : eventEndTimeWeb,\r\n                    EventLink : link,\r\n                    TimeStamp: new Date().toLocaleDateString(),\r\n                    VolunteersSignedUp:0,\r\n                    ParticipantsSignedUp:0,\r\n                    Locked:false,\r\n                    EventComplete:false\r\n                }).catch(error => alert(error.toString(error)))\r\n                .then(alert(\"Event is live!\\nYou can press clear all now, we left it in case you want to schedule another day with the same stuff.\"))\r\n                .then(setUnderReview(true))\r\n                // Firebase.database().ref(chapter +  \"/UserUIDs/\" ).once('value').then(snapshot => {\r\n                //     const UIDs = snapshot.val()\r\n                //     let pushTokens = []\r\n                //     if(UIDs != null){\r\n                //         const uidArr = Object.keys(UIDs)\r\n                //         console.log(uidArr)\r\n                //         Promise.all(\r\n                //             uidArr.map(async uid => {\r\n                //                 await Firebase.database().ref(\"UserPushTokens/\" + uid).once('value').then(snapshot => {\r\n                //                     if(snapshot.val() != null){\r\n                //                         pushTokens.push(snapshot.val())\r\n                //                     }\r\n                //                 })\r\n                //             })\r\n                //         ).catch(error => {\r\n                //             console.log(error)\r\n                //         }).then(() => {\r\n                //             for(var x = 0; x < pushTokens.length; x++){\r\n                //                 sendPushNotificationForEvent(pushTokens[x])\r\n                //                 console.log(\"sent push to\", pushTokens[x])\r\n                //             }\r\n                //         })\r\n                        \r\n                        \r\n                //     }\r\n                // })\r\n            })\r\n        }\r\n        \r\n    }\r\n   \r\n    \r\n    if(!isConnected){\r\n        return(\r\n            <View style={{flex:1,margin:20}}>\r\n                <Spinner/>\r\n                <Button rounded style={{alignSelf:'center'}} onPress={() => getInternet()}>\r\n                    <Text>Try again!</Text>\r\n                </Button>\r\n            </View>\r\n        )\r\n    }\r\n    return(\r\n    <LinearGradient colors={[COLORS.backgroundColor, COLORS.backgroundColorFade ]}  style={{flex:1}}>\r\n        <ScrollView style={{flex:1}}  contentContainerStyle={{maxWidth:1000, flexGrow: 1,alignSelf:'center' }} scrollIndicatorInsets={{right:1}}>\r\n        <View style={{marginVertical:15,marginHorizontal:20, borderRadius: STYLEVALS.borderRadius,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n            <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                <View>\r\n                    <Item>\r\n                        <Input\r\n                    \r\n                            blurOnSubmit={true}\r\n                            value={name}\r\n                            placeholder=\"Event Name\"\r\n                            \r\n                                onFocus={() => setUnderReview(true)}\r\n                            onChangeText={(value) => setName(value)} \r\n                            />\r\n                    </Item>\r\n                    <Button transparent style={{zIndex:10,elevation:0,right:10,bottom:0,position:'absolute',marginBottom:65}} onPress={() => Keyboard.dismiss()}>\r\n                            <Text style={{color:\"blue\"}}>Done</Text>\r\n                        </Button>\r\n                    <Textarea rowSpan={8} \r\n                    onFocus={() => setUnderReview(true)}\r\n                        bordered placeholder=\"Event Information\"\r\n                        value = {detail}\r\n                        onChangeText={text => setDetail(text)}\r\n                    />\r\n                    <Item style={{marginVertical:10}}> \r\n                        <Input value={link} onFocus={() => setUnderReview(true)} onChangeText={text => setLink(text)} placeholder=\"Zoom Link (if needed)\" clearButtonMode=\"while-editing\"/>\r\n                    </Item>\r\n                </View>\r\n\r\n\r\n            </View>\r\n        </View>\r\n        <View style={{marginVertical:15,marginHorizontal:20, borderRadius: STYLEVALS.borderRadius}}>\r\n            <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                <View>\r\n                    \r\n                        <View style={{flexDirection:'column'}}>\r\n                            <Text>Date MUST be in format X/X/XXX (first two X's for month and day can be single or double digit, do not include extra 0) examples: 3/16/2021, 11/6/2021</Text>\r\n                            <Item style={{marginVertical:10}}> \r\n                                <Input value={eventDateWeb} onFocus={() => setUnderReview(true)} onChangeText={text => setEventDateWeb(text)} placeholder=\"Date\" clearButtonMode=\"while-editing\"/>\r\n                            </Item>\r\n                            <Text>Start time MUST be in format X:XX:XX PM (hour,minutes,seconds), examples: 11:01:00 PM, 1:30:00 AM</Text>\r\n                            <Item style={{marginVertical:10}}> \r\n                                <Input value={eventStartTimeWeb} onFocus={() => setUnderReview(true)} onChangeText={text => setEventStartTimeWeb(text)} placeholder=\"Start Time\" clearButtonMode=\"while-editing\"/>\r\n                            </Item>\r\n                            <Text>End time MUST be in format X:XX:XX PM (hour,minutes,seconds), examples: 11:01:00 PM, 1:30:00 AM</Text>\r\n                            <Item style={{marginVertical:10}}> \r\n                                <Input value={eventEndTimeWeb} onFocus={() => setUnderReview(true)} onChangeText={text => setEventEndTimeWeb(text)} placeholder=\"End Time\" clearButtonMode=\"while-editing\"/>\r\n                            </Item>\r\n                        </View>\r\n                    \r\n                        \r\n                        <Text style={{alignSelf:'center'}}><Text style={{fontWeight:'bold'}}>Note:</Text> Avoid using 12am or 12pm for system</Text>\r\n                </View>\r\n            </View>\r\n        </View>\r\n        <View style={{marginVertical:15,marginHorizontal:20, borderRadius: STYLEVALS.borderRadius}}>\r\n            <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                    <View style={{width:'100%',justifyContent:'space-evenly'}}>\r\n                        \r\n                        <Item>\r\n                            <Text>Volunteer Limit: </Text>\r\n                            <Input\r\n                            blurOnSubmit={true}\r\n                            placeholder=\"...\"\r\n                            keyboardType=\"number-pad\"\r\n                            value={volunteerLimit}\r\n                            onFocus={() => setUnderReview(true)}\r\n                            onChangeText={(text) => setVolunteerLimit(text)}\r\n                            />\r\n                        </Item>\r\n                        <Item>\r\n                            <Text>Participant Limit: </Text>\r\n                            <Input\r\n                            blurOnSubmit={true}\r\n                            placeholder=\"...\"\r\n                            keyboardType=\"number-pad\"\r\n                            value={participantLimit}\r\n                            onFocus={() => setUnderReview(true)}\r\n                            onChangeText={(text) => setParticipantLimit(text)}\r\n                            />\r\n                        </Item>\r\n                       \r\n                    </View>\r\n            </View>\r\n     \r\n        \r\n            \r\n            {underReview ?  \r\n                <Button full rounded warning style={{margin:20}} onPress={() => {alert(\"Please carefully review the event\\nThen Submit\");setUnderReview(false)}}>\r\n                <Text style={{color:'white'}}>Review Event</Text>\r\n            </Button>\r\n            :\r\n            <Button full rounded success style={{margin:20}} onPress={() => sendToDB()}>\r\n                <Text style={{color:'white'}}>Submit Event</Text>\r\n            </Button>\r\n            }   \r\n\r\n        <Button full rounded danger style={{margin:20,marginTop:20}} onPress={() => clearAll()}>\r\n            <Text style={{color:'white'}}>Clear all</Text>\r\n        </Button>\r\n            \r\n            \r\n        \r\n            </View>\r\n        <Text style={{alignSelf:'center',textAlign:'center',marginTop:150,marginBottom:20}}>Create Events for Seniors and Volunteers to interact in.</Text>\r\n        </ScrollView>\r\n    </LinearGradient>\r\n    )\r\n  }\r\n\r\n\r\n\r\n//   async function sendPushNotificationForEvent(expoPushToken) {\r\n//     const message = {\r\n//       to: expoPushToken,\r\n//       sound: 'default',\r\n//       title: 'There is a new Covid Networks Event!',\r\n//       body: 'Head over to Covid Networks!',\r\n      \r\n//     };\r\n  \r\n//     await fetch('https://exp.host/--/api/v2/push/send', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         Accept: 'application/json',\r\n//         'Accept-encoding': 'gzip, deflate',\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify(message),\r\n//     });\r\n//   }\r\n\r\n  function CreateEventNav({navigation}){\r\n    \r\n    const Stack = createStackNavigator()\r\n    console.log('your squestionnav running')\r\n    return(\r\n        \r\n        <Stack.Navigator initialRouteName=\"Create Event\">\r\n            <Stack.Screen name=\"Create Event\" component={CreateEvent} \r\n             options={{\r\n          \r\n              headerStyle: {\r\n                backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n               \r\n              },\r\n              headerTintColor: 'white',\r\n              \r\n              headerLeft: () => <TouchableOpacity transparent onPress={() => navigation.openDrawer()}><Entypo style={{  color: 'white', marginLeft: 15, fontSize: 30, marginTop: 7 }} name='menu'/></TouchableOpacity>\r\n            }}\r\n          />\r\n            \r\n            \r\n        </Stack.Navigator>\r\n    )\r\n  }\r\n  \r\n  \r\n  export default CreateEventNav","import { StatusBar } from 'expo-status-bar';\r\nimport React,{useEffect,useState} from 'react';\r\nimport { StyleSheet, Text, View,FlatList,RefreshControl,TouchableOpacity,Clipboard,Alert,Platform,Linking,ScrollView,Dimensions,SafeAreaView} from 'react-native';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Modal from 'modal-react-native-web';\r\nimport Firebase from '../firebase'\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport { Container, Header, Content, Form, Item, Input,Button,Spinner,Card, CardItem,Body,ListItem,Right,Left,CheckBox, Textarea, InputGroup } from 'native-base';\r\n\r\nimport { MaterialIcons,MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { Ionicons,FontAwesome,FontAwesome5 } from '@expo/vector-icons';\r\nimport { Octicons } from '@expo/vector-icons';\r\nimport { EvilIcons,Entypo } from '@expo/vector-icons';\r\n\r\nimport {COLORS,STYLEVALS} from '../Constants'\r\nimport { withNavigation } from 'react-navigation';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport{LinearGradient} from 'expo-linear-gradient'\r\n  \r\nfunction compareLocaleTimeString(first,second){\r\n    //first is bigger => true, second is bigger => false\r\n    console.log(\"COMPARING TIMES: \",first,second)\r\n    let firstPMAM = (first.split(\" \")[1] == \"PM\")\r\n    let secondPMAM = (second.split(\" \")[1] == \"PM\")\r\n    console.log(firstPMAM,secondPMAM)\r\n    if(firstPMAM == secondPMAM ){\r\n        let firstArr = first.split(\":\")\r\n        let secondArr = second.split(\":\")\r\n        console.log(firstArr,secondArr,parseInt(firstArr[0]),parseInt(secondArr[0]),typeof parseInt(firstArr[0]),typeof parseInt(secondArr[0]))\r\n        if(parseInt(firstArr[0]) > parseInt(secondArr[0])){\r\n            console.log(\"First is bigger hours\")\r\n            return true\r\n        }else if(parseInt(firstArr[0]) < parseInt(secondArr[0])){\r\n            console.log(\"Second is bigger hours\")\r\n            return false\r\n        }else{\r\n            if(parseInt(firstArr[1]) >= parseInt(secondArr[1])){\r\n                console.log(\"First is bigger mins\")\r\n                return true\r\n            }else if(parseInt(firstArr[1]) < parseInt(secondArr[1])){\r\n                console.log(\"second is bigger hours\")\r\n                return false\r\n            }\r\n        }\r\n    }else{\r\n        if(firstPMAM){ //if the first time has pm at the end\r\n            console.log(\"FIRST IS BIGGER PM\")\r\n            return true\r\n        }else{\r\n            console.log(\"SEcond IS BIGGER PM\")\r\n            return false\r\n        }\r\n    }\r\n}\r\n\r\nclass AllEvents extends React.Component {\r\n    firebaseRef\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          chapter:null,\r\n          ready:false,\r\n          admin:false,\r\n          eventData:[],\r\n          refreshing:false,\r\n          userLocation:null,\r\n          \r\n        };\r\n        this.firebaseRef = null\r\n      }\r\n    \r\n    async componentDidMount(){\r\n        let chapter = null\r\n        await Firebase.database().ref(\"UserMetaData/\" + Firebase.auth().currentUser.uid + \"/Chapter\").once('value').then(snapshot => {\r\n            chapter =  snapshot.val()\r\n        })\r\n      \r\n        \r\n        this.firebaseRef = Firebase.database().ref(\r\n            `${chapter}/Events/`\r\n            );\r\n        this.setState({chapter:chapter})\r\n        if((await NetInfo.fetch()).isConnected){\r\n            this.firebaseRef.on(\"value\", this.onFirebaseValueChanged);\r\n           \r\n            this.setState({ready:true})\r\n            \r\n        }else{\r\n            alert(\"No Internet Detected\")\r\n        }\r\n       \r\n    }\r\n    componentWillUnmount() {\r\n        // detach all listeners to this reference when component unmounts (very important!)\r\n        console.log('unmounting previosu questions')\r\n        this.firebaseRef.off();\r\n       \r\n      }\r\n   \r\n\r\n    connectToInternet = async() => {\r\n        let chapter = null\r\n        await Firebase.database().ref(\"UserMetaData/\" + Firebase.auth().currentUser.uid + \"/Chapter\").once('value').then(snapshot => {\r\n            chapter =  snapshot.val()\r\n        })\r\n       \r\n        this.setState({chapter:chapter})\r\n        if((await NetInfo.fetch()).isConnected){\r\n            this.firebaseRef = Firebase.database().ref(\r\n                `${chapter}/Events/`\r\n                );\r\n            this.firebaseRef.on(\"value\", this.onFirebaseValueChanged);\r\n            this.setState({ready:true})\r\n            \r\n        }else{\r\n            alert(\"No Internet Detected\")\r\n        }\r\n    }\r\n\r\n    onFirebaseValueChanged = snapshot => {\r\n        const dataDB = snapshot.val()\r\n        let dataOut = []\r\n        if(dataDB != null){\r\n            let keys = Object.keys(dataDB)\r\n    \r\n            let data = Object.values(dataDB)\r\n            \r\n            for(var x = 0; x < data.length;x++){\r\n                let parentKey = keys[x]\r\n                let event = data[x]\r\n                let currentDate = new Date()\r\n                let eventDateFull = new Date(event.EventDate)\r\n                \r\n                event[\"EventIsLive\"] = false\r\n                event[\"EventCompleteView\"] = false\r\n\r\n                if(eventDateFull.getDate() == currentDate.getDate()){\r\n                    console.log(\"SAME DAY\")\r\n                    compareLocaleTimeString(currentDate.toLocaleTimeString(),event.EventStartTime)\r\n                    compareLocaleTimeString(event.EventEndTime,currentDate.toLocaleTimeString())\r\n                    console.log(compareLocaleTimeString(currentDate.toLocaleTimeString(),event.EventStartTime), compareLocaleTimeString(event.EventEndTime,currentDate.toLocaleTimeString()),\"COMPARING END AND CURRENT TIME for: \",event.EventName)\r\n                    if(compareLocaleTimeString(currentDate.toLocaleTimeString(),event.EventStartTime) && compareLocaleTimeString(event.EventEndTime,currentDate.toLocaleTimeString())){\r\n                        console.log(\"EVENT IS LIVE\",event.EventName)\r\n                        event[\"EventIsLive\"] = true\r\n                    }else if(!(compareLocaleTimeString(event.EventEndTime,currentDate.toLocaleTimeString()))){\r\n                        console.log(\"EVENT IS OVER\",event.EventName)\r\n                        \r\n                        event[\"EventCompleteView\"] = true\r\n                    }\r\n                }else if(eventDateFull.getDate() < currentDate.getDate()){\r\n                    \r\n                    console.log(\"EVENT IS OVER DAYS\",event.EventName)\r\n                    event[\"EventCompleteView\"] = true\r\n                }\r\n\r\n                //find if user is signed up\r\n                let userIsSignedUp = false\r\n                console.log(event.Participants,event.Volunteers)\r\n                if(event.Participants != undefined){\r\n                    let uidSignedUp = (Object.keys(event.Participants))\r\n                    userIsSignedUp = (uidSignedUp.includes(Firebase.auth().currentUser.uid))\r\n                }\r\n                if(event.Volunteers != undefined){\r\n                    let uidSignedUp = (Object.keys(event.Volunteers))\r\n                    userIsSignedUp = (uidSignedUp.includes(Firebase.auth().currentUser.uid))\r\n                }\r\n                \r\n                event[\"UserIsSignedUp\"] = userIsSignedUp\r\n                dataOut.push({parentKey:parentKey,event:event})\r\n                console.log(event)\r\n                \r\n            }\r\n            this.setState({eventData:dataOut.reverse()})\r\n        }else{\r\n            this.setState({eventData:[]})\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n\r\n  \r\n\r\n    \r\n    // componentDidUpdate(prevProps) {\r\n    //     if(prevProps.route !== this.props.route) {\r\n    //         try{\r\n    //             const needsRefresh = this.props.route.params.refreshParentPage\r\n            \r\n    //             if(needsRefresh != undefined && needsRefresh != null && needsRefresh){\r\n    //                 this.refresh()\r\n    //             }\r\n                \r\n    //         }catch(e){\r\n    //             console.log(e)\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    render(){\r\n   \r\n        if(this.state.ready == false){\r\n            return(\r\n                <View style={{flex:1,margin:20}}>\r\n                    <Spinner/>\r\n                    <Button rounded style={{alignSelf:'center'}} onPress={() => this.connectToInternet()}>\r\n                        <Text>Try again!</Text>\r\n                        \r\n                    </Button>\r\n                    <Text>There might not be anything here yet too...</Text>\r\n                </View>\r\n            )\r\n        }\r\n        \r\n            return(\r\n                <LinearGradient colors={[COLORS.backgroundColor,COLORS.backgroundColorFade]} style={{flex:1}}>\r\n                <FlatList scrollIndicatorInsets={{right:1}}\r\n             \r\n                style={{flex:1,padding:20,alignSelf:'center'}}\r\n                data={this.state.eventData}\r\n                keyExtractor={() => Math.random(0,10000) + \"\"}\r\n                renderItem={({item,index}) => {\r\n                    \r\n                    //if locked show something else\r\n                    let stateOfEvent = \"Ended\"\r\n                        const event = item.event\r\n                        if(item != null && item != undefined){\r\n                            let backgroundColorTR = COLORS.moneyColor\r\n                            if(event.EventCompleteView && this.props.route.params.userType == \"Head\"){\r\n                                backgroundColorTR = \"grey\"\r\n                                stateOfEvent = \"Needs Attention\"\r\n                            }\r\n                            else if(event.EventCompleteView){\r\n                                backgroundColorTR = \"grey\"\r\n                                stateOfEvent = \"Ended\"\r\n                            }else{\r\n                                if(event.Locked){\r\n                                    backgroundColorTR = \"grey\"\r\n                                    stateOfEvent = \"Locked\"\r\n                                }else{\r\n                                    if(event.EventIsLive){\r\n                                        backgroundColorTR = COLORS.moneyColor\r\n                                        stateOfEvent = \"Live\"\r\n                                    }else{\r\n                                        backgroundColorTR = '#E33DCC'\r\n                                        stateOfEvent = \"Upcoming\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        let backgroundGoing = \"red\"\r\n                        let goingState = \"No\"\r\n                        if(event.UserIsSignedUp){\r\n                            backgroundGoing = COLORS.moneyColor\r\n                            goingState = \"Yes\"\r\n                        }\r\n                        \r\n                        \r\n                        console.log(event.EventName,stateOfEvent,backgroundColorTR)\r\n                        if(this.props.route.params.userType == \"Senior\"){\r\n                            return(\r\n                                <TouchableOpacity onPress={() => {this.props.navigation.navigate(\"Event Page\",{userType:this.props.route.params.userType,event:event,parentKey:item.parentKey,chapter:this.state.chapter,stateOfEvent:stateOfEvent,stateOfEventColor:backgroundColorTR})}}>\r\n                                    <View style={{borderRadius:STYLEVALS.borderRadius,marginVertical:10}}>\r\n                                        <LinearGradient colors={[COLORS.cardColor,COLORS.cardColor, COLORS.cardColor, COLORS.cardColor, COLORS.cardColor]} style={{ flex: 1,borderRadius:STYLEVALS.borderRadius,padding:10}}>\r\n                                            <View style={{flexDirection:'row',marginBottom:5}}>\r\n                                                <Left style={{flexDirection:'row'}}>\r\n                                                    <Text style={{fontSize:18,color:COLORS.textColor}}>{event.EventName}</Text>\r\n                                                    <View style={{backgroundColor:backgroundGoing,borderRadius:STYLEVALS.borderRadius,paddingVertical:4,paddingHorizontal:8,marginLeft:10}}>\r\n                                                        <Text style={{color:COLORS.textInButtonColor}}>{goingState}</Text>\r\n                                                    </View>\r\n                                                </Left>\r\n                                                \r\n                                                <View style={{backgroundColor:backgroundColorTR,borderRadius:STYLEVALS.borderRadius,paddingVertical:4,paddingHorizontal:8}}>\r\n                                                    <Text style={{color:COLORS.textInButtonColor}}>{stateOfEvent}</Text>\r\n                                                </View>\r\n                                            </View> \r\n                                            <View style={{flexDirection:'row',justifyContent:'space-between',paddingLeft:20,paddingRight:50,paddingVertical:6,flex:1,alignItems:'center'}}>\r\n                                                <View style={{alignItems:'center'}}>\r\n                                                    <MaterialIcons name=\"date-range\" size={24} color={COLORS.textColor} />\r\n                                                    <Text style={{color:COLORS.textColor}}>{event.EventDate}</Text>\r\n                                                </View>\r\n                                                <View style={{alignItems:'center'}}>\r\n                                                    <MaterialIcons name=\"timelapse\" size={24} color={COLORS.textColor} />\r\n                                                    <Text  style={{color:COLORS.textColor}}>{event.EventStartTime.slice(0,4) + event.EventStartTime.slice(7)} - {event.EventEndTime.slice(0,4) + event.EventEndTime.slice(7)}</Text>\r\n                                                </View>\r\n                                                <View style={{alignItems:'center'}}>\r\n                                                    <FontAwesome name=\"group\" size={24} color={COLORS.textColor} />\r\n                                                    <Text  style={{color:COLORS.textColor}}>{event.ParticipantsSignedUp}/{event.EventParticipantLimit}</Text>\r\n                                                </View>\r\n                                            </View>\r\n                                            <View style={{flexDirection:'row'}}>\r\n                                                <Text style={{color:COLORS.textColor}}>{event.EventDetails}</Text>\r\n                                            </View>\r\n                                            \r\n                                        </LinearGradient>\r\n                                    </View>\r\n                                </TouchableOpacity>\r\n                \r\n                            )\r\n                        }else if(this.props.route.params.userType == \"Volunteer\"){\r\n                            return(\r\n                                <TouchableOpacity  onPress={() => {this.props.navigation.navigate(\"Event Page\",{userType:this.props.route.params.userType,event:event,parentKey:item.parentKey,chapter:this.state.chapter,stateOfEvent:stateOfEvent,stateOfEventColor:backgroundColorTR})}}>\r\n                                    <View style={{borderRadius:STYLEVALS.borderRadius,marginVertical:10}}>\r\n                                        <LinearGradient colors={[COLORS.cardColor,COLORS.cardColor, COLORS.cardColor, COLORS.cardColor, COLORS.cardColor]} style={{ flex: 1,borderRadius:STYLEVALS.borderRadius,padding:10}}>\r\n                                            <View style={{flexDirection:'row',marginBottom:5}}>\r\n                                                <Left style={{flexDirection:'row'}}>\r\n                                                    <Text style={{fontSize:18,color:COLORS.textColor}}>{event.EventName}</Text>\r\n                                                    <View style={{backgroundColor:backgroundGoing,borderRadius:STYLEVALS.borderRadius,paddingVertical:4,paddingHorizontal:8,marginLeft:10}}>\r\n                                                        <Text style={{color:COLORS.textInButtonColor}}>{goingState}</Text>\r\n                                                    </View>\r\n                                                </Left>\r\n                                                \r\n                                                <View style={{backgroundColor:backgroundColorTR,borderRadius:STYLEVALS.borderRadius,paddingVertical:4,paddingHorizontal:8}}>\r\n                                                    <Text style={{color:COLORS.textInButtonColor}}>{stateOfEvent}</Text>\r\n                                                </View>\r\n                                            </View> \r\n                                            <View style={{flexDirection:'row',justifyContent:'space-between',paddingLeft:20,paddingRight:50,paddingVertical:6,flex:1,alignItems:'center'}}>\r\n                                                <View style={{alignItems:'center'}}>\r\n                                                    <MaterialIcons name=\"date-range\" size={24} color={COLORS.textColor} />\r\n                                                    <Text style={{color:COLORS.textColor}}>{event.EventDate}</Text>\r\n                                                </View>\r\n                                                <View style={{alignItems:'center'}}>\r\n                                                    <MaterialIcons name=\"timelapse\" size={24} color={COLORS.textColor} />\r\n                                                    <Text  style={{color:COLORS.textColor}}>{event.EventStartTime.slice(0,4) + event.EventStartTime.slice(7)} - {event.EventEndTime.slice(0,4) + event.EventEndTime.slice(7)}</Text>\r\n                                                </View>\r\n                                                <View style={{alignItems:'center'}}>\r\n                                                    <Ionicons name=\"ios-people\" size={24} color={COLORS.textColor} />\r\n                                                    <Text  style={{color:COLORS.textColor}}>{event.VolunteersSignedUp}/{event.EventVolunteerLimit}</Text>\r\n                                                </View>\r\n                                            </View>\r\n                                            <View style={{flexDirection:'row'}}>\r\n                                                <Text style={{color:COLORS.textColor}}>{event.EventDetails}</Text>\r\n                                            </View>\r\n                                            \r\n                                        </LinearGradient>\r\n                                    </View>\r\n                                </TouchableOpacity>\r\n                            )\r\n                        }else if(this.props.route.params.userType == \"Head\"){\r\n\r\n                        \r\n                            return (\r\n                                <TouchableOpacity  onPress={() => {this.props.navigation.navigate(\"Event Page\",{userType:this.props.route.params.userType,event:event,parentKey:item.parentKey,chapter:this.state.chapter,stateOfEvent:stateOfEvent,stateOfEventColor:backgroundColorTR})}}>\r\n                                <View style={{borderRadius:STYLEVALS.borderRadius,marginVertical:10}}>\r\n                                    <LinearGradient colors={[COLORS.cardColor,COLORS.cardColor, COLORS.cardColor, COLORS.cardColor, COLORS.cardColor]} style={{ flex: 1,borderRadius:STYLEVALS.borderRadius,padding:10}}>\r\n                                        <View style={{flexDirection:'row',marginBottom:5}}>\r\n                                            <Left style={{flexDirection:'row'}}>\r\n                                                <Text style={{fontSize:18,color:COLORS.textColor}}>{event.EventName}</Text>\r\n                                                <View style={{backgroundColor:backgroundGoing,borderRadius:STYLEVALS.borderRadius,paddingVertical:4,paddingHorizontal:8,marginLeft:10}}>\r\n                                                    <Text style={{color:COLORS.textInButtonColor}}>{goingState}</Text>\r\n                                                </View>\r\n                                            </Left>\r\n                                            \r\n                                            <View style={{backgroundColor:backgroundColorTR,borderRadius:STYLEVALS.borderRadius,paddingVertical:4,paddingHorizontal:8}}>\r\n                                                <Text style={{color:COLORS.textInButtonColor}}>{stateOfEvent}</Text>\r\n                                            </View>\r\n                                        </View> \r\n                                        <View style={{flexDirection:'row',justifyContent:'space-between',paddingVertical:6,flex:1,alignItems:'center'}}>\r\n                                            \r\n                                            <View style={{alignItems:'center'}}>\r\n                                                <MaterialIcons name=\"date-range\" size={24} color={COLORS.textColor} />\r\n                                                <Text style={{color:COLORS.textColor}}>{event.EventDate}</Text>\r\n                                            </View>\r\n                                            <View style={{alignItems:'center'}}>\r\n                                                <MaterialIcons name=\"timelapse\" size={24} color={COLORS.textColor} />\r\n                                                <Text  style={{color:COLORS.textColor}}>{event.EventStartTime.slice(0,4) + event.EventStartTime.slice(7)} - {event.EventEndTime.slice(0,4) + event.EventEndTime.slice(7)}</Text>\r\n                                            </View>\r\n                                            <View style={{alignItems:'center'}}>\r\n                                                <FontAwesome name=\"group\" size={24} color={COLORS.textColor}/>\r\n                                                <Text  style={{color:COLORS.textColor}}>{event.ParticipantsSignedUp}/{event.EventParticipantLimit}</Text>\r\n                                            </View>\r\n                                            <View style={{alignItems:'center'}}>\r\n                                                <Ionicons name=\"ios-people\" size={24} color={COLORS.textColor} />\r\n                                                <Text  style={{color:COLORS.textColor}}>{event.VolunteersSignedUp}/{event.EventVolunteerLimit}</Text>\r\n                                            </View>\r\n                                            \r\n                                        </View>\r\n                                        <View style={{flexDirection:'row'}}>\r\n                                            <Text style={{color:COLORS.textColor}}>{event.EventDetails}</Text>\r\n                                        </View>\r\n                                        \r\n                                    </LinearGradient>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                            )\r\n                        }\r\n                    }\r\n                }}\r\n                \r\n                />\r\n                </LinearGradient>\r\n            )\r\n        \r\n        \r\n    }\r\n\r\n\r\n}\r\n\r\nwithNavigation(AllEvents)\r\n\r\n//use same components by passing hard coded params, then just send back multiple navs\r\nexport function ViewEventsNavSenior({navigation}){\r\n    const Stack = createStackNavigator()\r\n    \r\n    return(\r\n        \r\n        <Stack.Navigator>\r\n            <Stack.Screen name=\"Events\" \r\n            initialParams={{userType:\"Senior\"}}\r\n            options={{\r\n        \r\n                headerStyle: {\r\n                  backgroundColor: COLORS.primaryColor,\r\n                \r\n                 \r\n                },\r\n                \r\n                headerTintColor: 'white',\r\n                \r\n                headerLeft: () => <TouchableOpacity transparent onPress={() => navigation.openDrawer()}><Entypo style={{  color: 'white', marginLeft: 15, fontSize: 30, marginTop: 7 }} name='menu'/></TouchableOpacity>\r\n              }}>\r\n            {(props) => <AllEvents  {...props} chapter={props.chapter} />}\r\n        </Stack.Screen>\r\n        <Stack.Screen name = \"Event Page\" component ={ViewEventPage}\r\n            options={({route}) => ({\r\n                headerStyle: {\r\n                    backgroundColor: COLORS.primaryColor,\r\n                },\r\n                headerTintColor: 'white',\r\n                headerShown:true,\r\n                title:route.params.event.EventName,\r\n                headerRight: () => \r\n                <View style={{backgroundColor:route.params.stateOfEventColor,borderRadius:STYLEVALS.borderRadius,paddingVertical:4,paddingHorizontal:8,marginRight:5}}>\r\n                    <Text style={{color:'white'}}>{route.params.stateOfEvent}</Text>\r\n                </View>\r\n                \r\n            })}\r\n            />\r\n            \r\n        </Stack.Navigator>\r\n    )\r\n}\r\n\r\nexport function ViewEventsNavVolunteer({navigation}){\r\n    const Stack = createStackNavigator()\r\n    \r\n    return(\r\n        \r\n        <Stack.Navigator>\r\n            <Stack.Screen name=\"Events\" \r\n            initialParams={{userType:\"Volunteer\"}}\r\n            options={{\r\n        \r\n                headerStyle: {\r\n                  backgroundColor: COLORS.primaryColor,\r\n                 \r\n                },\r\n                headerTintColor: 'white',\r\n                \r\n                headerLeft: () => <TouchableOpacity transparent onPress={() => navigation.openDrawer()}><Entypo style={{  color: 'white', marginLeft: 15, fontSize: 30, marginTop: 7 }} name='menu'/></TouchableOpacity>\r\n              }}>\r\n            {(props) => <AllEvents  {...props} chapter={props.chapter} />}\r\n        </Stack.Screen>\r\n        <Stack.Screen name = \"Event Page\" component ={ViewEventPage}\r\n            options={({route}) => ({\r\n                headerStyle: {\r\n                    backgroundColor: COLORS.primaryColor,\r\n                },\r\n                headerTintColor: 'white',\r\n                headerShown:true,\r\n                title:route.params.event.EventName,\r\n                headerRight: () => \r\n                <View style={{backgroundColor:route.params.stateOfEventColor,borderRadius:STYLEVALS.borderRadius,paddingVertical:4,paddingHorizontal:8,marginRight:5}}>\r\n                    <Text style={{color:'white'}}>{route.params.stateOfEvent}</Text>\r\n                </View>\r\n                \r\n            })}\r\n            />\r\n            \r\n        </Stack.Navigator>\r\n    )\r\n}\r\n\r\nexport function ViewEventsNavHead({navigation}){\r\n    const Stack = createStackNavigator()\r\n \r\n    return(\r\n        \r\n        <Stack.Navigator>\r\n            <Stack.Screen name=\"Events\" \r\n            initialParams={{userType:\"Head\"}}\r\n            options={{\r\n        \r\n                headerStyle: {\r\n                  backgroundColor: COLORS.primaryColor,\r\n                 \r\n                },\r\n                headerTintColor: 'white',\r\n                \r\n                headerLeft: () => <TouchableOpacity transparent onPress={() => navigation.openDrawer()}><Entypo style={{  color: 'white', marginLeft: 15, fontSize: 30, marginTop: 7 }} name='menu'/></TouchableOpacity>\r\n              }}>\r\n            {(props) => <AllEvents  {...props} chapter={props.chapter} />}\r\n        </Stack.Screen>\r\n        <Stack.Screen name = \"Event Page\" component ={ViewEventPage}\r\n            options={({route}) => ({\r\n                headerStyle: {\r\n                    backgroundColor: COLORS.primaryColor,\r\n                },\r\n                headerTintColor: 'white',\r\n                headerShown:true,\r\n                title:route.params.event.EventName,\r\n                headerRight: () => \r\n                <View style={{backgroundColor:route.params.stateOfEventColor,borderRadius:STYLEVALS.borderRadius,paddingVertical:4,paddingHorizontal:8,marginRight:5}}>\r\n                    <Text style={{color:'white'}}>{route.params.stateOfEvent}</Text>\r\n                </View>\r\n                \r\n            })}\r\n            />\r\n            \r\n        </Stack.Navigator>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction incrementVolunteers(pathAllTheWay){\r\n    const reference = Firebase.database().ref(pathAllTheWay)\r\n\r\n    return reference.transaction(currentVolunteers => {\r\n        if(currentVolunteers === null) return 1\r\n        return currentVolunteers +1\r\n    })\r\n\r\n}\r\n\r\nfunction incrementParticipants(pathAllTheWay){\r\n    const reference = Firebase.database().ref(pathAllTheWay)\r\n\r\n    return reference.transaction(currentParticipants => {\r\n        if(currentParticipants === null) return 1\r\n        return currentParticipants +1\r\n    })\r\n\r\n}\r\n\r\nfunction decrementVolunteers(pathAllTheWay){\r\n    const reference = Firebase.database().ref(pathAllTheWay)\r\n\r\n    return reference.transaction(currentVolunteers => {\r\n        if(currentVolunteers === null) return 0\r\n        return currentVolunteers - 1\r\n    })\r\n\r\n}\r\n\r\nfunction decrementParticipants(pathAllTheWay){\r\n    const reference = Firebase.database().ref(pathAllTheWay)\r\n\r\n    return reference.transaction(currentParticipants => {\r\n        if(currentParticipants === null) return 0\r\n        return currentParticipants - 1\r\n    })\r\n\r\n}\r\n\r\nfunction ViewEventPage({route,navigation}){\r\n    const {event} = route.params\r\n    const {parentKey} = route.params\r\n    const {chapter} = route.params\r\n    const {userType} = route.params\r\n    \r\n    const [link,setLink] = useState(event.EventLink)\r\n    const [detail,setDetail] = useState(event.EventDetails)\r\n    const [volunteerLimit,setVolunteerLimit] = useState(event.EventVolunteerLimit + \"\")\r\n    const [seniorLimit,setSeniorLimit] = useState(event.EventParticipantLimit + \"\")\r\n    const [volunteerAmount,setVolunteerAmount] = useState(event.VolunteersSignedUp)\r\n    const [seniorAmount,setSeniorAmount] = useState(event.ParticipantsSignedUp)\r\n\r\n    const [refreshParent,setRefreshParent] = useState(false)\r\n\r\n    const [volunteerDetails,setVolunteerDetails] = useState([])\r\n    const [refreshVolunteerList,setRefreshVolunteerList] = useState(true)\r\n\r\n    const [participantDetails,setParticipantDetails] = useState([])\r\n\r\n    const [isSignedUp,setIsSignedUp] = useState(false)\r\n    const [signedUpInPage,setSignedUpInPage] = useState(false)\r\n\r\n    const [cushionToPullOut,setCushionToPullOut] = useState(3) //days to pull out\r\n\r\n    const [showVolunteerList,setShowVolunteerList] = useState(false)\r\n    const [showSeniorList,setShowSeniorList] = useState(false)\r\n    \r\n    const [showEndEventModal,setShowEndEventModal] = useState(false)\r\n    const [hoursGiven,setHoursGiven] = useState([])\r\n    const [refreshCompleteList,setRefreshCompleteList] = useState(true)\r\n\r\n    useEffect(() => {\r\n        async function getVolunteerList(){\r\n            if(event.Volunteers != undefined && event.Volunteers != null){\r\n                const volunteers = Object.entries(event.Volunteers)\r\n                let dataFlattened = []\r\n              \r\n                for(var x = 0;x < volunteers.length;x++){\r\n                    let name = volunteers[x][1].Name\r\n                    if(name == undefined){\r\n                        name = \"unknown\"\r\n                    }\r\n                    if(volunteers[x][0] == Firebase.auth().currentUser.uid){\r\n                        setIsSignedUp(true)\r\n                    }\r\n                    dataFlattened.push({UID:volunteers[x][0],email:volunteers[x][1].Email,name:name})\r\n                }\r\n                console.log(dataFlattened)\r\n                setVolunteerDetails(dataFlattened)\r\n                fillHoursGiven(dataFlattened)\r\n            }\r\n            if(event.Participants != undefined && event.Participants != null){\r\n                const participants = Object.entries(event.Participants)\r\n                let dataFlattened = []\r\n               \r\n                for(var x = 0;x < participants.length;x++){\r\n                    let name = participants[x][1].Name\r\n                    if(name == undefined){\r\n                        name = \"unknown\"\r\n                    }\r\n                    if(participants[x][0] == Firebase.auth().currentUser.uid){\r\n                        setIsSignedUp(true)\r\n                    }\r\n                    dataFlattened.push({UID:participants[x][0],email:participants[x][1].Email,name:name})\r\n                }\r\n                console.log(dataFlattened)\r\n                setParticipantDetails(dataFlattened)\r\n            }\r\n        }\r\n        allowPullout(event.EventDate,2)\r\n        getVolunteerList()\r\n        \r\n    },[])\r\n\r\n    const lockEventAction = async(userType,chapter,parentKey, setToWhat) =>{\r\n        if(userType == \"Head\"){\r\n            Firebase.database().ref(chapter + \"/Events/\" + parentKey + \"/Locked\").set(setToWhat).then(value => {\r\n                if(setToWhat){\r\n                    alert(\"Event is locked so volunteers and seniors cannot sign up\")\r\n                }else{\r\n                    alert(\"Event is unlocked and open for signups until limits\")\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const allowPullout = (eventDate,daysForCushion) => {\r\n        console.log(new Date(eventDate))\r\n        let comparison = new Date(eventDate)\r\n        comparison.setDate(comparison.getDate() - daysForCushion)\r\n        console.log(\"comparionsn result\",comparison > new Date(),comparison,new Date())\r\n        return comparison > new Date()\r\n    }\r\n    const deleteEvent = async(userType,chapter,parentKey) =>{\r\n        Firebase.database().ref(chapter + \"/Events/\" + parentKey).set(null).then(navigation.goBack()).then(alert(\"Event has been deleted\"))\r\n    }\r\n\r\n    const submitEdits= async(userType,chapter) => {\r\n        if(volunteerLimit == \"\" || seniorLimit == \"\" || detail == \"\" || detail == null){\r\n            alert(\"You cannot leave fields empty\")\r\n        }else if(link == null || link == undefined){\r\n            Firebase.database().ref(chapter + \"/Events/\" + parentKey).update({\r\n                EventVolunteerLimit:parseInt(volunteerLimit),\r\n                EventParticipantLimit:parseInt(seniorLimit),\r\n            \r\n                EventDetails:detail\r\n            }).then(alert(\"Edits Submitted\"))\r\n        }else{\r\n            Firebase.database().ref(chapter + \"/Events/\" + parentKey).update({\r\n                EventVolunteerLimit:parseInt(volunteerLimit),\r\n                EventParticipantLimit:parseInt(seniorLimit),\r\n                EventLink:link,\r\n                EventDetails:detail\r\n            }).then(alert(\"Edits Submitted\"))\r\n        }\r\n        \r\n    }\r\n    const signUpForEvent = async(userType,chapter,parentKey) => {\r\n        let event = null\r\n        await Firebase.database().ref(chapter + \"/Events/\" + parentKey).once('value').then(snapshot => {\r\n            event = snapshot.val()    \r\n        })\r\n        let checkVolunteerMatch = []\r\n        let checkParticipantMatch = []\r\n        if(event.Volunteers != null && event.Volunteers != undefined){\r\n            checkVolunteerMatch = Object.keys(event.Volunteers)\r\n            \r\n        }\r\n        if(event.Participants != null && event.Participants != undefined){\r\n            checkParticipantMatch = Object.keys(event.Participants)\r\n            \r\n        }\r\n        //console.log(checkParticipantMatch,checkVolunteerMatch,checkVolunteerMatch.includes(Firebase.auth().currentUser.uid,checkParticipantMatch.includes(Firebase.auth().currentUser.uid)))\r\n        if(event.Locked == false && event.EventComplete == false && route.params.stateOfEvent != \"Ended\" && route.params.stateOfEvent != \"Needs Attention\"){\r\n            if(checkVolunteerMatch.includes(Firebase.auth().currentUser.uid) == false && checkParticipantMatch.includes(Firebase.auth().currentUser.uid) == false){\r\n    \r\n            \r\n                if(userType != \"Senior\" && event.EventVolunteerLimit > event.VolunteersSignedUp){\r\n                    //volunteers and heads\r\n                    if(userType == \"Volunteer\"){\r\n                        Firebase.database().ref(chapter + \"/Events/\" + parentKey + \"/Volunteers/\" + Firebase.auth().currentUser.uid).set({\r\n                            Email:Firebase.auth().currentUser.email,\r\n                            Name:Firebase.auth().currentUser.displayName\r\n                        })\r\n                       \r\n                    }else if(userType == \"Head\"){\r\n                        Firebase.database().ref(chapter + \"/Events/\" + parentKey + \"/Volunteers/\" + Firebase.auth().currentUser.uid).set({\r\n                            Email:Firebase.auth().currentUser.email,\r\n                            Name:Firebase.auth().currentUser.displayName\r\n                        })\r\n                        \r\n                    }\r\n                    incrementVolunteers(chapter + \"/Events/\" + parentKey + \"/VolunteersSignedUp\").then(transaction => {alert(\"Signed up to volunteer\");console.log(transaction.snapshot.val())})\r\n                    setIsSignedUp(true)\r\n                    setVolunteerAmount(volunteerAmount + 1)\r\n                    if(userType == \"Head\"){\r\n                        navigation.goBack()\r\n                    }\r\n                }\r\n                else if(userType == \"Senior\" && event.EventParticipantLimit > event.ParticipantsSignedUp){\r\n                    Firebase.database().ref(chapter + \"/Events/\" + parentKey + \"/Participants/\" + Firebase.auth().currentUser.uid).set({\r\n                        Email:Firebase.auth().currentUser.email,\r\n                        Name:Firebase.auth().currentUser.displayName\r\n                    })\r\n                    incrementParticipants(chapter + \"/Events/\" + parentKey + \"/ParticipantsSignedUp\").then(transaction => {alert(\"Signed up to attend!\\nIf there is a Zoom link, use it to go to the event when it starts (you can see when it starts in Date and Time)\");console.log(transaction.snapshot.val())})\r\n                    setIsSignedUp(true)\r\n                    setSeniorAmount(seniorAmount + 1)\r\n                }else{\r\n                    alert(\"Sorry, this event is full\")\r\n                }\r\n            }else{\r\n                alert(\"You have already signed up for this event.\")\r\n            }\r\n        }else if(event.Locked){\r\n            alert(\"Sorry, this event is locked\")\r\n        }else if(event.EventComplete ||  route.params.stateOfEvent == \"Ended\" || route.params.stateOfEvent == \"Needs Attention\"){\r\n            alert(\"Sorry, this event has already ended\")\r\n        }else{\r\n            console.log(\"failed something could not sign up\",event.EventComplete,event.EventCompleteView)\r\n        }\r\n    }\r\n    \r\n    const unSignUpForEvent = async (userType,chapter,parentKey) => {\r\n        let eventDate = event.EventDate\r\n        await Firebase.database().ref(chapter + \"/Events/\" + parentKey + '/EventDate').once('value').then(snapshot => {\r\n            eventDate = snapshot.val()\r\n        })\r\n        if(userType == \"Head\"){\r\n            Firebase.database().ref(chapter + \"/Events/\" + parentKey + \"/Volunteers/\" + Firebase.auth().currentUser.uid).set(null)\r\n            .then(response => {\r\n               \r\n                decrementVolunteers(chapter + \"/Events/\" + parentKey + \"/VolunteersSignedUp\").then(transaction => {\r\n                    alert(\"You have unsigned up for this event\")\r\n                    setIsSignedUp(false)\r\n                })\r\n                setVolunteerAmount(volunteerAmount - 1)\r\n                navigation.goBack()\r\n            })\r\n            .catch(error => {\r\n                alert(error.toString(error))\r\n            })\r\n        }else if(userType == \"Volunteer\"){\r\n            if(allowPullout(eventDate,cushionToPullOut)){\r\n                Firebase.database().ref(chapter + \"/Events/\" + parentKey + \"/Volunteers/\" + Firebase.auth().currentUser.uid).set(null)\r\n                .then(response => {\r\n                    decrementVolunteers(chapter + \"/Events/\" + parentKey + \"/VolunteersSignedUp\").then(transaction => {\r\n                        alert(\"You have unsigned up for this event\")\r\n                        //ALERT HEAD WITH NOTIFS... FIGURE OUT LATER\r\n                        setIsSignedUp(false)\r\n                        setVolunteerAmount(volunteerAmount - 1)\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    alert(error.toString(error))\r\n                })\r\n            }else{\r\n                alert(\"Sorry, you cannot pull out of this event\\nYou have attempted to pull out within \"  + cushionToPullOut +  \" days of the event happening, if this is an emergency contact your chapter head.\")\r\n            }\r\n            \r\n        }else if(userType == \"Senior\"){\r\n            Firebase.database().ref(chapter + \"/Events/\" + parentKey + \"/Participants/\" + Firebase.auth().currentUser.uid).set(null)\r\n            .then(response => {\r\n                decrementParticipants(chapter + \"/Events/\" + parentKey + \"/ParticipantsSignedUp\").then(transaction => {\r\n                    alert(\"You have unsigned up for this event\")\r\n                    setIsSignedUp(false)\r\n                    setSeniorAmount(seniorAmount - 1)\r\n                })\r\n             \r\n            })\r\n            .catch(error => {\r\n                alert(error.toString(error))\r\n            })\r\n        }\r\n    }\r\n\r\n    const deleteVolunteer = async(volunteerUID,volunteerName,index) => {\r\n        Firebase.database().ref(chapter + \"/Events/\" + parentKey + \"/Volunteers/\" + volunteerUID).set(null).then(result => {\r\n            decrementVolunteers(chapter + \"/Events/\" + parentKey + \"/VolunteersSignedUp\").then(transaction => {\r\n                let volunteers = volunteerDetails\r\n                volunteers.splice(index,1)\r\n                setVolunteerDetails(volunteers)\r\n                setRefreshVolunteerList(!refreshVolunteerList)\r\n                setRefreshParent(true)\r\n                alert(volunteerName +  \" has been removed from this event\")\r\n                \r\n            })\r\n        }).then(setVolunteerAmount(volunteerAmount - 1))\r\n    }\r\n\r\n    const submitNewZoomLink = async() => {\r\n        Firebase.database().ref(chapter + \"/Events/\" + parentKey + \"/EventLink\").set(link)\r\n    }\r\n    const toggleRefreshList = () => {\r\n        setRefreshCompleteList(!refreshCompleteList)\r\n    }\r\n    const fillHoursGiven = (arr) => {\r\n        let copy = []\r\n        for(var x =0;x<arr.length;x++){\r\n            copy.push(getTimeDifference(event.EventStartTime,event.EventEndTime)) //// more efficient this way getTimeDifference(eventInfo.eventStartTime,eventInfo.eventEndTime))\r\n        }\r\n        \r\n        setHoursGiven(copy)\r\n    }\r\n\r\n    const getTimeDifference = (start,end) => {\r\n       let startArr = start.split(\":\")\r\n       let isPM = startArr[2].includes(\"PM\")\r\n       let msStart = miliseconds(parseInt(startArr[0]),parseInt(startArr[1]),0,isPM)\r\n       \r\n       let endArr = end.split(\":\")\r\n       let isPMEnd = endArr[2].includes(\"PM\")\r\n       let msEnd = miliseconds(parseInt(endArr[0]),parseInt(endArr[1]),0,isPMEnd)\r\n\r\n       let difference = msEnd - msStart\r\n\r\n       return difference\r\n    }\r\n\r\n    const convertToTimeDisplay = (duration) => {\r\n        console.log(duration,\"DURATION\")\r\n        let seconds = Math.floor((duration / 1000) % 60)\r\n        let minutes = Math.floor((duration / (1000 * 60)) % 60)\r\n        let hours = Math.floor((duration / (1000 * 60 * 60)) % 24)\r\n\r\n        hours = (hours < 10) ? \"0\" + hours : hours;\r\n        minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n        seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n        console.log(hours,minutes,duration,\"TIME DISPLAY\")\r\n        return [hours +\"\",minutes +\"\"];\r\n    }\r\n    const onChangeHours = (hoursChange,index) => {\r\n        if(hoursChange != null && hoursChange != \"\"){\r\n            let intHoursChange = parseInt(hoursChange)\r\n            let copyAllHours = hoursGiven\r\n            let minutes = Math.floor((copyAllHours[index] / (1000 * 60)) % 60)\r\n            //let hours = Math.floor((copyAllHours[index] / (1000 * 60 * 60)) % 24)\r\n           \r\n            copyAllHours[index] = miliseconds(intHoursChange,minutes,0,false)\r\n           \r\n            setHoursGiven(copyAllHours)\r\n        }\r\n            \r\n    }\r\n\r\n    const onChangeMins = (minsChange,index) => {\r\n        if(minsChange != null && minsChange != \"\"){\r\n            let intMinsChange = parseInt(minsChange)\r\n            let copyAllHours = hoursGiven\r\n            let minutes = Math.floor((copyAllHours[index] / (1000 * 60)) % 60)\r\n            let hours = Math.floor((copyAllHours[index] / (1000 * 60 * 60)) % 24)\r\n            let msConversion = miliseconds(hours,intMinsChange,0,false)\r\n            copyAllHours[index] = msConversion\r\n         \r\n            setHoursGiven(copyAllHours)\r\n        }\r\n        \r\n    }\r\n    const allocateHours = async() =>{\r\n        let worked = true\r\n   \r\n        for(var x = 0; x < volunteerDetails.length;x++){\r\n            try{\r\n                let giveHours = true\r\n                await Firebase.database().ref(\"UserMetaData/\" + volunteerDetails[x].UID).once('value').then(snapshot => {\r\n                    const metadata = snapshot.val()\r\n                    if(metadata.primaryRole != null && metadata.primaryRole == \"Admin\"){\r\n                        console.log(\"NO HOURS FOR ADMINS\")\r\n                        giveHours = false\r\n                    }\r\n                })\r\n                if(giveHours){\r\n                    Firebase.database().ref(chapter + \"/Volunteers/\" + volunteerDetails[x].UID + \"/Hours/\" + parentKey).set({\r\n                        EventName:event.EventName,\r\n                        Hours:hoursGiven[x]\r\n                    })\r\n                }\r\n                \r\n               \r\n            }\r\n            catch (e){\r\n                alert(\"Something went wrong\\n\" + e.toString())\r\n                worked = false\r\n                break\r\n            }\r\n                \r\n        }\r\n\r\n        if(worked){\r\n            Firebase.database().ref(chapter + \"/Events/\" + parentKey).set(null).then(navigation.goBack())\r\n        }\r\n    }\r\n    const timeDisplayHardCode = convertToTimeDisplay(getTimeDifference(event.EventStartTime,event.EventEndTime))\r\n    const hoursHardCode = parseInt(timeDisplayHardCode[0])\r\n    const minutesHardCode = parseInt(timeDisplayHardCode[1])\r\n    console.log(event)\r\n    \r\n    if(userType == \"Volunteer\" || userType == \"Senior\"){\r\n        return(\r\n            <LinearGradient colors={[COLORS.backgroundColor, COLORS.backgroundColorFade]} style={{flex:1}}>\r\n                <ScrollView style={{flex:1,paddingTop:10,paddingHorizontal:10,paddingBottom:50,alignSelf:'center',minWidth:Dimensions.get('window').width * 0.7}}>\r\n                    \r\n                    <View style={{marginVertical:10, borderRadius: STYLEVALS.borderRadius,elevation:10}}>\r\n                        <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                            \r\n                            <Text style={{fontSize:20,color:COLORS.textColor}}>Details</Text>\r\n                            <Text style={{color:COLORS.textColor,padding:5}}>{event.EventDetails}</Text>\r\n                            \r\n                        </View>\r\n                    </View>\r\n                    \r\n                    <View style={{backgroundColor:COLORS.cardColor,marginVertical:10, borderRadius: STYLEVALS.borderRadius}}>\r\n                        <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                            <Text style={{fontSize:20,color:COLORS.textColor}}>Date and Time</Text>\r\n                            <View style={{flexDirection:'row',alignItems:'center',padding:5}}>\r\n                                <MaterialIcons name=\"date-range\" size={24} color={COLORS.textColor} />\r\n                                <Text style={{color:COLORS.textColor,marginLeft:10}}>{event.EventDate}</Text>\r\n                            </View>\r\n                            <View style={{flexDirection:'row',alignItems:'center',padding:5}}>\r\n                                <MaterialIcons name=\"timelapse\" size={24} color={COLORS.textColor} />\r\n                                <Text  style={{color:COLORS.textColor,marginLeft:10}}>{event.EventStartTime.slice(0,4) + event.EventStartTime.slice(7)} - {event.EventEndTime.slice(0,4) + event.EventEndTime.slice(7)}</Text>       \r\n                            </View>\r\n                            <View style={{flexDirection:'row',alignItems:'center',padding:5}}>\r\n                                <MaterialIcons name=\"timer\" size={24} color={COLORS.textColor}/>\r\n                                {hoursHardCode > 0 ? \r\n                                    <>\r\n                                    {minutesHardCode > 0 ? \r\n                                        <Text style={{color:COLORS.textColor,marginLeft:10}}>{hoursHardCode} hours {minutesHardCode} minutes</Text>\r\n                                    :\r\n                                        <Text style={{color:COLORS.textColor,marginLeft:10}}>{hoursHardCode} hours</Text>\r\n                                    }\r\n                                    </>\r\n                                :\r\n                                    <>\r\n                                    {minutesHardCode > 0 ? \r\n                                        <Text style={{color:COLORS.textColor,marginLeft:10}}>{minutesHardCode} minutes</Text>\r\n                                    :\r\n                                        <Text style={{color:COLORS.textColor,marginLeft:10}}>0 minutes</Text>\r\n                                    }\r\n                                    </>\r\n                                }\r\n                            \r\n                            </View>\r\n                        </View>\r\n                </View>\r\n\r\n                <View style={{backgroundColor:COLORS.cardColor,marginVertical:10, borderRadius: STYLEVALS.borderRadius}}>\r\n                    <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                            <Text style={{fontSize:20,color:COLORS.textColor}}>Participants</Text>\r\n                            <View style={{flexDirection:'row',justifyContent:'space-evenly',padding:5}}>\r\n                            \r\n                                    <View style={{flexDirection:'column',alignItems:'center',justifyContent:'center'}}>\r\n                                        <FontAwesome name=\"group\" size={24} color={COLORS.textColor} />\r\n                                        <Text style={{color:COLORS.textColor}}>Seniors</Text>\r\n                                        <Text style={{color:COLORS.textColor,fontSize:25}}>{seniorAmount}/{event.EventParticipantLimit}</Text>\r\n                                    </View>\r\n                                    <View style={{alignItems:'center',flexDirection:'row'}}>\r\n                                    <View style={{flexDirection:'column',alignItems:'center',justifyContent:'center'}}>\r\n                                        <Ionicons name=\"ios-people\" size={24} color={COLORS.textColor} />\r\n                                        <Text style={{color:COLORS.textColor}}>Volunteers</Text>\r\n                                        <Text style={{color:COLORS.textColor,fontSize:25}}>{volunteerAmount}/{event.EventVolunteerLimit}</Text>\r\n                                    </View>\r\n                            \r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                    \r\n                    {!isSignedUp ? \r\n                        <TouchableOpacity  style={{backgroundColor:COLORS.primaryColor,marginHorizontal:40,marginVertical:10,borderRadius:20}} onPress={() => {signUpForEvent(userType,chapter,parentKey)}}>\r\n                            <LinearGradient colors={[COLORS.primaryColor, COLORS.secondaryColor ]} style={{padding:10,borderRadius: 20}}>\r\n                                <View style={{alignItems:'center'}}>\r\n                                    <Text style={{color:COLORS.textInButtonColor}}>YES I will be there!</Text>\r\n                                    <Entypo name=\"check\" color=\"white\" size={30}/>\r\n                                </View>\r\n                            </LinearGradient>\r\n                        </TouchableOpacity>\r\n                    :\r\n                    <>\r\n                    {event.EventLink != undefined && event.EventLink != \"\" ?\r\n                    <>\r\n                        {/* <View  style={{backgroundColor:COLORS.primaryColor,marginHorizontal:40,marginVertical:10,borderRadius:20,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}} >\r\n                            <LinearGradient colors={[COLORS.primaryColor, COLORS.secondaryColor ]} style={{padding:10,borderRadius: 20,alignItems:'center',flex:1}}>\r\n                                <Text style={{color:COLORS.textColor}}>Zoom link</Text>\r\n                                \r\n                                <Text style={{color:COLORS.textColor}}>{event.EventLink}</Text>\r\n                                \r\n                            </LinearGradient>\r\n                        </View> */}\r\n\r\n                        <View style={{flexDirection:'row',justifyContent:'space-between'}}>\r\n                            <TouchableOpacity style={{width:'45%'}} onPress={() => openZoomLink(event.EventLink)}>\r\n                                <View style={{backgroundColor:COLORS.primaryColor,marginLeft:30,marginVertical:10,borderRadius:20,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                                \r\n                                    <LinearGradient colors={[COLORS.primaryColor, COLORS.secondaryColor ]} style={{padding:10,borderRadius: 20,alignItems:'center',flex:1}}>\r\n                                        <View style={{alignItems:'center'}}>\r\n                                            <MaterialCommunityIcons name=\"web\" size={30} color=\"white\" />\r\n                                            <Text style={{color:COLORS.textInButtonColor}}>Open Zoom</Text>\r\n                                        </View>\r\n                                        \r\n                                    </LinearGradient>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity style={{width:'45%'}} onPress={() => {Clipboard.setString(event.EventLink);alert(\"Copied\")}}>\r\n                                <View style={{backgroundColor:COLORS.primaryColor,marginRight:30,marginVertical:10,borderRadius:20,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                            \r\n                                    <LinearGradient colors={[COLORS.primaryColor, COLORS.secondaryColor ]} style={{padding:10,borderRadius: 20,alignItems:'center',flex:1}}>\r\n                                        <View style={{alignItems:'center'}}>\r\n                                            <FontAwesome5 name=\"copy\" size={30} color=\"white\" />\r\n                                            <Text style={{color:COLORS.textInButtonColor}}>Copy Link</Text>\r\n                                        </View>\r\n                                        \r\n                                    </LinearGradient>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </>\r\n                    :\r\n                    null\r\n                    }\r\n                    <TouchableOpacity  style={{backgroundColor:COLORS.primaryColor,marginHorizontal:40,marginVertical:10,borderRadius:20,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}} onPress={() => {unSignUpForEvent(userType,chapter,parentKey)}}>\r\n                        <LinearGradient colors={[COLORS.primaryColor, COLORS.secondaryColor ]} style={{padding:10,borderRadius: 20}}>\r\n                            <View style={{alignItems:'center'}}>\r\n                                <Text style={{color:COLORS.textInButtonColor}}>NO I can't make it anymore :(</Text>\r\n                                <Entypo name=\"cross\" color=\"white\" size={30}/>\r\n                            </View>\r\n                        </LinearGradient>\r\n                    </TouchableOpacity>\r\n                    </>\r\n                    }\r\n                </ScrollView>\r\n            </LinearGradient>\r\n        )\r\n    }else if(userType == \"Head\"){ //also for admins\r\n        return(\r\n\r\n            <LinearGradient colors={[COLORS.backgroundColor, COLORS.backgroundColorFade ]} style={{flex:1}}>\r\n                <ScrollView style={{flex:1,paddingTop:10,paddingHorizontal:10,paddingBottom:50,alignSelf:'center',minWidth:Dimensions.get('window').width * 0.7}}>\r\n                <View style={{backgroundColor:COLORS.cardColor,marginVertical:10, borderRadius: STYLEVALS.borderRadius,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                    <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                            <Text style={{fontSize:20,color:COLORS.textColor}}>Head Controls</Text>\r\n                            <View style={{flexDirection:'row',alignItems:'center',padding:5,justifyContent:'space-evenly',flex:1}}>\r\n                                <View style={{justifyContent:'space-evenly',alignItems:'center'}}>\r\n                                    <TouchableOpacity style={{justifyContent:'center',alignItems:'center'}} onPress={() => lockEventAction(userType,chapter,parentKey,true)}>\r\n                                        <Ionicons name=\"md-lock-closed\" size={24} color={COLORS.primaryColor} />\r\n                                        <Text style={{color:COLORS.textColor,marginLeft:10}}>Lock Event</Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                                <View style={{justifyContent:'center',alignItems:'center'}}>\r\n                                    <TouchableOpacity style={{justifyContent:'center',alignItems:'center'}} onPress={() => lockEventAction(userType,chapter,parentKey,false)}>\r\n                                        <Ionicons name=\"md-lock-open\" size={24} color={COLORS.primaryColor} />\r\n                                        <Text style={{color:COLORS.textColor,marginLeft:10}}>Unlock Event</Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                                <View style={{justifyContent:'center',alignItems:'center'}}>\r\n                                    <TouchableOpacity style={{justifyContent:'center',alignItems:'center'}} onPress={() => deleteEvent(userType,chapter,parentKey)}>\r\n                                        <MaterialIcons name=\"delete-forever\" size={24} color={COLORS.primaryColor} />\r\n                                        <Text style={{color:COLORS.textColor,marginLeft:10}}>Delete Event</Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </View>\r\n                            <TouchableOpacity style={{justifyContent:'center',alignItems:'center',marginTop:10}} onPress={() => setShowEndEventModal(true)}>\r\n                                <View style={{flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                                    <MaterialIcons name=\"volunteer-activism\" size={40} color={COLORS.primaryColor} />\r\n                                    <FontAwesome5 name=\"calendar-check\" size={35} color={COLORS.primaryColor} />\r\n                                </View>\r\n\r\n                                \r\n                                <Text style={{color:COLORS.textColor,marginLeft:10,alignSelf:'center',textAlign:'center'}}>Allocate Volunteer Hours{\"\\n\"}Close Event</Text>\r\n                            </TouchableOpacity>\r\n                            \r\n                        </View>\r\n                    </View>\r\n                    <View style={{marginVertical:10, borderRadius: STYLEVALS.borderRadius,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                        {(route.params.stateOfEvent == \"Needs Attention\") ?\r\n                                <Text style={{fontSize:20,color:'white',marginBottom:20,alignSelf:'center'}}>Please allocate hours and close event!</Text>\r\n                            :\r\n                        null}\r\n                        <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                            \r\n                            <Text style={{fontSize:20,color:COLORS.textColor}}>Details</Text>\r\n                            <Textarea rowSpan={8} \r\n                 \r\n                                bordered placeholder=\"Event Information...\"\r\n                                placeholderTextColor=\"white\"\r\n                                style={{color:COLORS.textColor}}\r\n                                value = {detail}\r\n                                onChangeText={text => setDetail(text)}\r\n                            />\r\n                            <Item style={{marginVertical:10}}> \r\n                                <Input placeholderTextColor={COLORS.textColor} style={{color:COLORS.textColor}} value={link} onChangeText={text => {setLink(text);setRefreshParent(true)}} placeholder=\"Zoom Link...\" clearButtonMode=\"while-editing\"/>\r\n                            </Item>\r\n                            <Item>\r\n                            \r\n                                <Text style={{color:COLORS.textColor}}>Volunteer Limit: </Text>\r\n                                <Input\r\n                                style={{color:COLORS.textColor}}\r\n                                blurOnSubmit={true}\r\n                                placeholder=\"...\"\r\n                                keyboardType=\"number-pad\"\r\n                                value={volunteerLimit}\r\n                                onChangeText={(text) => setVolunteerLimit(text)}\r\n                                />\r\n                            </Item>\r\n                            <Item>\r\n                                <Text style={{color:COLORS.textColor}}>Senior Limit: </Text>\r\n                                <Input\r\n                                style={{color:COLORS.textColor}}\r\n                                blurOnSubmit={true}\r\n                                placeholder=\"...\"\r\n                                keyboardType=\"number-pad\"\r\n                                value={seniorLimit}\r\n                                onChangeText={(text) => setSeniorLimit(text)}\r\n                                />\r\n                            </Item>\r\n                        <Button style={{backgroundColor:COLORS.primaryColor,alignSelf:'center',padding:10,margin:10}} onPress={() => {submitEdits(userType,chapter,parentKey);setRefreshParent(true)}}>\r\n                            <Text style={{color:COLORS.textInButtonColor}}>Submit Edits</Text>\r\n                        </Button>\r\n                        </View>\r\n                    </View>\r\n\r\n                    <View style={{backgroundColor:COLORS.primaryColor,marginVertical:10, borderRadius: STYLEVALS.borderRadius,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                        <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                            <Text style={{fontSize:20,color:COLORS.textColor}}>Participants</Text>\r\n                            <View style={{flexDirection:'row',justifyContent:'space-evenly',padding:5}}>\r\n                            \r\n                                    <View style={{flexDirection:'column',alignItems:'center',justifyContent:'center'}}>\r\n                                        <FontAwesome name=\"group\" size={24} color={COLORS.primaryColor} />\r\n                                        <Text style={{color:COLORS.textColor}}>Seniors</Text>\r\n                                        <Text style={{color:COLORS.textColor,fontSize:25}}>{seniorAmount}/{event.EventParticipantLimit}</Text>\r\n                                    </View>\r\n                                    <View style={{alignItems:'center',flexDirection:'row'}}>\r\n                                    <View style={{flexDirection:'column',alignItems:'center',justifyContent:'center'}}>\r\n                                        <Ionicons name=\"ios-people\" size={24} color={COLORS.primaryColor} />\r\n                                        <Text style={{color:COLORS.textColor}}>Volunteers</Text>\r\n                                        <Text style={{color:COLORS.textColor,fontSize:25}}>{volunteerAmount}/{event.EventVolunteerLimit}</Text>\r\n                                    </View>\r\n                                    \r\n                                    </View>\r\n                                \r\n                            </View>\r\n                            <TouchableOpacity style={{flexDirection:'row',alignItems:'center'}} onPress={() => setShowSeniorList(!showSeniorList)}>\r\n                                {!showSeniorList ? \r\n                                    <Entypo name=\"chevron-right\" size={24} color={COLORS.primaryColor} />\r\n                                :\r\n                                    <Entypo name=\"chevron-down\" size={24} color={COLORS.primaryColor} />\r\n                                }\r\n                                <Text style={{color:COLORS.textColor}}>Senior List</Text>\r\n                            </TouchableOpacity>\r\n                            {showSeniorList ? \r\n                            <FlatList\r\n                                scrollIndicatorInsets={{right:1}}\r\n                                style={{flex:1}}\r\n                                data={participantDetails}\r\n                                keyExtractor={() => Math.random(0,10000) + \"\"}\r\n                                renderItem={({item,index}) => {\r\n                                    console.log(item)\r\n                                    return(\r\n                                        <View style={{backgroundColor:COLORS.cardColor,borderColor:COLORS.primaryColor,borderWidth:1,flex:1,marginVertical:5,marginHorizontal:5,padding:10,borderRadius:STYLEVALS.borderRadius,flexDirection:'row'}}>\r\n                                            <Left><Text style={{color:COLORS.textColor}}>{item.name}</Text></Left>\r\n                                            <Text style={{color:COLORS.textColor}}>{item.email}</Text>\r\n                                        </View>\r\n                                    )\r\n                                }}\r\n                                \r\n                                />\r\n                            :null}\r\n                            <TouchableOpacity style={{flexDirection:'row',alignItems:'center'}} onPress={() => setShowVolunteerList(!showVolunteerList)}>\r\n                                {!showVolunteerList ? \r\n                                    <Entypo name=\"chevron-right\" size={24} color={COLORS.primaryColor} />\r\n                                :\r\n                                    <Entypo name=\"chevron-down\" size={24} color={COLORS.primaryColor} />\r\n                                }\r\n                                <Text style={{color:COLORS.textColor}}>Volunteer List</Text>\r\n                            </TouchableOpacity>\r\n                            {showVolunteerList ?\r\n                            <FlatList\r\n                                scrollIndicatorInsets={{right:1}}\r\n                                style={{flex:1}}\r\n                                data={volunteerDetails}\r\n                                extraData={refreshVolunteerList}\r\n                                keyExtractor={() => Math.random(0,10000) + \"\"}\r\n                                renderItem={({item,index}) => {\r\n                                    console.log(item)\r\n                                    return(\r\n                                        \r\n                                        <View style={{backgroundColor:COLORS.cardColor,borderColor:COLORS.primaryColor,borderWidth:1,marginVertical:5,marginHorizontal:5,padding:10,borderRadius:STYLEVALS.borderRadius}}>\r\n                                            <View style={{backgroundColor:COLORS.cardColor,flex:1,flexDirection:'row'}}>\r\n                                                <Left><Text style={{color:COLORS.textColor}}>{item.name}</Text></Left>\r\n                                                <Text style={{color:COLORS.textColor}}>{item.email}</Text>\r\n                                            </View>\r\n                                   \r\n                                            <TouchableOpacity style={{paddingVertical:5}} onPress={() => deleteVolunteer(item.UID,item.name,index)}>\r\n                                                <Text style={{color:'red',fontSize:12}}>Delete/Remove Volunteer</Text>\r\n                                            </TouchableOpacity>\r\n                                       \r\n                                        </View>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            :null}\r\n                        </View>\r\n                    </View>\r\n                    \r\n                    <View style={{backgroundColor:COLORS.primaryColor,marginVertical:10, borderRadius: STYLEVALS.borderRadius,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                        <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                            <Text style={{fontSize:20,color:COLORS.textColor}}>Date and Time</Text>\r\n                            <View style={{flexDirection:'row',alignItems:'center',padding:5}}>\r\n                                <MaterialIcons name=\"date-range\" size={24} color={COLORS.primaryColor}  />\r\n                                <Text style={{color:COLORS.textColor,marginLeft:10}}>{event.EventDate}</Text>\r\n                            </View>\r\n                            <View style={{flexDirection:'row',alignItems:'center',padding:5}}>\r\n                                <MaterialIcons name=\"timelapse\" size={24} color={COLORS.primaryColor}  />\r\n                                <Text  style={{color:COLORS.textColor,marginLeft:10}}>{event.EventStartTime.slice(0,4) + event.EventStartTime.slice(7)} - {event.EventEndTime.slice(0,4) + event.EventEndTime.slice(7)}</Text>       \r\n                            </View>\r\n                            <View style={{flexDirection:'row',alignItems:'center',padding:5}}>\r\n                                <MaterialIcons name=\"timer\" size={24} color={COLORS.primaryColor} />\r\n                                {hoursHardCode > 0 ? \r\n                                    <>\r\n                                    {minutesHardCode > 0 ? \r\n                                        <Text style={{color:COLORS.textColor,marginLeft:10}}>{hoursHardCode} hours {minutesHardCode} minutes</Text>\r\n                                    :\r\n                                        <Text style={{color:COLORS.textColor,marginLeft:10}}>{hoursHardCode} hours</Text>\r\n                                    }\r\n                                    </>\r\n                                :\r\n                                    <>\r\n                                    {minutesHardCode > 0 ? \r\n                                        <Text style={{color:COLORS.textColor,marginLeft:10}}>{minutesHardCode} minutes</Text>\r\n                                    :\r\n                                        <Text style={{color:COLORS.textColor,marginLeft:10}}>0 minutes</Text>\r\n                                    }\r\n                                    </>\r\n                                }\r\n                            \r\n                            </View>\r\n                            <Modal visible={showEndEventModal} animationType=\"slide\">\r\n                                <StatusBar/>\r\n                                <SafeAreaView style={{flex:1}}>\r\n                                <View style={{backgroundColor:COLORS.primaryColor,flexDirection:'row',justifyContent:'space-between'}}>\r\n                                 \r\n                                    <Button transparent onPress={() => setShowEndEventModal(false)}  style={{height:70,width:70,marginLeft:15}}>\r\n                                        <Ionicons name=\"md-caret-down\" size={34} color=\"white\" />\r\n                                       \r\n                                    </Button>\r\n                                    \r\n                                    <View style={{alignItems:'center',alignSelf:'center',flexDirection:'row'}}>\r\n                                        <MaterialIcons name=\"volunteer-activism\" size={40} color=\"white\" />\r\n                                        <FontAwesome5 name=\"calendar-check\" size={35} color=\"white\" />\r\n                                    </View>\r\n                                    <Text style={{color:COLORS.primaryColor}}> sfafsdfasdf  lk</Text>\r\n                                </View>\r\n                                <View style={{paddingVertical:5,paddingHorizontal:15,flexDirection:'row',justifyContent:'space-between',backgroundColor:COLORS.backgroundColor}}>\r\n                                    <Text style={{color:COLORS.textInButtonColor}}>Name</Text><Text style={{color:COLORS.textInButtonColor}}>Time Given</Text><Text style={{color:COLORS.textInButtonColor}}>Participated</Text>\r\n                                </View>\r\n                                <ScrollView style={{flex:1,backgroundColor:COLORS.softBlack}} scrollIndicatorInsets={{right:1}}>\r\n                                    \r\n                                    <FlatList scrollIndicatorInsets={{right:1}}\r\n                                        style={{flex:1,padding:10}}\r\n                                        data={volunteerDetails}\r\n                                        extraData={refreshCompleteList}\r\n                                        \r\n                                        //legacyImplementation={true}\r\n                                        keyExtractor={() => Math.random(0,10000) + \"\"}\r\n                                        renderItem={({item,index}) => {\r\n                                            console.log(getTimeDifference(event.EventStartTime,event.EventEndTime),hoursGiven[index])\r\n                                            return(\r\n                                                <View>\r\n                                                <View style={{flexDirection:'row',backgroundColor:COLORS.cardColor,paddingHorizontal:5,borderRadius:STYLEVALS.borderRadius,borderColor:(getTimeDifference(event.EventStartTime,event.EventEndTime) == hoursGiven[index]) ? COLORS.moneyColor : COLORS.textColor,borderWidth:2}}>\r\n                                                    <Left style={{paddingHorizontal:10}}>\r\n                                                            <Text style={{fontSize:20}}>{item.name}</Text>\r\n                                                    </Left>\r\n                                                    <Body>\r\n                                                        <Item>\r\n                                                                <Text>Hours:</Text>\r\n                                                                <Input \r\n                                                                placeholder={convertToTimeDisplay(hoursGiven[index])[0]}\r\n                                                                //value = {convertToTimeDisplay(hoursGiven)[0]}\r\n                                                                onChangeText={(val) => onChangeHours(val,index)}\r\n                                                                keyboardType=\"numeric\"/>\r\n                                                        </Item>\r\n                                                        <Item>\r\n                                                                <Text>Minutes:</Text>\r\n                                                                <Input \r\n                                                                placeholder={convertToTimeDisplay(hoursGiven[index])[1]}\r\n                                                                //value = {convertToTimeDisplay(hoursGiven)[1]}\r\n                                                                onChangeText={(val) => onChangeMins(val,index)}\r\n                                                                keyboardType=\"numeric\"/>\r\n                                                        </Item>\r\n                                                    </Body>\r\n                                                    <Right style={{paddingHorizontal:10}}>\r\n                                                        <Button transparent onPress={() => {\r\n                                                        let copy = hoursGiven\r\n                                                        copy[index] = getTimeDifference(event.EventStartTime,event.EventEndTime)\r\n                                                        setHoursGiven(copy)\r\n                                                        console.log(copy)\r\n                                                        toggleRefreshList()\r\n                                                        }}>\r\n                                                            <Ionicons name=\"checkmark\" size={30} color=\"green\" />\r\n                                                        </Button>\r\n                                                        <Button transparent onPress={() => {onChangeHours(\"0\",index);onChangeMins(\"0\",index);console.log(\"EDITED\",hoursGiven);toggleRefreshList()}}>\r\n                                                            <Ionicons name=\"close-sharp\" size={30} color=\"red\" />\r\n                                                        </Button>\r\n                                                    </Right>\r\n                                                    </View> \r\n                                                </View>\r\n                                            )\r\n                                        }}\r\n                                        />\r\n                                </ScrollView>\r\n                                <Button full rounded style={{margin:20,backgroundColor:COLORS.primaryColor}} onPress={() => allocateHours()}>\r\n                                    <Text style={{color:COLORS.textInButtonColor}}>Allocate Hours and Close Event</Text>\r\n                                </Button>\r\n                                </SafeAreaView>\r\n                            </Modal>\r\n                        </View>\r\n                </View>\r\n\r\n                \r\n                    \r\n                    {!isSignedUp ? \r\n                        <TouchableOpacity  style={{backgroundColor:COLORS.primaryColor,marginHorizontal:40,marginVertical:10,borderRadius:20,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}} onPress={() => {signUpForEvent(userType,chapter,parentKey)}}>\r\n                            <LinearGradient colors={[COLORS.primaryColor, COLORS.secondaryColor ]} style={{padding:10,borderRadius: 20}}>\r\n                                <View style={{alignItems:'center'}}>\r\n                                    <Text style={{color:COLORS.textInButtonColor}}>YES I will be there!</Text>\r\n                                    <Entypo name=\"check\" color=\"white\" size={30}/>\r\n                                </View>\r\n                            </LinearGradient>\r\n                        </TouchableOpacity>\r\n                    :\r\n                    <>\r\n                    {event.EventLink != undefined && event.EventLink != \"\" ?\r\n                    <>\r\n                        {/* <View  style={{backgroundColor:COLORS.primaryColor,marginHorizontal:40,marginVertical:10,borderRadius:20,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}} >\r\n                            <LinearGradient colors={[COLORS.primaryColor, COLORS.secondaryColor ]} style={{padding:10,borderRadius: 20,alignItems:'center',flex:1}}>\r\n                                <Text style={{color:COLORS.textColor}}>Zoom link</Text>\r\n                                \r\n                                <Text style={{color:COLORS.textColor}}>{event.EventLink}</Text>\r\n                                \r\n                            </LinearGradient>\r\n                        </View> */}\r\n\r\n                        <View style={{flexDirection:'row',justifyContent:'space-between'}}>\r\n                            <TouchableOpacity style={{width:'45%'}} onPress={() => openZoomLink(event.EventLink)}>\r\n                                <View style={{backgroundColor:COLORS.primaryColor,marginLeft:30,marginVertical:10,borderRadius:20,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                                \r\n                                    <LinearGradient colors={[COLORS.primaryColor, COLORS.secondaryColor ]} style={{padding:10,borderRadius: 20,alignItems:'center',flex:1}}>\r\n                                        <View style={{alignItems:'center'}}>\r\n                                            <MaterialCommunityIcons name=\"web\" size={30} color=\"white\" />\r\n                                            <Text style={{color:'white'}}>Open Zoom</Text>\r\n                                        </View>\r\n                                        \r\n                                    </LinearGradient>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity style={{width:'45%'}} onPress={() => {Clipboard.setString(event.EventLink);alert(\"Copied\")}}>\r\n                                <View style={{backgroundColor:COLORS.primaryColor,marginRight:30,marginVertical:10,borderRadius:20,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                            \r\n                                    <LinearGradient colors={[COLORS.primaryColor, COLORS.secondaryColor ]} style={{padding:10,borderRadius: 20,alignItems:'center',flex:1}}>\r\n                                        <View style={{alignItems:'center'}}>\r\n                                            <FontAwesome5 name=\"copy\" size={30} color=\"white\" />\r\n                                            <Text style={{color:'white'}}>Copy Link</Text>\r\n                                        </View>\r\n                                        \r\n                                    </LinearGradient>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </>\r\n                    :\r\n                    null\r\n                    }\r\n                    <TouchableOpacity  style={{backgroundColor:COLORS.primaryColor,marginHorizontal:40,marginVertical:10,borderRadius:20,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}} onPress={() => {unSignUpForEvent(userType,chapter,parentKey)}}>\r\n                        <LinearGradient colors={[COLORS.primaryColor, COLORS.secondaryColor ]} style={{padding:10,borderRadius: 20}}>\r\n                            <View style={{alignItems:'center'}}>\r\n                                <Text style={{color:'white'}}>NO I can't make it anymore :(</Text>\r\n                                <Entypo name=\"cross\" color=\"white\" size={30}/>\r\n                            </View>\r\n                        </LinearGradient>\r\n                    </TouchableOpacity>\r\n                    </>\r\n                    }\r\n                </ScrollView>\r\n            </LinearGradient>\r\n           \r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nimport * as WebBrowser from 'expo-web-browser';\r\n\r\nasync function openLink(link){\r\n    await WebBrowser.openBrowserAsync(link)\r\n}\r\n\r\nasync function openZoomLink(link){\r\n    Linking.canOpenURL(link).then(result => {\r\n        if(result){\r\n            window.open(link, '_blank');\r\n        }else{\r\n            alert(\"Sorry, we cannot open this link\\nPlease try copying it and pasting into your browser instead\")\r\n        }\r\n    })\r\n}\r\n\r\n\r\nfunction miliseconds(hrs,min,sec,isPM)\r\n{\r\n    let val = ((hrs*60*60+min*60+sec)*1000)\r\n    if(isPM){\r\n        val += 43200000\r\n    }\r\n    return val;\r\n}\r\n\r\n","import React from 'react'\r\nimport {Text,Alert,FlatList,View,RefreshControl,StatusBar,DevSettings,TouchableOpacity,Dimensions} from 'react-native'\r\nimport Modal from 'modal-react-native-web';\r\nimport { Container, Header, Content, Card, CardItem, Icon, Right,Item,Input,Button as NativeBaseButton,Body,Left,Title,ListItem } from 'native-base';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport { Ionicons,FontAwesome5,Entypo,MaterialIcons } from '@expo/vector-icons';\r\nimport Firebase from '../firebase';\r\nimport * as AppConstantsValues from '../Constants'\r\nimport {COLORS,STYLEVALS} from '../Constants'\r\nimport {LinearGradient} from 'expo-linear-gradient'\r\nimport * as Updates from 'expo-updates';\r\n\r\nconst daysToDownloadForum = -1\r\nconst amountOfMsPerDay = 86400000\r\nconst width = Dimensions.get('window').width;\r\nconst height = Dimensions.get('window').height;\r\nconst searchResultCardColorStart = \"#FFAE5D\"\r\n\r\nclass Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n     \r\n      Name:'',\r\n      Email:'',\r\n      isReady:false,\r\n      chapter:null,\r\n      role:null,\r\n      hoursInfo:[],\r\n      totalHours:0,\r\n      showChaptersModal:false,\r\n      chaptersList:[],\r\n      oldChapter:null\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    await this.setUp()\r\n    \r\n  }\r\n\r\n  setUp = async () => {\r\n    if(await this.connectToInternet()){\r\n        let chapter = null\r\n        let role = null\r\n        let oldChapter = null\r\n        await Firebase.database().ref(\"UserMetaData/\" + Firebase.auth().currentUser.uid).once('value').then(snapshot => {\r\n            const data = snapshot.val()\r\n            chapter =  data.Chapter\r\n            oldChapter = data.Chapter\r\n            role = data.Role\r\n        })\r\n        \r\n        this.setState({chapter:chapter,role:role,oldChapter:oldChapter})\r\n        await this.getUserData(chapter,role)\r\n        await this.getChaptersList()\r\n        this.setState({ isReady: true });\r\n        \r\n    }else{\r\n        alert(\"No Internet Detected\")\r\n    }\r\n    }\r\n\r\n    connectToInternet = async() => {\r\n        return await AppConstantsValues.checkInternet()\r\n    }\r\n    getChaptersList = async() => {\r\n      Firebase.database().ref(\"/ChaptersList\").once('value').then(snapshot => {\r\n          const data = snapshot.val()\r\n          const chaptersList = Object.values(data)\r\n          console.log(chaptersList)\r\n          this.setState({chaptersList:chaptersList})\r\n      })\r\n  }\r\n  getUserData = async (chapter,role) => {\r\n    \r\n     const user = Firebase.auth().currentUser\r\n     this.setState({Name:user.displayName,Email:user.email})\r\n     if(role == \"Head\" || role == \"Volunteer\"){\r\n        await Firebase.database().ref(chapter + \"/Volunteers/\" + user.uid + \"/Hours\").once('value').then(snapshot => {\r\n            const data = snapshot.val()\r\n            let hoursFlattened = []\r\n            let hoursTotal = 0\r\n            if(data != null && data != undefined){\r\n                const hoursDB = Object.entries(data)\r\n                for(var x = 0; x < hoursDB.length;x++){\r\n                    hoursFlattened.push({EventName:hoursDB[x][1].EventName,HoursMs:hoursDB[x][1].Hours})\r\n                    hoursTotal += hoursDB[x][1].Hours\r\n                }\r\n            }\r\n            this.setState({hoursInfo:hoursFlattened.reverse(),totalHours:(hoursTotal/3600000).toFixed(1)})\r\n            console.log(hoursFlattened,\"HOURS\")\r\n        })\r\n     }\r\n  }\r\n \r\n  changeData = async () =>{\r\n    console.log('change')\r\n    if(this.state.Name != null && this.state.Name != \"\"){\r\n      let DBPlace = null\r\n        Firebase.auth().currentUser.updateProfile({\r\n            displayName: this.state.Name\r\n          }).then(function(response) {\r\n            //Success\r\n            alert(\"Name has been updated!\")\r\n            console.log(response,\"RESPONSE\")\r\n          }, function(error) {\r\n            //Error\r\n            alert(error.toString(error))\r\n            console.log(error);\r\n          });\r\n          \r\n          if(this.state.role == \"Head\" || this.state.role == \"Volunteer\"){\r\n            DBPlace = \"Volunteers\"\r\n          }else if(this.state.role == \"Senior\"){\r\n            DBPlace = \"Seniors\"\r\n          }\r\n          Firebase.database().ref(this.state.chapter + \"/\" + DBPlace + \"/\" + Firebase.auth().currentUser.uid + \"/ProfileData\").update({\r\n            DisplayName : this.state.Name\r\n          })\r\n    }\r\n    if(this.state.Email != null && this.state.Email != \"\"){\r\n      let DBPlace = null\r\n        Firebase.auth().currentUser.updateEmail(this.state.Email.trim()).then(function(response) {\r\n            //Success\r\n            alert(\"Email has been updated!\")\r\n          }, function(error) {\r\n            alert(error.toString(error))\r\n            console.log(error);\r\n          })\r\n          \r\n          if(this.state.role == \"Head\" || this.state.role == \"Volunteer\"){\r\n            DBPlace = \"Volunteers\"\r\n          }else if(this.state.role == \"Senior\"){\r\n            DBPlace = \"Seniors\"\r\n          }\r\n          Firebase.database().ref(this.state.chapter + \"/\" + DBPlace + \"/\" + Firebase.auth().currentUser.uid + \"/ProfileData\").update({\r\n            Email : this.state.Email.trim()\r\n          })\r\n    }\r\n    if(this.state.chapter != null && this.state.chapter != \"\" && this.state.chapter != this.state.oldChapter){\r\n      Firebase.database().ref(\"UserMetaData/\" + Firebase.auth().currentUser.uid + \"/Chapter\").set(this.state.chapter).then(\r\n        Firebase.database().ref(this.state.oldChapter + \"/Seniors/\" + Firebase.auth().currentUser.uid ).once('value').then(snapshot => {\r\n          const userData = snapshot.val()\r\n          console.log(userData)\r\n          Firebase.database().ref(this.state.chapter + \"/Seniors/\" + Firebase.auth().currentUser.uid).set(userData).then(\r\n            Firebase.database().ref(this.state.oldChapter + \"/Seniors/\" + Firebase.auth().currentUser.uid ).set(null)\r\n            .then(Firebase.database().ref(this.state.oldChapter + \"/UserUIDs/\" + Firebase.auth().currentUser.uid ).set(null))\r\n            .then(Firebase.database().ref(this.state.chapter + \"/UserUIDs/\" + Firebase.auth().currentUser.uid).set(1)  )\r\n            .then(() => Updates.reloadAsync().catch(error => alert(\"Please refresh the page!\")))\r\n          )\r\n        })\r\n      )\r\n        Firebase.database().ref(this.state.chapter + \"/\" + DBPlace + \"/\" + Firebase.auth().currentUser.uid + \"/ProfileData\").update({\r\n          Email : this.state.Email.trim()\r\n        })\r\n    }\r\n    \r\n      \r\n  }\r\n  \r\n  render() {\r\n    \r\n    const {navigation} = this.props;\r\n    if(this.state.ready == false){\r\n        return(\r\n            <View style={{flex:1,margin:20}}>\r\n                <Spinner color={AppConstantsValues.COLORS.primaryColor}/>\r\n                <NativeBaseButton block style={{alignSelf:'center',backgroundColor:AppConstantsValues.COLORS.primaryColor}} onPress={() => this.setUp()}>\r\n                    <Text style={{color:AppConstantsValues.COLORS.textInButtonColor}}>Try again!</Text>\r\n                </NativeBaseButton>\r\n            </View>\r\n        )\r\n    }\r\n    return (\r\n      <LinearGradient colors={[COLORS.backgroundColor, COLORS.backgroundColorFade ]}  style={{flex:1}}>\r\n          <View style={{flex:1}}>\r\n        \r\n            <View style={{marginVertical:15,marginHorizontal:20, borderRadius: STYLEVALS.borderRadius,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                    <View style={{flexDirection:'row',alignItems:'center',overflow:'hidden'}}>\r\n                      <Icon active name=\"person\"/>\r\n                      <Item style={{width:'100%'}}>\r\n                        <Input placeholder=\"Name\"\r\n               \r\n                        style={{color:COLORS.textColor}}\r\n                        value = {this.state.Name}\r\n                        onChangeText={text => this.setState({Name:text})}/>\r\n                      </Item>\r\n                    </View>\r\n                    <View style={{flexDirection:'row',alignItems:'center',overflow:'hidden'}}>\r\n                      <Icon active name=\"md-mail\"/>\r\n                      <Item style={{width:'100%'}}>\r\n                        <Input placeholder=\"Email\"\r\n                        value = {this.state.Email}\r\n                        onChangeText={text => this.setState({Email:text})}/>\r\n                      </Item>\r\n                    </View>\r\n                    {this.state.role == \"Senior\" ? \r\n                      <View style={{flexDirection:'row',alignItems:'center',overflow:'hidden'}}>\r\n                          \r\n                         \r\n                          <MaterialIcons name=\"place\" size={30} color=\"black\" />\r\n                          <Item style={{width:'100%'}} onPress={() => this.setState({showChaptersModal:!this.state.showChaptersModal})}>\r\n                            \r\n                            <Input \r\n                            value={this.state.chapter}\r\n                            placeholder=\"Find your chapter (click here)\"\r\n                            onFocus={() => this.setState({showChaptersModal:!this.state.showChaptersModal})}\r\n                            />\r\n                          </Item>\r\n                         \r\n                      </View>\r\n                    :\r\n                    null}\r\n                    <NativeBaseButton full rounded\r\n                      style={{justifyContent:'center',alignItems:'center',marginTop:10,backgroundColor:COLORS.primaryColor}}\r\n                      onPress={() =>{this.changeData()}}>\r\n                        <Text style={{color:COLORS.textInButtonColor}}>Save</Text>\r\n                    </NativeBaseButton>\r\n                    <Text style={{alignSelf:'center',marginTop:10}}>Type in and save any changes</Text>\r\n                 \r\n                </View>\r\n            </View>\r\n            \r\n              \r\n            {this.state.role == \"Head\" || this.state.role == \"Volunteer\" ? \r\n            <View style={{flex:1}}>\r\n            <View style={{alignItems:'center'}}>\r\n              <Text style={{color:COLORS.textInButtonColor,fontWeight:'bold'}}>Total Hours: {this.state.totalHours}</Text>\r\n              <NativeBaseButton rounded style={{alignSelf:'center',backgroundColor:COLORS.primaryColor,paddingVertical:10,paddingHorizontal:30,marginTop:10}} onPress={() => {this.getUserData(this.state.chapter,this.state.role);alert(\"Refreshed\")}}>\r\n                <Text style={{color:'white'}}>Refresh</Text>\r\n              </NativeBaseButton>\r\n            </View>\r\n            <FlatList scrollIndicatorInsets={{right:1}}\r\n            refreshControl={<RefreshControl  onRefresh={() => {this.getUserData(this.state.chapter,this.state.role)}}/>}\r\n                  style={{flex:1,marginHorizontal:15,marginTop:5,minHeight:'40%'}}\r\n                  data={this.state.hoursInfo}\r\n                  scrollEnabled={true}\r\n                  keyExtractor={() => Math.random(0,10000)}\r\n                  renderItem={({item,index}) => {\r\n                      console.log(item,\"HOURS DAATA\")\r\n                      return(\r\n                          <Card style={{borderRadius:10,shadowOpacity: 10,\r\n                              shadowOffset: {width: 1, height: 1}}}>\r\n                              <CardItem style={{borderRadius:25}}>\r\n                              <Left>\r\n                                  <Text>{item.EventName}</Text>\r\n                              </Left>\r\n                              <Right>\r\n                                  <Text>{(item.HoursMs/3600000).toFixed(1)}</Text>\r\n                              </Right>\r\n                              </CardItem>\r\n                              \r\n                          </Card>\r\n                          \r\n                      )\r\n                  }}\r\n              />\r\n              </View>\r\n              :\r\n              null}\r\n        \r\n          <Modal visible={this.state.showChaptersModal} animationType=\"slide\">\r\n              <StatusBar/>\r\n              <View style={{flex:1}}>\r\n              <Header transparent style = {{ height: 40, backgroundColor: AppConstantsValues.COLORS.primaryColor, shadowColor: 'transparent'}}>\r\n                  <Left>\r\n                      <NativeBaseButton transparent  onPress = {() => this.setState({showChaptersModal:!this.state.showChaptersModal})}>\r\n                          <FontAwesome5 name=\"angle-down\" style={{ color: 'white', fontSize: 30,paddingHorizontal:10 }} />\r\n                          \r\n                      </NativeBaseButton>\r\n                  </Left>\r\n                  <Body>\r\n                      <Title style = {{color:  'white'}}>Chapters</Title>\r\n                  </Body>\r\n                  <Right/>\r\n              </Header>\r\n              <Text style={{alignSelf:'center',padding:10,fontSize:13,textAlign:'center'}}>Select your Chapter/Where you live or where you would like to move to</Text>\r\n              <FlatList scrollIndicatorInsets={{right:1}}\r\n              style={{flex:1,margin:15}}\r\n              data={this.state.chaptersList}\r\n              keyExtractor={() => Math.random(0,10000)}\r\n              renderItem={({item,index}) => {\r\n                  console.log(item)\r\n                  return(\r\n                      \r\n                          <ListItem onPress = {() => this.setState({chapter:item,showChaptersModal:false})}>\r\n                              <Text style={{fontSize:15}}>{item}</Text>\r\n                          </ListItem>\r\n                      \r\n                      \r\n                  )\r\n              }}\r\n              />\r\n              \r\n              </View>\r\n          </Modal>\r\n        </View>\r\n      </LinearGradient>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n  \r\n\r\n  function ProfileNav({navigation}){\r\n    \r\n    const Stack = createStackNavigator()\r\n    console.log('your squestionnav running')\r\n    return(\r\n        \r\n        <Stack.Navigator initialRouteName=\"Profile\">\r\n            <Stack.Screen name=\"Profile\" component={Profile} \r\n             options={{\r\n          \r\n              headerStyle: {\r\n                backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n               \r\n              },\r\n              headerTintColor: 'white',\r\n              \r\n              headerLeft: () => <TouchableOpacity transparent onPress={() => navigation.openDrawer()}><Entypo style={{  color: 'white', marginLeft: 15, fontSize: 30, marginTop: 7 }} name='menu'/></TouchableOpacity>\r\n            }}\r\n          />\r\n            \r\n            \r\n        </Stack.Navigator>\r\n    )\r\n  }\r\n  \r\n  \r\n  export default ProfileNav","import React from 'react'\r\nimport { StyleSheet,  View,Image,TouchableOpacity,SafeAreaView,Alert, Keyboard,Platform,Text,FlatList,TouchableWithoutFeedback,ScrollView,Linking  } from 'react-native';\r\nimport {Input,Item, Body,Container, Header, Content, Textarea, Form,Left ,Title,Button,Spinner,CheckBox, ListItem,Icon,Right, CardItem,Card} from \"native-base\";\r\n\r\n\r\nimport Firebase from '../firebase'\r\n\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { withNavigation } from 'react-navigation';\r\n\r\n\r\n\r\nimport * as AppConstantsValues from '../Constants'\r\nimport {COLORS,STYLEVALS} from '../Constants'\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Ionicons,Entypo, FontAwesome } from '@expo/vector-icons';\r\n// import * as Notifications from 'expo-notifications';\r\nimport { Dimensions } from 'react-native';\r\n\r\nimport {LinearGradient} from 'expo-linear-gradient'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport Modal from 'modal-react-native-web';\r\n\r\n\r\nconst daysToDownloadForum = -1\r\nconst amountOfMsPerDay = 86400000\r\nconst width = Dimensions.get('window').width;\r\nconst height = Dimensions.get('window').height;\r\nconst searchResultCardColorStart = \"#FFAE5D\"\r\n\r\nconst storeForumDownloadDate = async () => {\r\n  \r\n  const date = new Date().getTime()\r\n  try {\r\n    await AsyncStorage.setItem('@lastForumDownload', date + \"\").then(console.log(\"Stored date: \" , date))\r\n    //await AsyncStorage.clear()\r\n  } catch (e) {\r\n    // saving error\r\n  }\r\n}\r\n\r\n\r\nconst getForumDownloadDateAndValidate = async () => { //true means dowlaod stuff\r\n  try {\r\n    const value = await AsyncStorage.getItem('@lastForumDownload')\r\n    console.log(\"STORAGE VALUE \",value)\r\n    if(value !== null) {\r\n      let dateInMS = parseInt(value)\r\n      let difference = new Date().getTime() - dateInMS\r\n      // value previously stored\r\n      let daysSinceLastDownload =  difference/amountOfMsPerDay\r\n      console.log(\"DAYS SINCE LAST DOWNLAOD\",daysSinceLastDownload,dateInMS,new Date().getTime())\r\n      return (daysSinceLastDownload >= daysToDownloadForum )\r\n    }else{\r\n      return true\r\n    }\r\n  } catch(e) {\r\n    console.log(e)\r\n    return false\r\n    // error reading value\r\n  }\r\n}\r\n\r\nconst storeForum = async (value) => {\r\n  console.log(value)\r\n  try {\r\n    const jsonValue = JSON.stringify(value)\r\n    await AsyncStorage.setItem('@forumData', jsonValue)\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getForum = async () => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem('@forumData')\r\n    return jsonValue != null ? JSON.parse(jsonValue) : [];\r\n  } catch(e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nclass AskQuestion extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      titleValue:\"\",\r\n      questionValue: \"\",\r\n      buttonHidden: true,\r\n      expoPushToken:'',\r\n      isReady:false,\r\n     \r\n      chapter:null,\r\n      role:null,\r\n      forum:[],\r\n      forumDisplay:[],\r\n      receivedFollowUp:false,\r\n      anonymous:false,\r\n      questionTitleValue:\"\",\r\n\r\n      receivedForum:false\r\n      \r\n    };\r\n  }\r\n\r\n  \r\n\r\n  setUp = async () => {\r\n    if(await this.connectToInternet()){\r\n        let chapter = null\r\n        let role = null\r\n        await Firebase.database().ref(\"UserMetaData/\" + Firebase.auth().currentUser.uid).once('value').then(snapshot => {\r\n            const data = snapshot.val()\r\n            chapter =  data.Chapter\r\n            role = data.Role\r\n        })\r\n        \r\n        this.setState({chapter:chapter,role:role})\r\n       \r\n       \r\n        \r\n        \r\n    }else{\r\n        alert(\"No Internet Detected\")\r\n    }\r\n    }\r\n\r\n    connectToInternet = async() => {\r\n        return await AppConstantsValues.checkInternet()\r\n    }\r\n\r\n\r\n  async componentDidMount() {\r\n    await this.setUp()\r\n    if(this.props.route.params != undefined){\r\n      console.log(this.props.route.params,\"PARAMS\")\r\n      const followUp = this.props.route.params\r\n      this.setState({receivedFollowUp:true,titleValue:followUp.Title,questionValue:\"I still don't understand (Type Here):\\n\\n\\n\\nORIGINAL QUESTION:\\n\" + followUp.Question })\r\n\r\n    }\r\n    //await AsyncStorage.multiRemove([\"@forumData\",\"@lastForumDownload\"])\r\n    this.setState({ isReady: true });\r\n  }\r\n  \r\n  getForum = async() => {\r\n    let forumData = []\r\n    await Firebase.database().ref(\"GlobalForum\").once('value').then(snapshot => {\r\n      const data = snapshot.val()\r\n      console.log(JSON.stringify(snapshot.val()).length,\"DATA LENGTH\")\r\n      \r\n      const dataIter = Object.values(data)\r\n      console.log(dataIter.length,\"AMOUNT OF ENTRIES\")\r\n      let dataToSend = []\r\n      for(var x = 0; x < dataIter.length;x++){\r\n        if(dataIter[x].Answered == false){\r\n        \r\n          \r\n        }else{\r\n          dataToSend.push(dataIter[x])\r\n        }\r\n      }\r\n  \r\n      this.setState({forum:dataToSend,forumDisplay:dataToSend})\r\n      forumData = dataToSend\r\n    })\r\n    return forumData\r\n  }\r\n\r\n  searchParse = (text) => {\r\n    if(text != null){\r\n      let textList = text.split(\" \")\r\n      return textList[textList.length - 1]\r\n    }\r\n    return null\r\n  }\r\n\r\n  componentDidUpdate(prevprops){\r\n    \r\n    if(this.props.route.params != undefined && prevprops !== this.props){\r\n      console.log(this.props.route.params,\"PARAMS\")\r\n      const followUp = this.props.route.params\r\n      this.setState({receivedFollowUp:true,titleValue:followUp.Title,questionValue:\"I still don't understand  (Type Here):\\n\\n\\n\\nORIGINAL QUESTION:\\n\" + followUp.Question })\r\n\r\n    }\r\n  }\r\n\r\n  searchFilterFunction = async searchFull => {\r\n    //SOME PARSER\r\n    let search = this.searchParse(searchFull)\r\n    if(search == null || search == \"\"){\r\n        this.setState({forumDisplay:this.state.forum})\r\n    }else{\r\n        let oldData = this.state.forum\r\n        \r\n        const newData = oldData.filter(item => {\r\n            const itemData = `${item.Title.toUpperCase()} ${item.Question.toUpperCase()}`\r\n            const textData = search.toUpperCase()\r\n\r\n            return itemData.indexOf(textData) > -1\r\n        })\r\n       \r\n        this.setState({\r\n            forumDisplay:newData\r\n        })\r\n        \r\n    }\r\n    \r\n\r\n}\r\n  sendQuestionToDatabase = async(title,question) =>{\r\n    \r\n    if(title == \"\" && question ==\"\"){\r\n      alert(\"Please enter something in the text boxes\")\r\n    }else{\r\n      \r\n        //Firebase.database().ref(this.state.chapter  + \"/Seniors/\" + Firebase.auth().currentUser.uid).push()\r\n        \r\n        const addToQuestionBank = Firebase.database().ref(\"GlobalForum\").push()\r\n\r\n        // let imagePresent = false\r\n        // if(this.state.image != null){\r\n        //     imagePresent = this.state.chapter + \"/\" + addToQuestionBank.key\r\n        // }\r\n    \r\n        let askerName = Firebase.auth().currentUser.displayName\r\n        if(this.state.anonymous){\r\n          askerName = \"Anonymous\"\r\n        }\r\n        addToQuestionBank.set({\r\n            Title:title,\r\n            Question:question,\r\n            Asker:Firebase.auth().currentUser.uid,\r\n            QuestionKey : addToQuestionBank.key, //same as image key\r\n            Answered: false,\r\n            AskerName:askerName\r\n            // imagePath:imagePresent\r\n        \r\n        \r\n        }).then(\r\n            Firebase.database().ref(this.state.chapter + \"/Seniors/\" + Firebase.auth().currentUser.uid + \"/Questions\").push((await addToQuestionBank).toString()).then(alert(\"Your question has been submitted!\")).then(this.setState({questionValue:null,titleValue:null,questionTitleValue:null}))\r\n        )\r\n        // if(this.state.image != null){\r\n        //     const response = await fetch(this.state.cUriImage)\r\n        //     const blob = await response.blob()\r\n        //     Firebase.storage().ref(this.state.chapter).child(addToQuestionBank.key).put(blob)\r\n        //     .catch(error => {\r\n        //         alert(error.message)\r\n        //         console.log(\"STORAGE ERROR\",error.message)\r\n        //     } )\r\n        // }\r\n        \r\n    }\r\n    //const dbRef = Firebase.database().ref('/allQuestions/' + newReference.key)\r\n    //dbRef.on('value', snapshot => {\r\n      //console.log(snapshot.val())\r\n    //})\r\n    //this.setState({key:newReference.key})\r\n    \r\n    \r\n  }\r\n  onTextChangeTitle = (titleValue) => {\r\n    this.searchFilterFunction(titleValue)\r\n    this.setState({titleValue})\r\n    this.setState({questionTitleValue:titleValue})\r\n  }\r\n  onTextChange = (questionValue) => {\r\n    this.searchFilterFunction(questionValue)\r\n    this.setState({questionValue})\r\n    this.setState({questionTitleValue:questionValue})\r\n  }\r\n\r\n  getForumOnFocus = async () => {\r\n    let downloadFromDB = await getForumDownloadDateAndValidate()\r\n    if(this.state.receivedForum == false && downloadFromDB){\r\n      console.log(\"DOWNLOADING SAVING AND SHOWING FORUM\")\r\n      this.setState({receivedForum:true})\r\n\r\n      storeForum(await this.getForum())\r\n      storeForumDownloadDate()\r\n    }else if(downloadFromDB == false && this.state.receivedForum == false){\r\n      this.setState({receivedForum:true})\r\n      let forum = await getForum()\r\n      this.setState({forumDisplay:forum,forum:forum})\r\n      console.log(\"GET FORUM FROM STORAGE\")\r\n    }else{\r\n      console.log(\"already received forum\")\r\n    }\r\n  }\r\n  \r\n    render() {\r\n     \r\n      if(!this.state.isReady){\r\n\r\n        return <Spinner/>\r\n      }\r\n      return(\r\n        <LinearGradient colors={[AppConstantsValues.COLORS.backgroundColor,COLORS.backgroundColorFade]} end={{x:0.2,y:0.5}} style={{ flex: 1 }}>\r\n            <TouchableWithoutFeedback style = {{flex: 1, backgroundColor: 'red'}} onPress = {() => Keyboard.dismiss()}>\r\n                <View style = {{ flex: 1, alignItems: 'center', backgroundColor:'transparent'}}>\r\n                    <View style={styles.inputButton}>\r\n                        <Form style = {{width: width * 0.8,alignItems:'center'}}>\r\n                          <Item underline={false} style = {{ borderColor: 'white', paddingTop: 5,width:'100%'}}>\r\n                                <Input\r\n                                    maxHeight={200}\r\n                                    blurOnSubmit={true}\r\n                                    multiline={false}\r\n                                    placeholder=\"Put a Title here (if you want)\"\r\n                                    style={{ textAlign: 'left', fontSize: 13,marginHorizontal:15 }}\r\n                                    onFocus={() => this.getForumOnFocus()}\r\n                                    value={this.state.titleValue}\r\n                                    \r\n                                    onChangeText={this.onTextChangeTitle} />\r\n                                </Item>\r\n                            <Item style = {{borderColor:'transparent', paddingBottom:10,width:'100%'}}>\r\n                                \r\n                                <Textarea\r\n                                \r\n                                    \r\n                                    blurOnSubmit={true}\r\n                                    numberOfLines={8}\r\n                                    placeholder=\"Type your question here\"\r\n                                    style={{ textAlign: 'left', fontSize: 13,marginLeft:15,width:'100%',height:100 }}\r\n                                    clearButtonMode = \"always\"\r\n                                    onFocus={() => this.getForumOnFocus()}\r\n                                    value={this.state.questionValue}\r\n                                    \r\n                                    onChangeText={this.onTextChange} />\r\n                                \r\n                                <TouchableOpacity style={{marginRight:10}} onPress = {() => {this.sendQuestionToDatabase(this.state.titleValue,this.state.questionValue)}}>\r\n                                  <FontAwesome style={{ margin: 7}} size={20} color={AppConstantsValues.COLORS.primaryColor} name=\"paper-plane\" />\r\n                              </TouchableOpacity>\r\n                            </Item>\r\n                            \r\n                        </Form>\r\n                    </View>\r\n                    <View style={styles.bottomTab}>\r\n                        <View>\r\n                            <Text style={{ margin: 20, color: 'gray' }}>Similar Questions:</Text>\r\n                        </View>\r\n                        {this.state.forumDisplay.length == 0 ? \r\n                          <View style = {{marginTop: 100, marginHorizontal: 30}}>\r\n                              <Text style = {{fontSize: 20, opacity: 0.4,textAlign:'center'}}> Start typing your title and question above and related questions will appear here!</Text>\r\n                          </View>\r\n                          :null\r\n                        }\r\n                        <FlatList\r\n                              keyboardShouldPersistTaps=\"handled\"\r\n                              scrollIndicatorInsets={{right:1}}\r\n                              style={{flex:1}}\r\n                             \r\n                              data={this.state.forumDisplay}\r\n                              extraData={this.state.questionValue}\r\n                              keyExtractor={() => Math.random(0,10000)}\r\n                              renderItem={({item,index}) => {\r\n                                let previewText = \"\"\r\n                                if(item.Title == undefined || item.Title == null || item.Title == \"\"){\r\n                                  previewText = item.Question.trim().substring(0,20) + \"...\"\r\n                                }else{\r\n                                  previewText = item.Title\r\n                                }\r\n                                let answers = item.Answered\r\n                                let answersLength = 0\r\n                                if(answers != undefined && answers != null){\r\n                                  answersLength = Object.values(answers).length\r\n                                }\r\n                                return (\r\n                                    <TouchableOpacity onPress={() => this.props.navigation.navigate(\"Question\",{data:item,Chapter:this.state.chapter})}>\r\n                                      \r\n                                       \r\n                                          <LinearGradient colors={[searchResultCardColorStart, COLORS.secondaryColor]} start={[0,0]} end={[1.4, 10]} style={styles.listItem}>\r\n                                            <Text style = {{ fontSize: 15, color: COLORS.textInButtonColor}}>{previewText}</Text>\r\n                                            \r\n                                          </LinearGradient>\r\n                                      \r\n                                       \r\n                                        \r\n                                     \r\n                                    </TouchableOpacity>\r\n                                )\r\n                            }}\r\n                            \r\n                        />\r\n                    </View>\r\n\r\n                    \r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n        </LinearGradient>\r\n                \r\n      )\r\n    \r\n    }\r\n    \r\n}\r\n  \r\n  \r\n    \r\nwithNavigation(AskQuestion)\r\nfunction openLink(link){\r\n  WebBrowser.openBrowserAsync(link).catch(error => {console.log(error),alert(error)\r\n    \r\n  })\r\n}\r\nfunction displayURL(URL){\r\n  if(URL != '' && URL != null && URL != undefined){\r\n    return(\r\n      <CardItem>\r\n        \r\n          <NativeBaseButton transparent textStyle={{color: '#87838B'}} \r\n          onPress ={() => openLink(URL)}>\r\n           \r\n            <Text>Click for helpful website</Text>\r\n          </NativeBaseButton>\r\n        \r\n      </CardItem>\r\n    )\r\n  }else{\r\n    return(\r\n      null\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction AskQuestionNav({navigation}){\r\n    \r\n  const Stack = createStackNavigator()\r\n  console.log('your squestionnav running')\r\n  return(\r\n      \r\n      <Stack.Navigator initialRouteName=\"Your Questions\">\r\n          <Stack.Screen name=\"Ask Question\" component={AskQuestion}  options={{\r\n        \r\n        headerStyle: {\r\n          backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n         \r\n        },\r\n        headerTintColor: 'white',\r\n        \r\n        headerLeft: () => <TouchableOpacity transparent onPress={() => navigation.openDrawer()}><Entypo style={{  color: 'white', marginLeft: 15, fontSize: 30, marginTop: 7 }} name='menu'/></TouchableOpacity>\r\n      }}\r\n        />\r\n          \r\n          <Stack.Screen name=\"Question\" component={Question} options={{\r\n        \r\n        headerStyle: {\r\n          backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n         \r\n        },\r\n        headerTintColor: 'white',\r\n        \r\n       \r\n      }}/>\r\n      </Stack.Navigator>\r\n  )\r\n}\r\n\r\n\r\nexport default AskQuestionNav\r\n\r\nfunction Question({route,navigation}){\r\n  const {data} = route.params\r\n  const {imageDownloadURL} = route.params\r\n  const [listOfAnswers,setListOfAnswers] = useState([])\r\n  const [refreshFlatList,setRefreshFlatlist] = useState(false)\r\n  const [expandedForImages,setExpandedForImages] = useState([])\r\n  const [modalData,setModalData] = useState(null)\r\n  const [modalOpen,setModalOpen] = useState(false)\r\n\r\n  const formatAnswerTextImageInLists = async() => {\r\n    let fullAnswers = data.Answered\r\n    let finalList = []\r\n    let arrAnswers = Object.values(fullAnswers)\r\n    let expandImages = []\r\n    \r\n    for(var x = 0; x < arrAnswers.length;x++){\r\n      let answererName = arrAnswers[x].Name\r\n      let link = arrAnswers[x].Link\r\n      if(answererName == null){\r\n        answererName = \"Anonymous\"\r\n      }\r\n      finalList.push({AnswerText:arrAnswers[x].Answer,AnswerLink:link,AnswererName:answererName})\r\n   \r\n    }\r\n    setListOfAnswers(finalList)\r\n    setExpandedForImages(expandImages)\r\n    setRefreshFlatlist(!refreshFlatList)\r\n  }\r\n  const setImagesExpanded = index =>{\r\n    let copy = expandedForImages\r\n    copy[index] = !copy[index]\r\n    setExpandedForImages(copy)\r\n    setRefreshFlatlist(!refreshFlatList)\r\n  }\r\n\r\n  useEffect(() => {\r\n    formatAnswerTextImageInLists()\r\n  },[])\r\n  return(\r\n            <LinearGradient colors={[COLORS.backgroundColor, COLORS.backgroundColorFade ]} end={{x:0.2,y:0.5}} style={{flex:1}}>\r\n            \r\n                <ScrollView style={{flex:1}}>\r\n                    \r\n                    <View style={{marginVertical:15,marginHorizontal:20, borderRadius: STYLEVALS.borderRadius,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                        <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                            \r\n                            <Text style={{fontSize:20,color:COLORS.textColor}}>Title</Text>\r\n                            <Text style={{color:COLORS.textColor,padding:5}}>{data.Title}</Text>\r\n                            <Text style={{fontSize:20,color:COLORS.textColor,marginTop:10}}>Question</Text>\r\n                            <Text style={{color:COLORS.textColor,padding:5}}>{data.Question}</Text>\r\n                            <Text style={{color:COLORS.textColor}}>Asked by {data.AskerName}</Text>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.bottomTab}>\r\n                    <Text style = {{fontSize: 20, opacity: 0.4,textAlign:'center',marginVertical:10}}> Answers - click to expand</Text>\r\n                      <FlatList scrollIndicatorInsets={{right:1}}\r\n            \r\n        \r\n                          style={{flex:1}}\r\n                          data={listOfAnswers}\r\n                          \r\n                          extraData={refreshFlatList}\r\n                          keyExtractor={() => Math.random(0,10000)}\r\n                          renderItem={({item,index}) => {\r\n                              \r\n                              return(\r\n                                <TouchableOpacity onPress={() => {setModalOpen(true);setModalData(item)}}>\r\n                                      <LinearGradient colors={[searchResultCardColorStart, COLORS.secondaryColor]} start={[0,0]} end={[1.4, 10]} style={styles.listItem}>\r\n                                        <Text style = {{ fontSize: 15, color: COLORS.textInButtonColor}}>{item.AnswerText.substring(0,70)} ...</Text>\r\n                                        \r\n                                      </LinearGradient>\r\n                                </TouchableOpacity>\r\n                              )\r\n                            }}\r\n                          />\r\n                  </View>\r\n              </ScrollView>\r\n              <Modal visible={modalOpen} animationType=\"slide\" statusBarTranslucent={false} transparent={true}>\r\n                  <View style={{flex:1,backgroundColor: modalOpen ? 'rgba(0,0,0,0.8)': null}}>\r\n                  {modalData != null ?\r\n                  \r\n                    <ScrollView style={{flex:1}}>\r\n                    \r\n                      <TouchableOpacity style={{opacity:1}} onPress={() => setModalOpen(false)}>\r\n                      {/* <View style={{height:Platform.OS == \"web\" ? 0 : useHeaderHeight()}}>\r\n                        \r\n                      </View> */}\r\n                        <View style={{marginVertical:15,marginHorizontal:20, borderRadius: STYLEVALS.borderRadius,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                              <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                                  \r\n                                  <Text style={{fontSize:20,color:COLORS.textColor}}>Title</Text>\r\n                                  <Text style={{color:COLORS.textColor,padding:5}}>{data.Title}</Text>\r\n                                  <Text style={{fontSize:20,color:COLORS.textColor,marginTop:10}}>Question</Text>\r\n                                  <Text style={{color:COLORS.textColor,padding:5}}>{data.Question}</Text>\r\n                                  <Text style={{color:COLORS.textColor}}>Asked by {data.AskerName}</Text>\r\n                              </View>\r\n                          </View>\r\n                          \r\n                      </TouchableOpacity>\r\n\r\n                          <View style={styles.bottomTabModal}>\r\n                            <TouchableOpacity onPress={() => setModalOpen(false)} style={{width:'100%',alignItems:'center'}}>\r\n                              <Entypo name=\"chevron-down\" size={40} color=\"black\"  style = {{ opacity: 0.4,textAlign:'center',marginVertical:10}}/>\r\n                            </TouchableOpacity>\r\n                            \r\n                            <ScrollView style={{width:'90%',height:height}}>\r\n                            <View style={{marginVertical:15,marginHorizontal:5, borderRadius: STYLEVALS.borderRadius,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                                  <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                                      \r\n                                      <Text style={{fontSize:20,color:COLORS.textColor}}>Answer</Text>\r\n                                      <Text style={{color:COLORS.textColor,padding:5}}>{modalData.AnswerText}</Text>\r\n                                    \r\n                                      {modalData.AnswerLink != null && modalData.AnswerLink != undefined ? \r\n                                        <TouchableOpacity onPress={() => openAnswerLink(modalData.AnswerLink)}>\r\n                                          \r\n                                            <Text style={{color:COLORS.textColor,padding:5,textDecorationLine:'underline'}}>Helpful link: {modalData.AnswerLink}</Text>\r\n                                        \r\n                                        </TouchableOpacity>\r\n                                        :null\r\n                                      }\r\n                                      <Text style={{color:COLORS.textColor,padding:5}}>Answered by: {modalData.AnswererName}</Text>      \r\n                                  </View>\r\n                              </View>\r\n                              <TouchableOpacity onPress={() => navigation.navigate(\"Ask Question\",{Question:data.Question,Title:data.Title})}>\r\n                                <Text style={{fontSize:16,color:COLORS.primaryColor,alignSelf:'center',margin:10}}>Still Confused?</Text>\r\n                              </TouchableOpacity>\r\n                            </ScrollView>\r\n                            \r\n                          </View>\r\n                    </ScrollView>\r\n                    \r\n                  :\r\n                  null}\r\n                  </View>\r\n              </Modal>\r\n            </LinearGradient>\r\n  )\r\n  \r\n}\r\n\r\n\r\n    \r\nconst styles = StyleSheet.create({\r\n  horizontalFlex: {\r\n      backgroundColor: 'red',\r\n      flexDirection: 'row',\r\n  },\r\n  listItem: {\r\n      marginVertical:7,\r\n     \r\n      borderRadius: 20,\r\n      borderColor: 'grey',\r\n      justifyContent:'space-between',\r\n      \r\n      width:width*0.8,\r\n      borderColor:COLORS.textColor,\r\n      \r\n      padding:10,\r\n      \r\n     \r\n      \r\n  },\r\n  bottomTab: {\r\n      flex: 1,\r\n      width: width,\r\n      backgroundColor: 'white',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: 'white',\r\n      borderBottomLeftRadius: 0,\r\n      borderBottomRightRadius: 0,\r\n      borderTopLeftRadius: 35,\r\n      borderTopRightRadius: 35,\r\n      marginBottom: 1,\r\n      marginTop: 35,\r\n      shadowOpacity: 0.8,\r\n      shadowOffset: {\r\n          width: 5,\r\n          height: 0,\r\n      },\r\n      minHeight:height\r\n  },\r\n  inputButton: {\r\n      shadowOpacity: 1,\r\n      shadowOffset: { width: 5, height: 0 },\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      marginHorizontal: 20,\r\n      paddingHorizontal: 5,\r\n      borderRadius: 25,\r\n      marginTop: 35,\r\n      backgroundColor: 'white'\r\n  },\r\n  modalSection: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      marginTop: 10,\r\n      marginHorizontal: 20,\r\n      backgroundColor: 'white',\r\n      padding: 10,\r\n      borderRadius: 10,\r\n  },\r\n  bottomTabModal: {\r\n      flex: 1,\r\n      width: width,\r\n      backgroundColor: 'white',\r\n      alignItems:'center',\r\n      \r\n      backgroundColor: 'white',\r\n      borderBottomLeftRadius: 0,\r\n      borderBottomRightRadius: 0,\r\n      borderTopLeftRadius: 35,\r\n      borderTopRightRadius: 35,\r\n      marginBottom: 1,\r\n      marginTop: 35,\r\n      shadowOpacity: 0.8,\r\n      shadowOffset: {\r\n          width: 5,\r\n          height: 0,\r\n      },\r\n      overflow:'hidden'\r\n  }\r\n\r\n})\r\n\r\nasync function openAnswerLink(link){\r\n  Linking.canOpenURL(link).then(result => {\r\n      if(result){\r\n          window.open(link, '_blank');\r\n      }else{\r\n          alert(\"Sorry, we cannot open this link\\nIt appears to be broken\")\r\n      }\r\n  })\r\n}","import React,{useEffect,useState} from 'react'\r\nimport { StyleSheet,Alert,View,SafeAreaView,FlatList,Image,Text,Dimensions,ScrollView,RefreshControl,TouchableOpacity,Linking } from 'react-native';\r\nimport {Input,Item, Body,Container, Header, Content, Textarea, Form,Left,Right,Icon,Title,Button,List,ListItem,Card, CardItem,Spinner} from \"native-base\";\r\nimport Firebase from '../firebase'\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport Modal from 'modal-react-native-web';\r\nimport { Ionicons,Entypo,MaterialIcons,Fontisto,FontAwesome } from '@expo/vector-icons';\r\nimport * as AppConstantsValues from '../Constants'\r\nimport { withNavigation } from 'react-navigation';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport {LinearGradient} from 'expo-linear-gradient'\r\n\r\nimport {COLORS,STYLEVALS} from '../Constants'\r\n\r\nimport { StatusBar } from 'react-native';\r\n\r\n\r\nconst amountOfMsPerDay = 86400000\r\nconst width = Dimensions.get('window').width;\r\nconst height = Dimensions.get('window').height;\r\nconst searchResultCardColorStart = \"#FFAE5D\"\r\n\r\nconst extractKey = ({ key }) => key\r\nclass Answer extends React.Component{\r\n \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          dataArrayDisplay:'',\r\n          question:'',\r\n          answerValue: \"\",\r\n          buttonHidden: true,\r\n          questionKey:'',\r\n          isReady:false,\r\n          Claim:false,\r\n          submit:false,\r\n          URLValue:'',\r\n          ImageURL:null,\r\n          ImageURLProcessed:null,\r\n          chapter:null,\r\n          role:null\r\n          \r\n        };\r\n     \r\n\r\n    \r\n      }\r\n      \r\n      \r\n      async componentDidMount() {\r\n        // grab the data from the server and call this.onFirebaseValueChanged every time it changes\r\n        await this.setUp()\r\n       \r\n        \r\n        this.getData()\r\n        \r\n        \r\n        this.setState({ isReady: true });\r\n        \r\n      }\r\n      getData = async() => {\r\n        \r\n        Firebase.database().ref(`GlobalForum`).once(\"value\", this.onFirebaseValueChanged)\r\n      }\r\n\r\n\r\n      setUp = async () => {\r\n        if(await this.connectToInternet()){\r\n            let chapter = null\r\n            let role = null\r\n            await Firebase.database().ref(\"UserMetaData/\" + Firebase.auth().currentUser.uid).once('value').then(snapshot => {\r\n                const data = snapshot.val()\r\n                chapter =  data.Chapter\r\n                role = data.Role\r\n            })\r\n            \r\n            this.setState({chapter:chapter,role:role})\r\n            \r\n           \r\n            \r\n            \r\n        }else{\r\n            alert(\"No Internet Detected\")\r\n        }\r\n        }\r\n    \r\n        connectToInternet = async() => {\r\n            return await AppConstantsValues.checkInternet()\r\n        }\r\n      componentWillUnmount(){\r\n         \r\n          console.log('unmounting ANSWERS')\r\n      }\r\n      ///////////////////////Showing questoins down\r\n      onFirebaseValueChanged = snapshot => {\r\n        \r\n        let dataArray = []\r\n        \r\n       \r\n        snapshot.forEach(childSnapshot => {\r\n          // use const instead of var\r\n          const childData = childSnapshot.val();\r\n          dataArray.push(childData)\r\n        });\r\n        //dataArray.reverse()\r\n        let finalSortedDataArray = []\r\n        for(var x = 0; x < dataArray.length; x++){\r\n          if(dataArray[x].Answered == false){\r\n            finalSortedDataArray.unshift(dataArray[x])\r\n          }else{\r\n            finalSortedDataArray.push(dataArray[x])\r\n          }\r\n        }\r\n        //finalSortedDataArray.reverse()\r\n        this.setState({dataArrayDisplay:finalSortedDataArray})\r\n       \r\n      };\r\n      renderItem = ({ item }) => {\r\n        let previewText = \"\"\r\n        if(item.Title == undefined || item.Title == null || item.Title == \"\"){\r\n          previewText = item.Question.trim().substring(0,20) + \"...\"\r\n        }else{\r\n          previewText = item.Title\r\n        }\r\n        let answers = item.Answered\r\n        let answersLength = 0\r\n        if(answers != undefined && answers != null){\r\n          answersLength = Object.values(answers).length\r\n        }\r\n        return(\r\n          <TouchableOpacity style={{elevation:10,minWidth:width/2}} onPress={() => {this.props.navigation.navigate(\"Question Page\",{data:item,chapter:this.state.chapter})}}>\r\n              <View style={{borderRadius:STYLEVALS.borderRadius,marginVertical:10}}>\r\n                  <LinearGradient colors={[COLORS.cardColor,COLORS.cardColor, COLORS.cardColor, COLORS.cardColor, COLORS.cardColor]} style={{ flex: 1,borderRadius:STYLEVALS.borderRadius,padding:10}}>\r\n                      <View style={{flexDirection:'column'}}>\r\n                          \r\n                          <Text style={{color:COLORS.textColor,fontWeight:'bold'}}>{answersLength} Answers</Text>\r\n                          <View style={{backgroundColor:COLORS.cardColor,borderRadius:STYLEVALS.borderRadius}}>\r\n                              <Text style={{color:COLORS.textColor}}>{previewText}</Text>\r\n                          </View>\r\n                      </View> \r\n                      \r\n                      \r\n                  </LinearGradient>\r\n              </View>\r\n          </TouchableOpacity>\r\n        )\r\n       \r\n\r\n      }\r\n     \r\n\r\n   componentDidUpdate(prevProps) {\r\n        if(prevProps.route !== this.props.route) {\r\n            try{\r\n                const needsRefresh = this.props.route.params.refreshParentPage\r\n            \r\n                if(needsRefresh != undefined && needsRefresh != null && needsRefresh){\r\n                   // this.getData()\r\n                }\r\n                \r\n            }catch(e){\r\n                console.log(e)\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n          console.log(this.state.questionKey)\r\n          if(!this.state.isReady){\r\n    \r\n            return <Spinner/>\r\n          }else{\r\n            return(\r\n                <View style={styles.container}>\r\n                  <LinearGradient colors={[AppConstantsValues.COLORS.backgroundColor,COLORS.backgroundColorFade]} end={{x:0.2,y:0.5}} style={{ flex: 1,alignItems:'center'}}>\r\n                    <Button rounded style={{alignSelf:'center',backgroundColor:COLORS.primaryColor,paddingVertical:10,paddingHorizontal:30,marginTop:10}} onPress={() => {this.getData();alert(\"Refreshed\")}}>\r\n                      <Text style={{color:'white'}}>Refresh</Text>\r\n                    </Button>\r\n                    <FlatList\r\n                    refreshControl={<RefreshControl  onRefresh={() => {this.getData()}}/>}\r\n                    scrollIndicatorInsets={{right:1}}\r\n                        style={{flex:1,alignItems:'center',alignContent:'center',alignSelf:'center'}}\r\n                        style={styles.questionList}\r\n                        data={this.state.dataArrayDisplay}\r\n                        renderItem={this.renderItem}\r\n                        keyExtractor={extractKey}     \r\n                    />\r\n                  </LinearGradient>\r\n                </View>\r\n            )\r\n          }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nwithNavigation(Answer)\r\n\r\n//use same components by passing hard coded params, then just send back multiple navs\r\nexport default function AnswerQuestionsNav({navigation,chapter}){\r\n    const Stack = createStackNavigator()\r\n    console.log(chapter,\"IN STACK NAV\")\r\n    return(\r\n        \r\n        <Stack.Navigator>\r\n            <Stack.Screen name=\"Answer Questions\" \r\n            component={Answer}\r\n            options={{\r\n        \r\n              headerStyle: {\r\n                backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n               \r\n              },\r\n              headerTintColor: 'white',\r\n              \r\n              headerLeft: () => <TouchableOpacity transparent onPress={() => navigation.openDrawer()}><Entypo style={{  color: 'white', marginLeft: 15, fontSize: 30, marginTop: 7 }} name='menu'/></TouchableOpacity>\r\n            }}/>\r\n            \r\n           \r\n            <Stack.Screen name = \"Question Page\" component ={QuestionNew}\r\n            options={{\r\n        \r\n              headerStyle: {\r\n                backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n               \r\n              },\r\n              headerTintColor: 'white',\r\n              \r\n              \r\n            }}/>\r\n            \r\n        </Stack.Navigator>\r\n    )\r\n}\r\n\r\nfunction QuestionNew({route,navigation}){\r\n  const {data} = route.params\r\n  const {chapter} = route.params\r\n\r\n  const {imageDownloadURL} = route.params\r\n  const [listOfAnswers,setListOfAnswers] = useState([])\r\n  const [refreshFlatList,setRefreshFlatlist] = useState(false)\r\n  const [expandedForImages,setExpandedForImages] = useState([])\r\n  const [modalData,setModalData] = useState(null)\r\n  const [modalOpen,setModalOpen] = useState(false)\r\n\r\n  const [answerText,setAnswerText] = useState(null)\r\n  const [answerLink,setAnswerLink] = useState(null)\r\n  const [answerModalOpen,setAnswerModalOpen] = useState(false)\r\n  const [refreshParent,setRefreshParent] = useState(false)\r\n  const [readyToSubmit,setReadyToSubmit] = useState(false)\r\n  const sendAnswer = () => {\r\n    const path = \"GlobalForum/\" + data.QuestionKey + \"/Answered/\"\r\n    const refForAnswer = Firebase.database().ref(path).push()\r\n    \r\n\r\n    refForAnswer.set({\r\n        Answer:answerText,\r\n        Link:answerLink,\r\n        Name:Firebase.auth().currentUser.displayName\r\n    }).then(\r\n      Firebase.database().ref(\"UserMetaData/\" + Firebase.auth().currentUser.uid).once('value').then(snapshot => {\r\n        const metadata = snapshot.val()\r\n        if(metadata.primaryRole != null && metadata.primaryRole == \"Admin\"){\r\n          console.log(\"NO HOURS FOR ADMINS\")\r\n        }else{\r\n          Firebase.database().ref(chapter + \"/Volunteers/\" + Firebase.auth().currentUser.uid + \"/Hours\").push({\r\n            EventName:\"Answered Question: \" + data.QuestionKey,\r\n            Hours:  3000 * answerText.length //3 seconds per character\r\n        })\r\n        }\r\n      })\r\n      // .then(\r\n      //   Firebase.database().ref(\"UserPushTokens/\" + data.Asker).once('value').then(snapshot => {\r\n      //     let pushToken = snapshot.val()\r\n      //     if(pushToken != null){\r\n      //       sendPushNotification(pushToken)\r\n      //     }\r\n      //   })\r\n      // )\r\n    )\r\n    //.then(alert(\"Processing Answer Submission\",\"You have received your hours which can be viewed in profile, your answer will be approved soon\"))\r\n    setRefreshParent(true)\r\n    endAnswer()\r\n    \r\n  }\r\n\r\n  const endAnswer = () => {\r\n    alert(\"Processing Answer Submission\\nYou have received your hours which can be viewed in profile, your answer will be approved soon\")\r\n    \r\n    setAnswerLink(null)\r\n    setAnswerText(null)\r\n    setAnswerModalOpen(false)\r\n    navigation.goBack()\r\n  }\r\n\r\n  const formatAnswerTextImageInLists = async() => {\r\n    let fullAnswers = data.Answered\r\n    let finalList = []\r\n    let arrAnswers = Object.values(fullAnswers)\r\n    let expandImages = []\r\n    \r\n    for(var x = 0; x < arrAnswers.length;x++){\r\n      let answererName = arrAnswers[x].Name\r\n      let link = arrAnswers[x].Link\r\n      if(answererName == null){\r\n        answererName = \"Anonymous\"\r\n      }\r\n      finalList.push({AnswerText:arrAnswers[x].Answer,AnswerLink:link,AnswererName:answererName})\r\n   \r\n    }\r\n    setListOfAnswers(finalList)\r\n    setExpandedForImages(expandImages)\r\n    setRefreshFlatlist(!refreshFlatList)\r\n  }\r\n  const setImagesExpanded = index =>{\r\n    let copy = expandedForImages\r\n    copy[index] = !copy[index]\r\n    setExpandedForImages(copy)\r\n    setRefreshFlatlist(!refreshFlatList)\r\n  }\r\n\r\n  useEffect(() => {\r\n    formatAnswerTextImageInLists()\r\n  },[])\r\n  return(\r\n    <LinearGradient colors={[COLORS.backgroundColor, COLORS.backgroundColorFade ]} end={{x:0.2,y:0.5}} style={{flex:1}}>\r\n                <ScrollView style={{flex:1}}>\r\n                    \r\n                    <View style={{marginVertical:15,marginHorizontal:20, borderRadius: STYLEVALS.borderRadius,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                        <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                            \r\n                            <Text style={{fontSize:20,color:COLORS.textColor}}>Title</Text>\r\n                            <Text style={{color:COLORS.textColor,padding:5}}>{data.Title}</Text>\r\n                            <Text style={{fontSize:20,color:COLORS.textColor,marginTop:10}}>Question</Text>\r\n                            <Text style={{color:COLORS.textColor,padding:5}}>{data.Question}</Text>\r\n                            \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.bottomTab}>\r\n                    <TouchableOpacity style={{alignItems:'center',backgroundColor:COLORS.primaryColor,borderRadius:STYLEVALS.borderRadius,marginTop:10,padding:10}} onPress={() => setAnswerModalOpen(true)}>\r\n                      <MaterialIcons name=\"message\" size={24} color=\"white\" />\r\n                      <Text style={{color:COLORS.textInButtonColor}}>Write an answer</Text>\r\n                    </TouchableOpacity>\r\n                    <Text style = {{fontSize: 15, opacity: 0.4,textAlign:'center',marginVertical:10}}>Other Answers - click to expand</Text>\r\n                      <FlatList scrollIndicatorInsets={{right:1}}\r\n            \r\n                          scrollEnabled={true}\r\n                          style={{flex:1}}\r\n                          data={listOfAnswers}\r\n                          \r\n                          extraData={refreshFlatList}\r\n                          keyExtractor={() => Math.random(0,10000)}\r\n                          renderItem={({item,index}) => {\r\n                              \r\n                              return(\r\n                                <TouchableOpacity onPress={() => {setModalOpen(true);setModalData(item)}}>\r\n                                      <LinearGradient colors={[searchResultCardColorStart, COLORS.secondaryColor]} start={[0,0]} end={[1.4, 10]} style={styles.listItem}>\r\n                                        <Text style = {{ fontSize: 15, color: COLORS.textInButtonColor}}>{item.AnswerText.substring(0,70)} ...</Text>\r\n                                        \r\n                                      </LinearGradient>\r\n                                </TouchableOpacity>\r\n                              )\r\n                            }}\r\n                          />\r\n                  </View>\r\n              </ScrollView>\r\n              <Modal visible={modalOpen} animationType=\"slide\" transparent={false}>\r\n                {modalData != null ?\r\n                <ScrollView style={{flex:1,backgroundColor:COLORS.backgroundColor}} >\r\n                  <TouchableOpacity style={{opacity:1}} onPress={() => setModalOpen(false)}>\r\n                  {/* <View style={{height:Platform.OS == \"web\" ? 0 : useHeaderHeight()}}>\r\n                    \r\n                  </View> */}\r\n                    <View style={{marginVertical:15,marginHorizontal:20, borderRadius: STYLEVALS.borderRadius,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                          <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                              \r\n                              <Text style={{fontSize:20,color:COLORS.textColor}}>Title</Text>\r\n                              <Text style={{color:COLORS.textColor,padding:5}}>{data.Title}</Text>\r\n                              <Text style={{fontSize:20,color:COLORS.textColor,marginTop:10}}>Question</Text>\r\n                              <Text style={{color:COLORS.textColor,padding:5}}>{data.Question}</Text>\r\n                              \r\n                          </View>\r\n                      </View>\r\n                      \r\n                  </TouchableOpacity>\r\n\r\n                      <View style={styles.bottomTabModal}>\r\n                        <TouchableOpacity onPress={() => setModalOpen(false)} style={{width:'100%',alignItems:'center'}}>\r\n                          <Entypo name=\"chevron-down\" size={40} color=\"black\"  style = {{ opacity: 0.4,textAlign:'center',marginVertical:10}}/>\r\n                        </TouchableOpacity>\r\n                        \r\n                        <ScrollView style={{width:'90%',height:height}} nestedScrollEnabled={true}>\r\n                            <View style={{marginVertical:15,marginHorizontal:5, borderRadius: STYLEVALS.borderRadius,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                              <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                                  \r\n                                  <Text style={{fontSize:20,color:COLORS.textColor}}>Answer</Text>\r\n                                  <Text style={{color:COLORS.textColor,padding:5}}>{modalData.AnswerText}</Text>\r\n                                \r\n                                  {modalData.AnswerLink != null && modalData.AnswerLink != undefined ? \r\n                                    <TouchableOpacity onPress={() => openAnswerLink(modalData.AnswerLink)}>\r\n                                      \r\n                                        <Text style={{color:COLORS.textColor,padding:5,textDecorationLine:'underline'}}>Helpful link: {modalData.AnswerLink}</Text>\r\n                                    \r\n                                    </TouchableOpacity>\r\n                                    :null\r\n                                  }\r\n                                  <Text style={{color:COLORS.textColor,padding:5}}>Answered by: {modalData.AnswererName}</Text>      \r\n                              </View>\r\n                          </View>\r\n                     \r\n                        </ScrollView>\r\n                        \r\n                      </View>\r\n                </ScrollView>\r\n                :\r\n                null}\r\n              </Modal>\r\n              <Modal visible={answerModalOpen} presentationStyle=\"overFullScreen\" animationType=\"slide\">\r\n                <StatusBar barStyle=\"dark-content\"/>\r\n                  <SafeAreaView style={{flex:1}}>\r\n                    <View style={{justifyContent:'space-between',flexDirection:'row',alignItems:'center'}}>\r\n                      <TouchableOpacity onPress={() => {setAnswerModalOpen(false);setReadyToSubmit(false)}}>\r\n                        <Entypo name=\"chevron-down\" size={40} color={COLORS.primaryColor}  style = {{ opacity: 1,marginVertical:10}}/>\r\n                      </TouchableOpacity>\r\n                      <Text style={{color:COLORS.textColor,fontSize:18}}>{data.Title}</Text>\r\n                    \r\n                      <TouchableOpacity>\r\n                        <Entypo name=\"chevron-down\" size={40} color=\"white\"  style = {{ opacity: 0,marginVertical:10}}/>\r\n                      </TouchableOpacity>\r\n\r\n                    </View>\r\n                    <ScrollView style={{paddingHorizontal:5}} nestedScrollEnabled={true}>\r\n                      <Text style={{color:COLORS.textColor,padding:5}}>{data.Question}</Text>\r\n                      <Textarea rowSpan={7} \r\n                      \r\n                        bordered placeholder=\"Enter or paste an answer, make sure to not skip any steps, it should read almost like a lab procedure\"\r\n                        value = {answerText}\r\n                        onChangeText={text => {setAnswerText(text);setReadyToSubmit(false)}} \r\n                      />\r\n                      <Item style={{marginVertical:10}}> \r\n                        <Input value={answerLink} onChangeText={text => {setAnswerLink(text);setReadyToSubmit(false)}} placeholder=\"External site link\" clearButtonMode=\"while-editing\"/>\r\n                      </Item>\r\n                      {!readyToSubmit ? \r\n                      <TouchableOpacity style={{backgroundColor:COLORS.primaryColor,flexDirection:'column',paddingHorizontal:20,paddingVertical:5,borderRadius:STYLEVALS.borderRadius,alignSelf:'center',alignItems:'center'}} onPress={()=>setReadyToSubmit(true)}>\r\n                        <Fontisto name=\"preview\" size={35} color={COLORS.textInButtonColor}/>\r\n                        <Text style={{color:COLORS.textInButtonColor,fontWeight:'bold'}}>Review Answer</Text>\r\n                      </TouchableOpacity>\r\n                      :\r\n                      <TouchableOpacity style={{backgroundColor:COLORS.primaryColor,flexDirection:'column',paddingHorizontal:20,paddingVertical:5,borderRadius:STYLEVALS.borderRadius,alignSelf:'center',alignItems:'center'}} onPress={() => sendAnswer()}> \r\n                        <FontAwesome name=\"send\" size={35} color={COLORS.textInButtonColor} />\r\n                        <Text style={{color:COLORS.textInButtonColor,fontWeight:'bold'}}>Submit Answer</Text>\r\n                      </TouchableOpacity>\r\n                      }\r\n                      <Text style={{marginTop:300,padding:20,textAlign:'center'}}>Please provide detailed answers that can be read by experts but also novices. Also, please avoid big blocks of text.</Text>\r\n                    </ScrollView>\r\n                    \r\n                  </SafeAreaView>              \r\n              </Modal>\r\n            </LinearGradient>\r\n  )\r\n  \r\n}\r\nasync function openAnswerLink(link){\r\n  Linking.canOpenURL(link).then(result => {\r\n      if(result){\r\n          window.open(link, '_blank');\r\n      }else{\r\n          alert(\"Sorry, we cannot open this link\\nIt appears to be broken\")\r\n      }\r\n  })\r\n}    \r\n    \r\nconst styles = StyleSheet.create({\r\n  container:{\r\n    flex:1,\r\n  },\r\n  questionList:{\r\n    flex:1,\r\n    paddingTop:10,\r\n    paddingHorizontal:10,\r\n    paddingBottom:50\r\n  },\r\n  horizontalFlex: {\r\n      backgroundColor: 'red',\r\n      flexDirection: 'row',\r\n  },\r\n  listItem: {\r\n      marginVertical:7,\r\n     \r\n      borderRadius: 20,\r\n      borderColor: 'grey',\r\n      justifyContent:'space-between',\r\n      \r\n      width:width*0.8,\r\n      borderColor:COLORS.textColor,\r\n      \r\n      padding:10,\r\n      \r\n     \r\n      \r\n  },\r\n  bottomTab: {\r\n      flex: 1,\r\n      width: width,\r\n      backgroundColor: 'white',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: 'white',\r\n      borderBottomLeftRadius: 35,\r\n      borderBottomRightRadius: 35,\r\n      borderTopLeftRadius: 35,\r\n      borderTopRightRadius: 35,\r\n      marginBottom: 1,\r\n      marginTop: 35,\r\n      shadowOpacity: 0.8,\r\n      shadowOffset: {\r\n          width: 5,\r\n          height: 0,\r\n      },\r\n      minHeight:height\r\n  },\r\n  inputButton: {\r\n      shadowOpacity: 1,\r\n      shadowOffset: { width: 5, height: 0 },\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      marginHorizontal: 20,\r\n      paddingHorizontal: 5,\r\n      borderRadius: 25,\r\n      marginTop: 35,\r\n      backgroundColor: 'white'\r\n  },\r\n  modalSection: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      marginTop: 10,\r\n      marginHorizontal: 20,\r\n      backgroundColor: 'white',\r\n      padding: 10,\r\n      borderRadius: 10,\r\n  },\r\n  bottomTabModal: {\r\n      flex: 1,\r\n      width: width,\r\n      backgroundColor: 'white',\r\n      alignItems:'center',\r\n      \r\n      backgroundColor: 'white',\r\n      borderBottomLeftRadius: 0,\r\n      borderBottomRightRadius: 0,\r\n      borderTopLeftRadius: 35,\r\n      borderTopRightRadius: 35,\r\n      marginBottom: 1,\r\n      marginTop: 35,\r\n      shadowOpacity: 0.8,\r\n      shadowOffset: {\r\n          width: 5,\r\n          height: 0,\r\n      },\r\n      overflow:'hidden'\r\n  }\r\n\r\n})\r\n\r\nfunction QuestionPage({route,navigation}){\r\n    const {data} = route.params\r\n    const {chapter} = route.params\r\n    const [imageURL,setImageURL] = useState(false)\r\n    const [answerText,setAnswerText] = useState(null)\r\n    const [answerLink,setAnswerLink] = useState(null)\r\n    const [answerImages,setAnswerImages] = useState([])\r\n    const [answerCUriImages,setAnswerCUriImages] = useState([])\r\n    const [refreshImagesAttachedDisplay,setRefreshImagesAttachedDisplay] = useState(false)\r\n    const [showImageModal,setShowImageModal] = useState(false)\r\n    const [imageLoadedForModal,setImageLoadedForModal] = useState(null)\r\n    const [listOfPrevAnswers,setListOfPrevAnswers] = useState([])\r\n    const [refreshParent,setRefreshParent] = useState(false)\r\n    \r\n      const sendAnswer = () => {\r\n          const path = \"GlobalForum/\" + data.QuestionKey + \"/Answered/\"\r\n          const refForAnswer = Firebase.database().ref(path).push()\r\n          \r\n\r\n          refForAnswer.set({\r\n              Answer:answerText,\r\n              Link:answerLink,\r\n              Name:Firebase.auth().currentUser.displayName\r\n          }).then(\r\n            Firebase.database().ref(\"UserMetaData/\" + Firebase.auth().currentUser.uid).once('value').then(snapshot => {\r\n              const metadata = snapshot.val()\r\n              if(metadata.primaryRole != null && metadata.primaryRole == \"Admin\"){\r\n                console.log(\"NO HOURS FOR ADMINS\")\r\n              }else{\r\n                Firebase.database().ref(chapter + \"/Volunteers/\" + Firebase.auth().currentUser.uid + \"/Hours\").push({\r\n                  EventName:\"Answered Question: \" + data.QuestionKey,\r\n                  Hours:  3000 * answerText.length //3 seconds per character\r\n              })\r\n              }\r\n            })\r\n            // .then(\r\n            //   Firebase.database().ref(\"UserPushTokens/\" + data.Asker).once('value').then(snapshot => {\r\n            //     let pushToken = snapshot.val()\r\n            //     if(pushToken != null){\r\n            //       sendPushNotification(pushToken)\r\n            //     }\r\n            //   })\r\n            // )\r\n          )\r\n          setRefreshParent(true)\r\n          \r\n        }\r\n\r\n    useEffect(() => {\r\n        //loadImage(data.imagePath)\r\n        if(data.Answered != false){\r\n          setListOfPrevAnswers(Object.values(data.Answered))\r\n        }\r\n        \r\n    },[])\r\n    console.log(data)\r\n    \r\n   \r\n    return(\r\n        <ScrollView>\r\n            <Button style={{margin:20}} onPress={() => navigation.navigate(\"All Questions\",{refreshParentPage:refreshParent})}>\r\n              <Text>back</Text>\r\n            </Button>\r\n            <Text>{data.Title}</Text>\r\n            <Text>{data.Question}</Text>\r\n            {imageURL == false ?\r\n          null:\r\n          <Button transparent style={{flex:1,height:100}} onPress={() => {setImageLoadedForModal(imageURL);setShowImageModal(!showImageModal)}}>\r\n            <Image style={{height:100,resizeMode:'contain',margin:5,flex:1}} source={{uri:imageURL}}/>\r\n          </Button>\r\n          }\r\n          <Form>\r\n            <Textarea rowSpan={7} \r\n            bordered placeholder=\"Enter your question, if you are not sure how to start click on Examples at the top right\"\r\n            value = {answerText}\r\n            onChangeText={text => setAnswerText(text)} />\r\n           \r\n          </Form>\r\n          <Item style={{marginVertical:10}}> \r\n            <Input value={answerLink} onChangeText={text => setAnswerLink(text)} placeholder=\"External site link\" clearButtonMode=\"while-editing\"/>\r\n          </Item>\r\n          <Button onPress={() => sendAnswer()}>\r\n              <Text>SEND ANSWER</Text>\r\n          </Button>\r\n          <FlatList scrollIndicatorInsets={{right:1}}\r\n           \r\n               \r\n                style={{flex:1,backgroundColor:'grey'}}\r\n                data={listOfPrevAnswers}\r\n              \r\n                \r\n                keyExtractor={() => Math.random(0,10000)}\r\n                renderItem={({item,index}) => {\r\n                  return(\r\n                    <View>\r\n                    <Text>{item.Answer}</Text>\r\n                    {item.Link != undefined ? \r\n                    <Text>{item.Link}</Text>\r\n                    :\r\n                    <Text>no link</Text>\r\n                    }\r\n                    </View>\r\n                  )\r\n                }}\r\n            />\r\n         \r\n      </ScrollView>\r\n    )\r\n}\r\nfunction makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n }\r\n//  async function sendPushNotification(expoPushToken) {\r\n//   const message = {\r\n//     to: expoPushToken,\r\n//     sound: 'default',\r\n//     title: 'Your Question has been answered!',\r\n//     body: 'Head over to the Previous Questions page to see it!',\r\n    \r\n//   };\r\n\r\n//   await fetch('https://exp.host/--/api/v2/push/send', {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       Accept: 'application/json',\r\n//       'Accept-encoding': 'gzip, deflate',\r\n//       'Content-Type': 'application/json',\r\n//     },\r\n//     body: JSON.stringify(message),\r\n//   });\r\n// }","import React from \"react\";\r\nimport { Container, Header, Content, Accordion,Input, CardItem, Body,Card,List,ListItem,Left,Right,Icon,Spinner } from \"native-base\";\r\nimport {Button as NativeBaseButton} from 'native-base'\r\n\r\nimport { withNavigation } from 'react-navigation';\r\nimport Firebase from '../firebase'\r\n\r\nimport { Alert,Button,View,Vibration,Platform,FlatList,StyleSheet,Image ,RefreshControl,TouchableOpacity,Dimensions,ScrollView,Linking,Text} from \"react-native\";\r\n// import { Notifications } from 'expo';\r\nimport Modal from 'modal-react-native-web';\r\n\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport { Ionicons,Entypo } from '@expo/vector-icons';\r\n\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport * as AppConstantsValues from '../Constants'\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport{LinearGradient} from 'expo-linear-gradient'\r\nimport {COLORS,STYLEVALS} from '../Constants'\r\n\r\n\r\nconst daysToDownloadForum = -1\r\nconst amountOfMsPerDay = 86400000\r\nconst width = Dimensions.get('window').width;\r\nconst height = Dimensions.get('window').height;\r\nconst searchResultCardColorStart = \"#FFAE5D\"\r\n\r\nconst extractKey = ({ key }) => key\r\nclass PreviousQuestions extends React.Component {\r\n    \r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            dataArrayDisplay : [],\r\n            search:'',\r\n            isReady:false,\r\n            Question:'',\r\n            Answer:'',\r\n            URL:'',\r\n            chapter:null,\r\n            role:null,\r\n            refreshing:false\r\n        }\r\n     \r\n\r\n    \r\n    }\r\n    async componentDidMount() {\r\n      // grab the data from the server and call this.onFirebaseValueChanged every time it changes\r\n      await this.setUp()\r\n     \r\n      this.setState({ isReady: true });\r\n   \r\n    }\r\n\r\n\r\n    setUp = async () => {\r\n        if(await this.connectToInternet()){\r\n            let chapter = null\r\n            let role = null\r\n            await Firebase.database().ref(\"UserMetaData/\" + Firebase.auth().currentUser.uid).once('value').then(snapshot => {\r\n                const data = snapshot.val()\r\n                chapter =  data.Chapter\r\n                role = data.Role\r\n            })\r\n            \r\n            Firebase.database().ref(chapter + \"/Seniors/\" + Firebase.auth().currentUser.uid + \"/Questions\").once(\"value\", this.onFirebaseValueChanged);\r\n            \r\n            this.setState({chapter:chapter,role:role})\r\n           \r\n           \r\n            \r\n            \r\n        }else{\r\n            alert(\"No Internet Detected\")\r\n        }\r\n        }\r\n    \r\n        connectToInternet = async() => {\r\n            return await AppConstantsValues.checkInternet()\r\n        }\r\n    refresh = async () => {\r\n      this.setState({refreshing:true})\r\n      Firebase.database().ref(this.state.chapter + \"/Seniors/\" + Firebase.auth().currentUser.uid + \"/Questions\").once(\"value\", this.onFirebaseValueChanged);\r\n      console.log(\"refreshed\")\r\n      this.setState({refreshing:false})\r\n    }\r\n \r\n    \r\n    onFirebaseValueChanged = async snapshot => {\r\n        let promiseURLS = []\r\n        // use let instead of var because it's changing\r\n        let dataArray = []\r\n        console.log(snapshot.val())\r\n        snapshot.forEach(childSnapshot => {\r\n          // use const instead of var\r\n          const childData = childSnapshot.val();\r\n          console.log(childData,\"CHILDATAT\")\r\n          promiseURLS.push(childData)\r\n        });\r\n        Promise.all(\r\n            promiseURLS.map(async url => {\r\n                await Firebase.database().refFromURL(url).once('value').then(snapshot =>{\r\n                  const data = snapshot.val()\r\n                  if(data != null){\r\n                    dataArray.push(data)\r\n                  }\r\n                    \r\n                    console.log(url,data,\"IN PROMISE\")\r\n                } \r\n            )\r\n        })\r\n        ).then(() => {\r\n\r\n            console.log(dataArray,\"PROMISES RESOLVED\")\r\n            dataArray.reverse()\r\n            this.setState({dataArrayDisplay:dataArray})\r\n        \r\n        }).catch(error => {\r\n            alert(error.toString(error))\r\n        })\r\n        \r\n    };\r\n      \r\n    goToQuestionPage = async(item) => {\r\n        \r\n      this.props.navigation.navigate('Question', { \r\n      data:item,\r\n      imageDownloadURL:false})\r\n    }\r\n      \r\n    renderItem = ({item}) =>{\r\n      let previewText = \"\"\r\n      if(item.Title == undefined || item.Title == null || item.Title == \"\"){\r\n        previewText = item.Question.trim()\r\n      }else{\r\n        previewText = item.Title\r\n      }\r\n      let answers = item.Answered\r\n      let answersLength = 0\r\n      if(answers != undefined && answers != null){\r\n        answersLength = Object.values(answers).length\r\n      }\r\n      if(item.Answered == false){\r\n          return(\r\n            <TouchableOpacity disabled style={{minWidth:width * 0.6}}>\r\n              <View style={{borderRadius:STYLEVALS.borderRadius,marginVertical:10}}>\r\n                  <LinearGradient colors={[COLORS.cardColor,COLORS.cardColor, COLORS.cardColor, COLORS.cardColor, COLORS.cardColor]} style={{ flex: 1,borderRadius:STYLEVALS.borderRadius,padding:10}}>\r\n                      <View style={{flexDirection:'column'}}>\r\n                          \r\n                          <Text style={{color:COLORS.textColor,fontWeight:'bold'}}>Pending Answer</Text>\r\n                          <View style={{backgroundColor:COLORS.cardColor,borderRadius:STYLEVALS.borderRadius}}>\r\n                              <Text style={{color:COLORS.textColor}}>{previewText}</Text>\r\n                          </View>\r\n                      </View> \r\n                      \r\n                      \r\n                  </LinearGradient>\r\n              </View>\r\n          </TouchableOpacity>\r\n          ) \r\n      }else{\r\n          return(\r\n             \r\n          <TouchableOpacity  onPress={() => this.goToQuestionPage(item)} style={{minWidth:width * 0.6}}>\r\n              <View style={{borderRadius:STYLEVALS.borderRadius,marginVertical:10}}>\r\n                  <LinearGradient colors={[COLORS.cardColor,COLORS.cardColor, COLORS.cardColor, COLORS.cardColor, COLORS.cardColor]} style={{ flex: 1,borderRadius:STYLEVALS.borderRadius,padding:10}}>\r\n                      <View style={{flexDirection:'column'}}>\r\n                          \r\n                          <Text style={{color:COLORS.textColor,fontWeight:'bold'}}>{answersLength} Answers</Text>\r\n                          <View style={{backgroundColor:COLORS.cardColor,borderRadius:STYLEVALS.borderRadius}}>\r\n                              <Text style={{color:COLORS.textColor}}>{previewText}</Text>\r\n                          </View>\r\n                      </View> \r\n                      \r\n                      \r\n                  </LinearGradient>\r\n              </View>\r\n          </TouchableOpacity>\r\n          )\r\n      }\r\n        \r\n      \r\n    }\r\n      \r\n    render(){\r\n       \r\n        if(!this.state.isReady){\r\n          return <Spinner/>\r\n        }\r\n        else{\r\n          return (\r\n            <LinearGradient colors={[COLORS.backgroundColor, COLORS.backgroundColorFade ]} style={{flex:1}}>\r\n            <View style={{flex:1}}>\r\n           \r\n                <NativeBaseButton rounded style={{alignSelf:'center',backgroundColor:COLORS.primaryColor,paddingVertical:10,paddingHorizontal:30,marginTop:10}} onPress={() => {this.refresh();alert(\"Up to date!\")}}>\r\n                  <Text style={{color:'white'}}>Click to see any new answers/questions</Text>\r\n                </NativeBaseButton>\r\n                <FlatList\r\n                refreshControl={<RefreshControl refreshing={this.state.refreshing}  onRefresh={() => {this.refresh()}}/>}\r\n                refreshing={this.state.refreshing}\r\n                  style={styles.questionList}\r\n                  contentContainerStyle={{alignItems:'center'}}\r\n                  extraData={this.state.refreshing}\r\n                  data={this.state.dataArrayDisplay}\r\n                  keyExtractor={extractKey}\r\n                  renderItem={this.renderItem}\r\n                  \r\n                />\r\n            </View>\r\n            </LinearGradient>\r\n        );\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n\r\nwithNavigation(PreviousQuestions)\r\nfunction openLink(link){\r\n  WebBrowser.openBrowserAsync(link).catch(error => {console.log(error),alert(error)\r\n    \r\n  })\r\n}\r\nfunction displayURL(URL){\r\n  if(URL != '' && URL != null && URL != undefined){\r\n    return(\r\n      <CardItem>\r\n        \r\n          <NativeBaseButton transparent textStyle={{color: '#87838B'}} \r\n          onPress ={() => openLink(URL)}>\r\n           \r\n            <Text>Click for helpful website</Text>\r\n          </NativeBaseButton>\r\n        \r\n      </CardItem>\r\n    )\r\n  }else{\r\n    return(\r\n      null\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction PreviousQuestionNav({navigation}){\r\n    \r\n  const Stack = createStackNavigator()\r\n  console.log('your squestionnav running')\r\n  return(\r\n      \r\n      <Stack.Navigator initialRouteName=\"Your Questions\">\r\n          <Stack.Screen name=\"Your Questions\" component={PreviousQuestions} \r\n           options={{\r\n        \r\n            headerStyle: {\r\n              backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n             \r\n            },\r\n            headerTintColor: 'white',\r\n            \r\n            headerLeft: () => <TouchableOpacity transparent onPress={() => navigation.openDrawer()}><Entypo style={{  color: 'white', marginLeft: 15, fontSize: 30, marginTop: 7 }} name='menu'/></TouchableOpacity>\r\n          }}\r\n        />\r\n          \r\n          <Stack.Screen name=\"Question\" component={QuestionNew} \r\n          options={{\r\n        \r\n            headerStyle: {\r\n              backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n             \r\n            },\r\n            headerTintColor: 'white',\r\n            \r\n           \r\n          }}/>\r\n      </Stack.Navigator>\r\n  )\r\n}\r\nasync function openAnswerLink(link){\r\n  Linking.canOpenURL(link).then(result => {\r\n      if(result){\r\n          window.open(link, '_blank');\r\n      }else{\r\n          alert(\"Sorry, we cannot open this link\\nIt appears to be broken\")\r\n      }\r\n  })\r\n}\r\n\r\nexport default PreviousQuestionNav\r\n\r\nfunction QuestionNew({route,navigation}){\r\n  const {data} = route.params\r\n  const {imageDownloadURL} = route.params\r\n  const [listOfAnswers,setListOfAnswers] = useState([])\r\n  const [refreshFlatList,setRefreshFlatlist] = useState(false)\r\n  const [expandedForImages,setExpandedForImages] = useState([])\r\n  const [modalData,setModalData] = useState(null)\r\n  const [modalOpen,setModalOpen] = useState(false)\r\n\r\n  const formatAnswerTextImageInLists = async() => {\r\n    let fullAnswers = data.Answered\r\n    let finalList = []\r\n    let arrAnswers = Object.values(fullAnswers)\r\n    let expandImages = []\r\n    \r\n    for(var x = 0; x < arrAnswers.length;x++){\r\n      let answererName = arrAnswers[x].Name\r\n      let link = arrAnswers[x].Link\r\n      if(answererName == null){\r\n        answererName = \"Anonymous\"\r\n      }\r\n      finalList.push({AnswerText:arrAnswers[x].Answer,AnswerLink:link,AnswererName:answererName})\r\n   \r\n    }\r\n    setListOfAnswers(finalList)\r\n    setExpandedForImages(expandImages)\r\n    setRefreshFlatlist(!refreshFlatList)\r\n  }\r\n  const setImagesExpanded = index =>{\r\n    let copy = expandedForImages\r\n    copy[index] = !copy[index]\r\n    setExpandedForImages(copy)\r\n    setRefreshFlatlist(!refreshFlatList)\r\n  }\r\n\r\n  useEffect(() => {\r\n    formatAnswerTextImageInLists()\r\n  },[])\r\n  return(\r\n    <LinearGradient colors={[COLORS.backgroundColor, COLORS.backgroundColorFade ]} end={{x:0.2,y:0.5}} style={{flex:1}}>\r\n                <ScrollView style={{flex:1}}>\r\n                    \r\n                    <View style={{marginVertical:15,marginHorizontal:20, borderRadius: STYLEVALS.borderRadius}}>\r\n                        <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                            \r\n                            <Text style={{fontSize:20,color:COLORS.textColor}}>Title</Text>\r\n                            <Text style={{color:COLORS.textColor,padding:5}}>{data.Title}</Text>\r\n                            <Text style={{fontSize:20,color:COLORS.textColor,marginTop:10}}>Question</Text>\r\n                            <Text style={{color:COLORS.textColor,padding:5}}>{data.Question}</Text>\r\n                            \r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.bottomTab}>\r\n                    <Text style = {{fontSize: 20, opacity: 0.4,textAlign:'center',marginVertical:10}}> Answers - click to expand</Text>\r\n                      <FlatList scrollIndicatorInsets={{right:1}}\r\n            \r\n        \r\n                          style={{flex:1}}\r\n                          data={listOfAnswers}\r\n                          \r\n                          extraData={refreshFlatList}\r\n                          keyExtractor={() => Math.random(0,10000)}\r\n                          renderItem={({item,index}) => {\r\n                              \r\n                              return(\r\n                                <TouchableOpacity onPress={() => {setModalOpen(true);setModalData(item)}}>\r\n                                      <LinearGradient colors={[searchResultCardColorStart, COLORS.secondaryColor]} start={[0,0]} end={[1.4, 10]} style={styles.listItem}>\r\n                                        <Text style = {{ fontSize: 15, color: COLORS.textInButtonColor}}>{item.AnswerText.substring(0,70)} ...</Text>\r\n                                        \r\n                                      </LinearGradient>\r\n                                </TouchableOpacity>\r\n                              )\r\n                            }}\r\n                          />\r\n                  </View>\r\n              </ScrollView>\r\n              <Modal visible={modalOpen} animationType=\"slide\" transparent={true}>\r\n              <View style={{flex:1,backgroundColor: modalOpen ? 'rgba(0,0,0,0.8)': null}}>\r\n                {modalData != null ?\r\n                <ScrollView style={{flex:1}}>\r\n                  <TouchableOpacity style={{opacity:1}} onPress={() => setModalOpen(false)}>\r\n                  {/* <View style={{height:Platform.OS == \"web\" ? 0 : useHeaderHeight()}}>\r\n                    \r\n                  </View> */}\r\n                    <View style={{marginVertical:15,marginHorizontal:20, borderRadius: STYLEVALS.borderRadius,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                          <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                              \r\n                              <Text style={{fontSize:20,color:COLORS.textColor}}>Title</Text>\r\n                              <Text style={{color:COLORS.textColor,padding:5}}>{data.Title}</Text>\r\n                              <Text style={{fontSize:20,color:COLORS.textColor,marginTop:10}}>Question</Text>\r\n                              <Text style={{color:COLORS.textColor,padding:5}}>{data.Question}</Text>\r\n                              \r\n                          </View>\r\n                      </View>\r\n                      \r\n                  </TouchableOpacity>\r\n\r\n                      <View style={styles.bottomTabModal}>\r\n                        <TouchableOpacity onPress={() => setModalOpen(false)} style={{width:'100%',alignItems:'center'}}>\r\n                          <Entypo name=\"chevron-down\" size={40} color=\"black\"  style = {{ opacity: 0.4,textAlign:'center',marginVertical:10}}/>\r\n                        </TouchableOpacity>\r\n                        \r\n                        <ScrollView style={{width:'90%',height:height}}>\r\n                            <View style={{marginVertical:15,marginHorizontal:5, borderRadius: STYLEVALS.borderRadius,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                              <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                                  \r\n                                  <Text style={{fontSize:20,color:COLORS.textColor}}>Answer</Text>\r\n                                  <Text style={{color:COLORS.textColor,padding:5}}>{modalData.AnswerText}</Text>\r\n                                \r\n                                  {modalData.AnswerLink != null && modalData.AnswerLink != undefined ? \r\n                                    <TouchableOpacity onPress={() => openAnswerLink(modalData.AnswerLink)}>\r\n                                      \r\n                                        <Text style={{color:COLORS.textColor,padding:5,textDecorationLine:'underline'}}>Helpful link: {modalData.AnswerLink}</Text>\r\n                                    \r\n                                    </TouchableOpacity>\r\n                                    :null\r\n                                  }\r\n                                  <Text style={{color:COLORS.textColor,padding:5}}>Answered by: {modalData.AnswererName}</Text>      \r\n                              </View>\r\n                          </View>\r\n                          \r\n                          <TouchableOpacity onPress={() => {navigation.goBack();navigation.navigate(\"Ask Question\",{screen:\"Ask Question\",params:{Question:data.Question,Title:data.Title}})}}>\r\n                            <Text style={{fontSize:16,color:COLORS.primaryColor,alignSelf:'center',margin:10}}>Still Confused?</Text>\r\n                          </TouchableOpacity>\r\n                        </ScrollView>\r\n                        \r\n                      </View>\r\n                </ScrollView>\r\n                :\r\n                null}\r\n              </View>\r\n              </Modal>\r\n            </LinearGradient>\r\n  )\r\n  \r\n}\r\n    \r\n    \r\nconst styles = StyleSheet.create({\r\n  container:{\r\n    flex:1\r\n  },\r\n  questionList:{\r\n    flex:1,\r\n    paddingTop:30,\r\n    paddingHorizontal:10,\r\n    paddingBottom:50,\r\n    \r\n    \r\n  },\r\n  horizontalFlex: {\r\n      backgroundColor: 'red',\r\n      flexDirection: 'row',\r\n  },\r\n  listItem: {\r\n      marginVertical:7,\r\n     \r\n      borderRadius: 20,\r\n      borderColor: 'grey',\r\n      justifyContent:'space-between',\r\n      \r\n      width:width*0.8,\r\n      borderColor:COLORS.textColor,\r\n      \r\n      padding:10,\r\n      \r\n     \r\n      \r\n  },\r\n  bottomTab: {\r\n      flex: 1,\r\n      width: width,\r\n      backgroundColor: 'white',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: 'white',\r\n      borderBottomLeftRadius: 0,\r\n      borderBottomRightRadius: 0,\r\n      borderTopLeftRadius: 35,\r\n      borderTopRightRadius: 35,\r\n      marginBottom: 1,\r\n      marginTop: 35,\r\n      shadowOpacity: 0.8,\r\n      shadowOffset: {\r\n          width: 5,\r\n          height: 0,\r\n      },\r\n      height:height\r\n  },\r\n  inputButton: {\r\n      shadowOpacity: 1,\r\n      shadowOffset: { width: 5, height: 0 },\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      marginHorizontal: 20,\r\n      paddingHorizontal: 5,\r\n      borderRadius: 25,\r\n      marginTop: 35,\r\n      backgroundColor: 'white'\r\n  },\r\n  modalSection: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      marginTop: 10,\r\n      marginHorizontal: 20,\r\n      backgroundColor: 'white',\r\n      padding: 10,\r\n      borderRadius: 10,\r\n  },\r\n  bottomTabModal: {\r\n      flex: 1,\r\n      width: width,\r\n      backgroundColor: 'white',\r\n      alignItems:'center',\r\n      \r\n      backgroundColor: 'white',\r\n      borderBottomLeftRadius: 0,\r\n      borderBottomRightRadius: 0,\r\n      borderTopLeftRadius: 35,\r\n      borderTopRightRadius: 35,\r\n      marginBottom: 1,\r\n      marginTop: 35,\r\n      shadowOpacity: 0.8,\r\n      shadowOffset: {\r\n          width: 5,\r\n          height: 0,\r\n      },\r\n      overflow:'hidden'\r\n  }\r\n\r\n})\r\n\r\nfunction Question({route,navigation}){\r\n  const {data} = route.params\r\n  const {imageDownloadURL} = route.params\r\n  const [listOfAnswers,setListOfAnswers] = useState([])\r\n  const [refreshFlatList,setRefreshFlatlist] = useState(false)\r\n  const [expandedForImages,setExpandedForImages] = useState([])\r\nconsole.log(data)\r\n  const formatAnswerTextImageInLists = async() => {\r\n    let fullAnswers = data.Answered\r\n    let finalList = []\r\n    let arrAnswers = Object.values(fullAnswers)\r\n    let expandImages = []\r\n    for(var x = 0; x < arrAnswers.length;x++){\r\n      finalList.push({AnswerText:arrAnswers[x].Answer,AnswerLink:arrAnswers[x].Link})\r\n    //   let urlsForAnswer = []\r\n    //   await Promise.all(\r\n    //     arrAnswers[x].imagePaths.map(async path => {\r\n    //       await Firebase.storage().ref().child(path).getDownloadURL()\r\n    //       .then(function(url){\r\n    //         urlsForAnswer.push(url)\r\n    //       }\r\n    //     )\r\n    //   })\r\n    //   ).then(() => {\r\n        \r\n       \r\n    //      finalList.push({AnswerText:arrAnswers[x].Answer,AnswerLink:arrAnswers[x].Link,Images:urlsForAnswer})\r\n    //      expandImages.push(false)\r\n    //   }).catch(error => {\r\n    //       alert(error.toString(error))\r\n    //   })\r\n    // }\r\n    // console.log(finalList,\"Final list\")\r\n    }\r\n    setListOfAnswers(finalList)\r\n    setExpandedForImages(expandImages)\r\n    setRefreshFlatlist(!refreshFlatList)\r\n  }\r\n  const setImagesExpanded = index =>{\r\n    let copy = expandedForImages\r\n    copy[index] = !copy[index]\r\n    setExpandedForImages(copy)\r\n    setRefreshFlatlist(!refreshFlatList)\r\n  }\r\n\r\n  useEffect(() => {\r\n    formatAnswerTextImageInLists()\r\n  },[])\r\n  \r\n  return (\r\n        \r\n    <Container>\r\n    \r\n    <Content>\r\n      \r\n        <NativeBaseButton onPress={() => {navigation.goBack();navigation.navigate(\"Ask Question\",{screen:\"Ask Question\",params:{Question:data.Question,Title:data.Title}})}}>\r\n          <Text>I dont get it</Text>\r\n        </NativeBaseButton>\r\n       <FlatList scrollIndicatorInsets={{right:1}}\r\n           \r\n       \r\n          style={{flex:1,backgroundColor:'grey'}}\r\n          data={listOfAnswers}\r\n          \r\n          extraData={refreshFlatList}\r\n          keyExtractor={() => Math.random(0,10000)}\r\n          renderItem={({item,index}) => {\r\n              \r\n              return(\r\n                  <View>\r\n                    {/* <NativeBaseButton onPress={() => setImagesExpanded(index)}>\r\n                      <Text>Expand</Text>\r\n                    </NativeBaseButton> */}\r\n                      <Text>{item.AnswerText}</Text>\r\n                      <Text>{item.AnswerLink}</Text>\r\n                      \r\n                      {/* <FlatList scrollIndicatorInsets={{right:1}}\r\n                \r\n                        horizontal={true}\r\n                        style={{flex:1,backgroundColor:'grey'}}\r\n                        data={item.Images}\r\n                        scrollEnabled={true}\r\n                        extraData={refreshFlatList}\r\n                        keyExtractor={() => Math.random(0,10000)}\r\n                        renderItem={({item}) => {\r\n                         \r\n                              return(\r\n                                <View>\r\n                                    <Text>{item.AnswerText}</Text>\r\n                                    \r\n                                    <Image style={{height:expandedForImages[index] ? 400:100,width:200,resizeMode:'contain',margin:5,flex:1}} source={{uri:item}}/>\r\n                              \r\n                                \r\n                                </View>\r\n                            )\r\n                            \r\n                            \r\n                        }}\r\n                      /> */}\r\n                  \r\n                  </View>\r\n              )\r\n          }}\r\n        />\r\n    </Content>\r\n  </Container>\r\n  )\r\n}","import { StatusBar } from 'expo-status-bar';\r\nimport React,{useEffect,useState} from 'react';\r\nimport { StyleSheet, Text, View,FlatList,RefreshControl,ScrollView,Alert,SafeAreaView,TouchableOpacity, Dimensions} from 'react-native';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Modal from 'modal-react-native-web';\r\nimport Firebase from '../firebase'\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport {Card,CardItem,DeckSwiper,Body,Left,Right,Spinner,Button,Input,Item,Textarea,Form,Header,Icon,Title} from 'native-base';\r\nimport * as AppConstantsValues from '../Constants'\r\nimport { Ionicons,MaterialCommunityIcons,MaterialIcons,Entypo,EvilIcons,Feather,FontAwesome,FontAwesome5,Fontisto,Foundation } from '@expo/vector-icons';\r\nimport { withNavigation } from 'react-navigation';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport {COLORS,STYLEVALS} from '../Constants'\r\nimport {LinearGradient} from 'expo-linear-gradient'\r\n\r\nclass ManageChapter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n         \r\n          ready:false,\r\n          chapter:null,\r\n          role:null,\r\n          volunteerData:[],\r\n          refreshing:false\r\n        };\r\n        \r\n      }\r\n    \r\n    async componentDidMount(){\r\n      \r\n        await this.setUp()\r\n    }\r\n\r\n    getData = async (chapter) => {\r\n        Firebase.database().ref(chapter + \"/Volunteers\").once('value').then(snapshot => {\r\n            const data = snapshot.val()\r\n            if(data != null){\r\n                const dataToExtract = Object.values(data)\r\n                const UIDList = Object.keys(data)\r\n                let finalData = []\r\n                for(var x = 0; x < dataToExtract.length;x++){\r\n                    let name = \"Name not given\"\r\n                    let email = \"Email not given\"\r\n                    let hours = []\r\n                    const volunteer = dataToExtract[x]\r\n                    if(volunteer.ProfileData != undefined){\r\n                        if(volunteer.ProfileData.DisplayName != undefined){\r\n                            name = volunteer.ProfileData.DisplayName\r\n                        }\r\n                        if(volunteer.ProfileData.Email != undefined){\r\n                            email = volunteer.ProfileData.Email\r\n                        }\r\n                    }\r\n                    let totalHours = 0\r\n                    if(volunteer.Hours != undefined){\r\n                        hours = Object.values(volunteer.Hours)\r\n                        for(var i = 0; i < hours.length; i++){\r\n                            totalHours += hours[i].Hours\r\n                        }\r\n                        if(totalHours > 0){\r\n                            totalHours = (totalHours/3600000).toFixed(1)\r\n                        }\r\n                    }\r\n                    finalData.push({Name:name,Email:email,Hours:hours,UID:UIDList[x],TotalHours:totalHours})\r\n                }\r\n                console.log(finalData)\r\n                this.setState({volunteerData:finalData})\r\n            }\r\n        })\r\n    }\r\n\r\n    setUp = async () => {\r\n        if(await this.connectToInternet()){\r\n            let chapter = null\r\n            let role = null\r\n            await Firebase.database().ref(\"UserMetaData/\" + Firebase.auth().currentUser.uid).once('value').then(snapshot => {\r\n                const data = snapshot.val()\r\n                chapter =  data.Chapter\r\n                role = data.Role\r\n            })\r\n            await this.getData(chapter)\r\n            this.setState({chapter:chapter,role:role})\r\n            this.setState({ready:true})\r\n        }else{\r\n            alert(\"No Internet Detected\")\r\n        }\r\n    }\r\n\r\n    connectToInternet = async() => {\r\n        return await AppConstantsValues.checkInternet()\r\n    }\r\n    refresh = async () => {\r\n        this.setState({refreshing:true})\r\n        this.getData(this.state.chapter)\r\n        console.log(\"refreshed\")\r\n        this.setState({refreshing:false})\r\n      }\r\n\r\n    render(){\r\n        if(this.state.ready == false){\r\n            return(\r\n                <View style={{flex:1,margin:20}}>\r\n                    <Spinner color={AppConstantsValues.COLORS.primaryColor}/>\r\n                    <Button block style={{alignSelf:'center',backgroundColor:AppConstantsValues.COLORS.primaryColor}} onPress={() => this.setUp()}>\r\n                        <Text style={{color:AppConstantsValues.COLORS.textInButtonColor}}>Try again!</Text>\r\n                    </Button>\r\n                </View>\r\n            )\r\n        }\r\n        return(\r\n            <View style={{flex:1}}>\r\n                <LinearGradient colors={[AppConstantsValues.COLORS.backgroundColor,COLORS.backgroundColorFade]} end={{x:0.2,y:0.5}} style={{ flex: 1 }}>\r\n                    <Button rounded style={{alignSelf:'center',backgroundColor:COLORS.primaryColor,paddingVertical:10,paddingHorizontal:30,marginTop:10}} onPress={() => {this.refresh();alert(\"Refreshed\")}}>\r\n                      <Text style={{color:'white'}}>Refresh</Text>\r\n                    </Button>\r\n                    <FlatList \r\n                    refreshControl={<RefreshControl refreshing={this.state.refreshing}  onRefresh={() => {this.refresh()}}/>}\r\n                    refreshing={this.state.refreshing}\r\n                        scrollIndicatorInsets={{right:1}}\r\n                        style={{flex:1,alignSelf:'center',minWidth:1000}}\r\n                        data={this.state.volunteerData}\r\n                        scrollEnabled={true}\r\n                    \r\n                        keyExtractor={() => Math.random(0,10000)}\r\n                        renderItem={({item}) => {\r\n                            return(\r\n                            \r\n                                <TouchableOpacity style={{elevation:10,shadowOpacity:1,padding:10}} onPress={() => this.props.navigation.navigate(\"Volunteer Info\",{data:item,chapter:this.state.chapter})}>\r\n                                    <View style={{borderRadius:STYLEVALS.borderRadius}}>\r\n                                        <LinearGradient colors={[COLORS.cardColor,COLORS.cardColor, COLORS.cardColor, COLORS.cardColor, COLORS.cardColor]} style={{ flex: 1,borderRadius:STYLEVALS.borderRadius,padding:10}}>\r\n                                            <View style={{flexDirection:'row',justifyContent:'space-between',alignItems:'center'}}>\r\n                                                <View style={{flexDirection:'column'}}>\r\n                                                    \r\n                                                    <Text style={{color:COLORS.textColor,fontWeight:'bold'}}>{item.Name}</Text>\r\n                                                    <View style={{backgroundColor:COLORS.cardColor,borderRadius:STYLEVALS.borderRadius}}>\r\n                                                        <Text style={{color:COLORS.textColor}}>{item.Email}</Text>\r\n                                                    </View>\r\n                                                </View> \r\n                                                <View style={{flexDirection:'row',alignItems:'center'}}>\r\n                                                  \r\n                                                    <Text style={{color:COLORS.textColor,marginLeft:10}}>{item.TotalHours} Hours</Text>\r\n                                                </View>\r\n                                                \r\n                                            </View>\r\n                                            \r\n                                            \r\n                                        </LinearGradient>\r\n                                    </View>\r\n                                </TouchableOpacity>\r\n                            )\r\n                        }}\r\n                    />\r\n                </LinearGradient>\r\n            </View>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nwithNavigation(ManageChapter)\r\n\r\n//use same components by passing hard coded params, then just send back multiple navs\r\n\r\n\r\n\r\nfunction VolunteerPage({route,navigation}){\r\n    const {data} = route.params\r\n    const {chapter} = route.params\r\n    const [extraEventName,setExtraEventName] = useState(null)\r\n    const [extraHours,setExtraHours] = useState(null)\r\n    const [deductedHours,setDeductedHours] = useState(null)\r\n    console.log(data)\r\n    const addDeductHours = async () => {\r\n        console.log(extraEventName,extraHours,deductedHours,(extraHours == 0 && deductedHours == 0))\r\n        if(extraEventName == null || extraEventName == \"\" || extraHours == \"\" || deductedHours == \"\" || extraHours == null || deductedHours == null || (extraHours == 0 && deductedHours == 0)){\r\n            alert(\"Please fill in a reason and amount of hours to add or deduct\")\r\n        }else{\r\n            Firebase.database().ref(chapter + \"/Volunteers/\" + data.UID + \"/Hours\").push({\r\n                EventName:extraEventName,\r\n                Hours: (parseFloat(extraHours) - parseFloat(deductedHours)) * 3600000\r\n            }).then(alert(\"Processed\\nTo view changes refresh the previous page by pulling down on the list\"))\r\n        }\r\n        \r\n    }\r\n\r\n    const banUnbanUser = (ban) => {\r\n        \r\n        Firebase.database().ref(\"UserMetaData/\" + data.UID + \"/Validated\").set(!ban).then(alert(\"Processed\\n\" + data.Name + \"'s access had been disabled/enabled\"))\r\n        \r\n    }\r\n\r\n    return(\r\n        <LinearGradient colors={[COLORS.backgroundColor, COLORS.backgroundColorFade ]}  style={{flex:1}}>\r\n            <ScrollView style={{flex:1,alignSelf:'center',minWidth:1000}}>\r\n            <View style={{marginVertical:15,marginHorizontal:20, borderRadius: STYLEVALS.borderRadius,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                    <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                    <Text style={{color:COLORS.textColor,fontSize:20}}>Name: {data.Name}</Text>\r\n                    <Text style={{color:COLORS.textColor,fontSize:20}}>Email: {data.Email}</Text>\r\n                    </View>\r\n            </View>\r\n            <View style={{marginVertical:15,marginHorizontal:20, borderRadius: STYLEVALS.borderRadius,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                    <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor}}>\r\n                    <Text style={{color:COLORS.textColor,fontSize:20}}>Add/Deduct Hours</Text>\r\n                    <Item>\r\n                        <Input\r\n                        \r\n                            placeholder=\"Reason for extra/reduced hours\"\r\n                            value={extraEventName}\r\n                            onChangeText={(text) => setExtraEventName(text)}\r\n                        />\r\n                    </Item>\r\n                    <Item>\r\n                        <Input\r\n                            placeholder=\"Hours Given\"\r\n                            value={extraHours}\r\n                            keyboardType=\"decimal-pad\"\r\n                            onChangeText={(text) => setExtraHours(text)}\r\n                        />\r\n                    </Item>\r\n                    <Item>\r\n                        <Input\r\n                            placeholder=\"Hours Deducted\"\r\n                            value={deductedHours}\r\n                            keyboardType=\"decimal-pad\"\r\n                            onChangeText={(text) => setDeductedHours(text)}\r\n                        />\r\n                    </Item>\r\n                    <Button style={{padding:10,marginTop:10,backgroundColor:COLORS.primaryColor}} onPress={() => addDeductHours()}>\r\n                        <Text style={{color:COLORS.textInButtonColor}}>Submit Given/Deducted Hours</Text>\r\n                    </Button>\r\n                    <Text style={{color:COLORS.textColor,marginVertical:5}}>Fill in hours added and deducted (0 is fine)</Text>\r\n                    </View>\r\n            </View>\r\n            <View style={{marginVertical:15,marginHorizontal:20, borderRadius: STYLEVALS.borderRadius,elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1}}}>\r\n                    <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,flexDirection:'column',justifyContent:'space-evenly'}}>\r\n                        <Text style={{color:COLORS.textColor,fontSize:20,marginBottom:10}}>User Access</Text>\r\n                        <View style={{flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                            <TouchableOpacity style={{padding:10,backgroundColor:COLORS.primaryColor,borderRadius:STYLEVALS.borderRadius}} onPress={() => banUnbanUser(true)}>\r\n                                <MaterialCommunityIcons name=\"pencil-off\" size={24} color={COLORS.textInButtonColor }/>\r\n                                <Text style={{color:COLORS.textInButtonColor}}>Disable User Access</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity style={{padding:10,backgroundColor:COLORS.primaryColor,borderRadius:STYLEVALS.borderRadius}} onPress={() => banUnbanUser(false)}>\r\n                                <MaterialCommunityIcons name=\"pencil\" size={24} color={COLORS.textInButtonColor }/>\r\n                                <Text style={{color:COLORS.textInButtonColor}}>Enable User Access</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n            </View>\r\n            <View style={{alignItems:'center'}}>\r\n              <Text style={{color:COLORS.textInButtonColor,fontWeight:'bold',shadowOpacity:1,shadowOffset:{width:0,height:0}}}>Total Hours: {data.TotalHours}</Text>\r\n              \r\n            </View>\r\n            <FlatList \r\n                    scrollIndicatorInsets={{right:1}}\r\n                    style={{flex:1,padding:20}}\r\n                    data={data.Hours}\r\n                    scrollEnabled={true}\r\n                \r\n                    keyExtractor={() => Math.random(0,10000) + \"\"}\r\n                    renderItem={({item}) => {\r\n                        return(\r\n                            <Card style={{borderRadius:10,shadowOpacity: 10,\r\n                              shadowOffset: {width: 1, height: 1}}}>\r\n                              <CardItem style={{borderRadius:25}}>\r\n                              <Left>\r\n                                  <Text>{item.EventName}</Text>\r\n                              </Left>\r\n                              <Right>\r\n                                  <Text>{(item.Hours/3600000).toFixed(1)}</Text>\r\n                              </Right>\r\n                              </CardItem>\r\n                              \r\n                          </Card>\r\n                        )\r\n                    }}\r\n                />\r\n                \r\n            </ScrollView>\r\n        </LinearGradient>\r\n    )\r\n}\r\n\r\nfunction ManageChapterNav({navigation}){\r\n    \r\n    const Stack = createStackNavigator()\r\n    console.log('your squestionnav running')\r\n    return(\r\n        \r\n        <Stack.Navigator initialRouteName=\"Manage Chapter\">\r\n            <Stack.Screen name=\"Manage Chapter\" component={ManageChapter} \r\n             options={{\r\n          \r\n              headerStyle: {\r\n                backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n               \r\n              },\r\n              headerTintColor: 'white',\r\n              \r\n              headerLeft: () => <TouchableOpacity transparent onPress={() => navigation.openDrawer()}><Entypo style={{  color: 'white', marginLeft: 15, fontSize: 30, marginTop: 7 }} name='menu'/></TouchableOpacity>\r\n            }}\r\n          />\r\n            <Stack.Screen name = \"Volunteer Info\" component ={VolunteerPage}\r\n            options={{\r\n          \r\n                headerStyle: {\r\n                  backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n                 \r\n                },\r\n                headerTintColor: 'white',\r\n                \r\n                \r\n              }}/>\r\n            \r\n        </Stack.Navigator>\r\n    )\r\n  }\r\n  \r\n  \r\n  export default ManageChapterNav","import { StatusBar } from 'expo-status-bar';\r\nimport React,{useEffect,useState} from 'react';\r\nimport { StyleSheet, Text, View,FlatList,RefreshControl,ScrollView,Alert,SafeAreaView,DevSettings,TouchableOpacity,Dimensions,Clipboard} from 'react-native';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Modal from 'modal-react-native-web';\r\nimport Firebase from '../firebase'\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport {Card,CardItem,DeckSwiper,Body,Left,Right,Spinner,Button,Input,Item,Textarea,Form,Header,Icon,Title} from 'native-base';\r\nimport * as AppConstantsValues from '../Constants'\r\nimport { Ionicons,MaterialCommunityIcons,MaterialIcons,Entypo,EvilIcons,Feather,FontAwesome,FontAwesome5,Fontisto,Foundation,AntDesign } from '@expo/vector-icons';\r\nimport { withNavigation } from 'react-navigation';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport {LinearGradient} from 'expo-linear-gradient'\r\nimport {COLORS,STYLEVALS} from '../Constants'\r\nimport * as Updates from 'expo-updates';\r\n\r\nconst width = Dimensions.get('window').width;\r\nconst height = Dimensions.get('window').height;\r\nconst searchResultCardColorStart = \"#FFAE5D\"\r\n\r\nclass manageNetwork extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n         \r\n          ready:false,\r\n          chapter:null,\r\n          role:null,\r\n          chapterAuthKeysData:[],\r\n          refreshing:false,\r\n          masterKey:\"\"\r\n        };\r\n        \r\n      }\r\n    \r\n    async componentDidMount(){\r\n      \r\n        await this.setUp()\r\n    }\r\n\r\n    getData = async () => {\r\n        Firebase.database().ref('ChapterAuthKeys').once('value').then(snapshot => {\r\n            const data = snapshot.val()\r\n\r\n            if(data != null && data != undefined){\r\n                let vals = []\r\n                const chapters = Object.keys(data)\r\n                const keys = Object.values(data)\r\n                console.log(chapters,keys)\r\n                for(var x = 0; x < chapters.length;x++){\r\n                    if(chapters[x] != \"Master\"){\r\n                        vals.push({Chapter:chapters[x],Key:keys[x]})\r\n                    }else{\r\n                        this.setState({masterKey:keys[x]})\r\n                    }\r\n                    \r\n                }\r\n                vals.sort((a, b) => (a.Chapter > b.Chapter) ? 1 : -1)\r\n                console.log(vals)\r\n                this.setState({chapterAuthKeysData:vals})\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    setUp = async () => {\r\n        if(await this.connectToInternet()){\r\n            let chapter = null\r\n            let role = null\r\n            await Firebase.database().ref(\"UserMetaData/\" + Firebase.auth().currentUser.uid).once('value').then(snapshot => {\r\n                const data = snapshot.val()\r\n                chapter =  data.Chapter\r\n                role = data.Role\r\n            })\r\n            await this.getData()\r\n            this.setState({chapter:chapter,role:role})\r\n            this.setState({ready:true})\r\n        }else{\r\n            alert(\"No Internet Detected\")\r\n        }\r\n    }\r\n\r\n    connectToInternet = async() => {\r\n        return await AppConstantsValues.checkInternet()\r\n    }\r\n    refresh = async () => {\r\n        this.setState({refreshing:true})\r\n        this.getData()\r\n        console.log(\"refreshed\")\r\n        this.setState({refreshing:false})\r\n      }\r\n      componentDidUpdate(prevProps) {\r\n        if(prevProps.route !== this.props.route) {\r\n            try{\r\n                const needsRefresh = this.props.route.params.refreshParentPage\r\n            \r\n                if(needsRefresh != undefined && needsRefresh != null && needsRefresh){\r\n                    this.refresh()\r\n                }\r\n                \r\n            }catch(e){\r\n                console.log(e)\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.ready == false){\r\n            return(\r\n                <View style={{flex:1,margin:20}}>\r\n                    <Spinner color={AppConstantsValues.COLORS.primaryColor}/>\r\n                    <Button block style={{alignSelf:'center',backgroundColor:AppConstantsValues.COLORS.primaryColor}} onPress={() => this.setUp()}>\r\n                        <Text style={{color:AppConstantsValues.COLORS.textInButtonColor}}>Try again!</Text>\r\n                    </Button>\r\n                </View>\r\n            )\r\n        }\r\n        return(\r\n            <View style={{flex:1}}>\r\n               <LinearGradient colors={[COLORS.backgroundColor, COLORS.backgroundColorFade ]}style={{flex:1}}>\r\n                <Text style={{color:COLORS.textInButtonColor,fontWeight:'bold',padding:10,alignSelf:'center'}}>Master Key: {this.state.masterKey}</Text>\r\n               \r\n                <FlatList \r\n                refreshControl={<RefreshControl refreshing={this.state.refreshing}  onRefresh={() => {this.refresh()}}/>}\r\n                refreshing={this.state.refreshing}\r\n                    scrollIndicatorInsets={{right:1}}\r\n                    style={{flex:1,paddingHorizontal:20,minWidth:499,maxWidth: 500,alignSelf:'center'}}\r\n                    data={this.state.chapterAuthKeysData}\r\n                    scrollEnabled={true}\r\n                \r\n                    keyExtractor={() => Math.random(0,10000) + \"\"}\r\n                    renderItem={({item}) => {\r\n                        return(\r\n                        \r\n                            <TouchableOpacity  onPress={() => this.props.navigation.navigate(\"Chapter Page\",{data:item})}>\r\n                            <View style={{borderRadius:STYLEVALS.borderRadius,marginVertical:10}}>\r\n                                <LinearGradient colors={[COLORS.cardColor,COLORS.cardColor, COLORS.cardColor, COLORS.cardColor, COLORS.cardColor]} style={{ flex: 1,borderRadius:STYLEVALS.borderRadius,padding:10}}>\r\n                                    <View style={{flexDirection:'column'}}>\r\n                                        \r\n                                        <View style={{backgroundColor:COLORS.cardColor,borderRadius:STYLEVALS.borderRadius,flexDirection:'row',justifyContent:'space-between'}}>\r\n                                            <Text style={{color:COLORS.textColor}}>{item.Chapter}</Text>\r\n                                            <Text style={{color:COLORS.textColor}}>{item.Key}</Text>\r\n                                        </View>\r\n                                    </View> \r\n                                    \r\n                                    \r\n                                </LinearGradient>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                        )\r\n                    }}\r\n                />\r\n                <Button style={{padding:20,alignSelf:'center',margin:20,flexDirection:'row',justifyContent:'space-between',backgroundColor:COLORS.primaryColor}} onPress={() => this.props.navigation.navigate(\"Add a Chapter\")}>\r\n                    <AntDesign name=\"addusergroup\" size={24} color={COLORS.textInButtonColor} />\r\n                    <Text style={{color:COLORS.textInButtonColor,marginLeft:10}}>Add a Chapter</Text>\r\n                </Button>\r\n                </LinearGradient>\r\n            </View>\r\n            \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nwithNavigation(manageNetwork)\r\n\r\n//use same components by passing hard coded params, then just send back multiple navs\r\nexport default function OrgDetailsNav({navigation,chapter}){\r\n    const Stack = createStackNavigator()\r\n    console.log(chapter,\"IN STACK NAV\")\r\n    return(\r\n        \r\n        <Stack.Navigator>\r\n            <Stack.Screen name=\"Manage Network\" \r\n            component={manageNetwork}\r\n            options={{\r\n        \r\n                headerStyle: {\r\n                  backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n                 \r\n                },\r\n                headerTintColor: 'white',\r\n                \r\n                headerLeft: () => <TouchableOpacity transparent onPress={() => navigation.openDrawer()}><Entypo style={{  color: 'white', marginLeft: 15, fontSize: 30, marginTop: 7 }} name='menu'/></TouchableOpacity>\r\n              }}/>\r\n            \r\n           \r\n            <Stack.Screen name = \"Chapter Page\" component ={ChapterPage}\r\n             options={{\r\n        \r\n                headerStyle: {\r\n                  backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n                 \r\n                },\r\n                headerTintColor: 'white',\r\n                \r\n               \r\n              }}/>\r\n            <Stack.Screen name = \"Add a Chapter\" component ={AddChapterPage}\r\n            options={{\r\n        \r\n                headerStyle: {\r\n                  backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n                 \r\n                },\r\n                headerTintColor: 'white',\r\n                \r\n               \r\n              }}/>\r\n            \r\n        </Stack.Navigator>\r\n    )\r\n}\r\nfunction AddChapterPage({route,navigation}){\r\n  \r\n    const [chapterName,setChapterName] = useState(null)\r\n    const addChapter = () => {\r\n        alert(\"Are you sure?\\nThis cannot be undone\",\r\n        [\r\n            {\r\n                text:\"Continue\",\r\n                onPress: () => {\r\n                    if(chapterName != null && chapterName != \"\"){\r\n                        Firebase.database().ref('ChapterAuthKeys/' + chapterName).set(makeid(5)).catch(error => alert(error.toString(error))).then(Firebase.database().ref(\"ChaptersList/\").push(chapterName)).then(navigation.navigate(\"Manage Network\",{refreshParentPage:true}))\r\n                    }else{\r\n                        alert(\"Please enter a chapter name\")\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                text:\"Cancel\"\r\n            }\r\n        ]\r\n        )\r\n        \r\n        \r\n    }\r\n    return(\r\n        <View style={{flex:1,alignContent:'center',alignItems:'center',padding:20}}>\r\n            <Text>Add a new chapter - this CANNOT be undone</Text>\r\n            <Text style={{textAlign:'center'}}>Do not include these characters in the name:  \".\", \"#\", \"$\", \"[\", or \"]\" also do NOT use any spaces, instead use a dash (-)</Text>\r\n            <Item>\r\n            <Input\r\n            placeholder=\"Chapter name (Washington, California, India, etc.)\"\r\n            value={chapterName}\r\n            onChangeText={text => setChapterName(text)}\r\n            />\r\n            </Item>\r\n            <Button style={{padding:10,borderRadius:STYLEVALS.borderRadius,alignSelf:'center',backgroundColor:COLORS.primaryColor,marginTop:10}} onPress={() => addChapter()}>\r\n                <Text style={{color:COLORS.textInButtonColor}}>Add Chapter</Text>\r\n            </Button>\r\n        </View>\r\n        \r\n    )\r\n}\r\n\r\nfunction ChapterPage({route,navigation}){\r\n    const {data} = route.params\r\n    const changeKey = () => {\r\n        Firebase.database().ref('ChapterAuthKeys/' + data.Chapter).set(makeid(5)).then(navigation.navigate(\"Manage Network\",{refreshParentPage:true}))\r\n    }\r\n    const moveToChapter = () => {\r\n        Firebase.database().ref(\"UserMetaData/\" + Firebase.auth().currentUser.uid + \"/Chapter\").set(data.Chapter).then(() => Updates.reloadAsync().catch(error => alert(\"Please restart/reload/kill the app for the latest updates\")))\r\n    }\r\n    return(\r\n      \r\n        <View style={{flex:1,alignContent:'center',alignItems:'center',padding:20}}>\r\n            <Text style={{fontSize:20}}>{data.Chapter}</Text>\r\n            <TouchableOpacity onPress={() => {Clipboard.setString(data.Key);alert(\"Copied Chapter Key!\")}}>\r\n                <Text style={{fontSize:18, textDecorationLine:'underline'}}>{data.Key}</Text>\r\n            </TouchableOpacity>\r\n            \r\n           <View style={{flexDirection:'row',justifyContent:'space-evenly',width:'100%',margin:20}}>\r\n            <Button style={{padding:10,borderRadius:STYLEVALS.borderRadius,alignSelf:'center',backgroundColor:COLORS.primaryColor,marginTop:10}} onPress={() => changeKey()}>\r\n                <Text style={{color:COLORS.textInButtonColor}}>Change Key</Text>\r\n            </Button>\r\n            <Button style={{padding:10,borderRadius:STYLEVALS.borderRadius,alignSelf:'center',backgroundColor:COLORS.primaryColor,marginTop:10}} onPress={() => moveToChapter()}>\r\n                <Text style={{color:COLORS.textInButtonColor}}>Move to this chapter</Text>\r\n            </Button>\r\n            </View>\r\n            <Text style={{marginTop:20}}>Note: Moving to this chapter will cause the app to reload, if you have typed anything important anywhere save it first</Text>\r\n        </View>\r\n        \r\n    )\r\n}\r\n\r\nfunction makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n }","import { StatusBar } from 'expo-status-bar';\r\nimport React,{useEffect,useState} from 'react';\r\nimport { StyleSheet, Text, View,FlatList,RefreshControl,ScrollView,Modal,Alert,SafeAreaView,TouchableOpacity} from 'react-native';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Firebase from '../firebase'\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport {Card,CardItem,DeckSwiper,Body,Left,Right,Spinner,Button,Input,Item,Textarea,Form,Header,Icon,Title} from 'native-base';\r\nimport * as AppConstantsValues from '../Constants'\r\nimport {COLORS,STYLEVALS} from '../Constants'\r\nimport { Ionicons,MaterialCommunityIcons,MaterialIcons,Entypo,EvilIcons,Feather,FontAwesome,FontAwesome5,Fontisto,Foundation } from '@expo/vector-icons';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport{LinearGradient} from 'expo-linear-gradient'\r\n\r\nclass screen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          allEventsData : [],\r\n          showEvents : [],\r\n          ready:false\r\n        };\r\n        \r\n      }\r\n    \r\n    async componentDidMount(){\r\n      \r\n        await this.setUp()\r\n    }\r\n\r\n    setUp = async () => {\r\n        if(await this.connectToInternet()){\r\n            this.getAllChapterEvents()\r\n            this.setState({ready:true})\r\n        }else{\r\n            Alert.alert(\"No Internet Detected\")\r\n        }\r\n    }\r\n\r\n    getAllChapterEvents =  async() => {\r\n        Firebase.database().ref('ChaptersList').once('value').then(snapshot => {\r\n            const data = snapshot.val()\r\n            if(data != null){\r\n                let listOfChapterNames = Object.values(data)\r\n                console.log(listOfChapterNames)\r\n                let dataArray = []\r\n                Promise.all(\r\n                    listOfChapterNames.map(async chapterName => {\r\n                        await Firebase.database().ref(chapterName + \"/Events\").once('value').then(snapshot =>{\r\n                          const events = snapshot.val()\r\n                          if(events != null){\r\n                            dataArray.push({chapterName:chapterName,events:events})\r\n                          }else{\r\n                            dataArray.push({chapterName:chapterName,events:{}})\r\n                          }\r\n                            \r\n                            \r\n                        } )\r\n                    })\r\n                ).then(() =>{\r\n                    dataArray.sort(function(a, b) {\r\n                        return a.chapterName.toLowerCase().localeCompare(b.chapterName.toLowerCase());\r\n                     });\r\n                    this.setState({allEventsData:dataArray})\r\n                    let showEventsArr = []\r\n                    for(var x = 0 ; x < dataArray.length;x++){\r\n                        showEventsArr.push(false)\r\n                    }\r\n                    //console.log(dataArray)\r\n                }\r\n                    \r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    connectToInternet = async() => {\r\n        return await AppConstantsValues.checkInternet()\r\n    }\r\n\r\n    toggleShowEvents = async (index) => {\r\n        let copy = this.state.showEvents\r\n        \r\n        copy[index] = !copy[index]\r\n        this.setState({showEvents:copy})\r\n    }\r\n    render(){\r\n        if(this.state.ready == false){\r\n            return(\r\n                <View style={{flex:1,margin:20}}>\r\n                    <Spinner color={AppConstantsValues.COLORS.primaryColor}/>\r\n                    <Button block style={{alignSelf:'center',backgroundColor:AppConstantsValues.COLORS.primaryColor}} onPress={() => this.setUp()}>\r\n                        <Text style={{color:AppConstantsValues.COLORS.textInButtonColor}}>Try again!</Text>\r\n                    </Button>\r\n                </View>\r\n            )\r\n        }\r\n        return(\r\n            <FlatList\r\n                style={{flex:1,paddingHorizontal:10,paddingTop:10,paddingBottom:50,backgroundColor:COLORS.backgroundColor}}\r\n                \r\n                data={this.state.allEventsData}\r\n                extraData={this.state.showEvents}\r\n                keyExtractor={() => Math.random(0,10000) + \"\"}\r\n                renderItem = {({item,index}) => {\r\n                    const eventsFlat  = Object.values(item.events).reverse()\r\n                    console.log(eventsFlat,\"EVENTS\")\r\n                    return(\r\n                        <>\r\n                        \r\n                        {this.state.showEvents[index] ? \r\n                            <>\r\n                                <TouchableOpacity style={{flexDirection:'row',justifyContent:'space-between',alignItems:'center'}} onPress={() => this.toggleShowEvents(index)}>\r\n                                    <Text style={{color:COLORS.textInButtonColor,fontSize:17}}>{item.chapterName} - {eventsFlat.length}</Text>\r\n                                    <Entypo name=\"chevron-down\" size={28} color={COLORS.primaryColor} />\r\n                                </TouchableOpacity>\r\n                                \r\n                                <EventsList events={eventsFlat}/>\r\n                            </>\r\n                        :\r\n                        <TouchableOpacity style={{flexDirection:'row',justifyContent:'space-between'}} onPress={() => this.toggleShowEvents(index)}>\r\n                            <Text style={{color:COLORS.textInButtonColor,fontSize:17}}>{item.chapterName}  - {eventsFlat.length}</Text>\r\n                            <Entypo name=\"chevron-right\" size={30} color={COLORS.primaryColor} />\r\n                        </TouchableOpacity>\r\n                        }\r\n                        \r\n                        </>\r\n                    )\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction EventsList(props){\r\n    const eventsFlat  = (props.events)\r\n    if(eventsFlat.length == 0){\r\n        return <Text style={{padding:10,color:'white'}}>No events scheduled</Text>\r\n    }\r\n    return(\r\n        <FlatList\r\n        data = {eventsFlat}\r\n        keyExtractor={() => Math.random(0,10000) + \"\"}\r\n        renderItem = {({item,index}) => {\r\n            const event = item\r\n           \r\n            return(\r\n                <TouchableOpacity style={{elevation:10,shadowOpacity:1,shadowOffset:{width:1,height:1},paddingLeft:10,paddingRight:5}} onPress={() => Alert.alert(\"To see more...\",\"Go to Manage Network, find the chapter, click on it, and then select Move to Chapter. Once you are in go to View Events. There you can edit the event and see who has signed up.\")}>\r\n                    <View style={{borderRadius:STYLEVALS.borderRadius,marginVertical:10}}>\r\n                        <LinearGradient colors={[COLORS.cardColor,COLORS.cardColor, COLORS.cardColor, COLORS.cardColor, COLORS.cardColor]} style={{ flex: 1,borderRadius:STYLEVALS.borderRadius,padding:10}}>\r\n                            <View style={{flexDirection:'row',marginBottom:5}}>\r\n                                <Left style={{flexDirection:'row'}}>\r\n                                    <Text style={{fontSize:18,color:COLORS.textColor}}>{event.EventName}</Text>\r\n                                    \r\n                                </Left>\r\n                                \r\n                      \r\n                            </View> \r\n                            <View style={{flexDirection:'row',justifyContent:'space-between',paddingVertical:6,flex:1,alignItems:'center'}}>\r\n                                \r\n                                <View style={{alignItems:'center'}}>\r\n                                    <MaterialIcons name=\"date-range\" size={24} color={COLORS.textColor} />\r\n                                    <Text style={{color:COLORS.textColor}}>{event.EventDate}</Text>\r\n                                </View>\r\n                                <View style={{alignItems:'center'}}>\r\n                                    <MaterialIcons name=\"timelapse\" size={24} color={COLORS.textColor} />\r\n                                    <Text  style={{color:COLORS.textColor}}>{event.EventStartTime.slice(0,4) + event.EventStartTime.slice(7)} - {event.EventEndTime.slice(0,4) + event.EventEndTime.slice(7)}</Text>\r\n                                </View>\r\n                                <View style={{alignItems:'center'}}>\r\n                                    <FontAwesome name=\"group\" size={24} color={COLORS.textColor}/>\r\n                                    <Text  style={{color:COLORS.textColor}}>{event.ParticipantsSignedUp}/{event.EventParticipantLimit}</Text>\r\n                                </View>\r\n                                <View style={{alignItems:'center'}}>\r\n                                    <Ionicons name=\"ios-people\" size={24} color={COLORS.textColor} />\r\n                                    <Text  style={{color:COLORS.textColor}}>{event.VolunteersSignedUp}/{event.EventVolunteerLimit}</Text>\r\n                                </View>\r\n                                \r\n                            </View>\r\n                            <View style={{flexDirection:'row'}}>\r\n                                <Text style={{color:COLORS.textColor}}>{event.EventDetails}</Text>\r\n                            </View>\r\n                            \r\n                        </LinearGradient>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            )\r\n        }}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\n\r\nfunction AllEventsNav({navigation}){\r\n    \r\n    const Stack = createStackNavigator()\r\n    console.log('your squestionnav running')\r\n    return(\r\n        \r\n        <Stack.Navigator initialRouteName=\"Network Events\">\r\n            <Stack.Screen name=\"Network Events\" component={screen} \r\n             options={{\r\n          \r\n              headerStyle: {\r\n                backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n               \r\n              },\r\n              headerTintColor: 'white',\r\n              \r\n              headerLeft: () => <TouchableOpacity transparent onPress={() => navigation.openDrawer()}><Entypo style={{  color: 'white', marginLeft: 15, fontSize: 30, marginTop: 7 }} name='menu'/></TouchableOpacity>\r\n            }}\r\n          />\r\n            \r\n            \r\n        </Stack.Navigator>\r\n    )\r\n  }\r\n  \r\n  \r\n  export default AllEventsNav","import 'react-native-gesture-handler';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport React,{useEffect,useState,useRef} from 'react';\r\nimport { StyleSheet, Text, View,FlatList,RefreshControl,ScrollView,SafeAreaView, Alert,TouchableOpacity,Linking} from 'react-native';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport Firebase from './firebase'\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport {Card,CardItem,DeckSwiper,Body,Left,Right,Spinner,Button,Input,Item,Textarea,Form} from 'native-base';\r\nimport * as AppConstantsValues from './Constants'\r\nimport { Ionicons,MaterialCommunityIcons,MaterialIcons,Entypo,EvilIcons,Feather,FontAwesome,FontAwesome5,Fontisto,Foundation } from '@expo/vector-icons';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { registerRootComponent } from 'expo';\r\n\r\nimport Modal from 'modal-react-native-web';\r\n\r\nconst screen = Dimensions.get('screen')\r\nconst ScreenWidth = screen.width\r\nconst ScreenHeight = screen.height\r\n// import * as Notifications from 'expo-notifications';\r\n\r\n//NAVIGATORS\r\nconst ParentDrawer = createDrawerNavigator()\r\n//NAVIGATORS\r\n\r\n//SCREENS\r\nimport AllAuth from './screens/AllAuth'\r\nimport CreateEvent from './screens/CreateEvent'\r\nimport {ViewEventsNavHead,ViewEventsNavSenior, ViewEventsNavVolunteer} from './screens/ViewEvents'\r\nimport Profile from './screens/Profile'\r\nimport AskQuestion from './screens/AskQuestion'\r\nimport AnswerQuestion from './screens/AnswerQuestions'\r\nimport SeniorPreviousQuestions from './screens/SeniorPreviousQuestions'\r\nimport ManageChapter from './screens/ManageChapter'\r\nimport ManageNetwork from './screens/ManageNetwork'\r\nimport AllEvents from './screens/AllEvents'\r\n//SCREENS\r\n\r\n\r\n\r\n// Notifications.setNotificationHandler({\r\n//   handleNotification: async () => ({\r\n//     shouldShowAlert: true,\r\n//     shouldPlaySound: true,\r\n//     shouldSetBadge: true,\r\n//   }),\r\n// });\r\n\r\n// async function registerForPushNotificationsAsync() {\r\n//   let token;\r\n//   if (true) {\r\n//     const { status: existingStatus } = await Notifications.getPermissionsAsync();\r\n//     let finalStatus = existingStatus;\r\n//     if (existingStatus !== 'granted') {\r\n//       const { status } = await Notifications.requestPermissionsAsync();\r\n//       finalStatus = status;\r\n//     }\r\n//     if (finalStatus !== 'granted') {\r\n//       alert('Please enable push notifications!',\"We use them to let you know of new events or when your question has been answered\");\r\n//       return;\r\n//     }\r\n//     token = (await Notifications.getExpoPushTokenAsync()).data;\r\n//     console.log(token);\r\n//   } else {\r\n//     alert('Must use physical device for Push Notifications');\r\n//   }\r\n\r\n//   if (Platform.OS === 'android') {\r\n//     Notifications.setNotificationChannelAsync('default', {\r\n//       name: 'default',\r\n//       importance: Notifications.AndroidImportance.MAX,\r\n//       vibrationPattern: [0, 250, 250, 250],\r\n//       lightColor: '#FF231F7C',\r\n//     });\r\n//   }\r\n\r\n//   return token;\r\n// }\r\nexport default function App() {\r\n  //Firebase.auth().signOut()\r\n  const [initializing, setInitializing] = useState(true);\r\n  const [user, setUser] = useState();\r\n  const [userType,setUserType] = useState(null)\r\n  const [userChapter,setUserChapter] = useState(null)\r\n  \r\n  // Handle user state changes\r\n  \r\n  function onAuthStateChanged(user) {\r\n    setUser(user);\r\n    if (initializing) setInitializing(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const subscriber = Firebase.auth().onAuthStateChanged(onAuthStateChanged);\r\n    return subscriber; // unsubscribe on unmount\r\n  }, []);\r\n  \r\n  \r\n  \r\n  useEffect(() => {\r\n    //set admin or whatver, triggered on user change\r\n    async function getRoleAndValidation(user){\r\n      await sleep(500)\r\n      \r\n      if(user){\r\n        await Firebase.database().ref(\"/UserMetaData/\" + Firebase.auth().currentUser.uid).once(\"value\").then(snapshot =>{\r\n          const userData = snapshot.val()\r\n          console.log(userData)\r\n          if(!userData.Validated){\r\n            setUserType(\"notValidated\")\r\n            alert(\"You have been banned.\")\r\n            Firebase.auth().signOut()\r\n          }else{\r\n            if(userData.primaryRole != null){\r\n              if(userData.primaryRole == \"Admin\"){\r\n                setUserType(userData.primaryRole)\r\n              }else{\r\n                setUserType(userData.Role)\r\n              }\r\n            }else{\r\n              setUserType(userData.Role)\r\n            }\r\n            \r\n            setUserChapter(userData.Chapter)\r\n          }\r\n        })\r\n      }\r\n    }\r\n    \r\n    getRoleAndValidation(user)\r\n    console.log(\"USE EFFECT TRIGGERED FOR ROLE AND VALIDATION\")\r\n  },[user,userType])\r\n\r\n  const [expoPushToken, setExpoPushToken] = useState('');\r\n  const [notification, setNotification] = useState(false);\r\n  const notificationListener = useRef();\r\n  const responseListener = useRef();\r\n\r\n//   useEffect(() => {\r\n//     if(user){\r\n//       registerForPushNotificationsAsync().then(token => {\r\n//         setExpoPushToken(token)\r\n//         Firebase.database().ref(\"UserPushTokens/\" + Firebase.auth().currentUser.uid).set(token)\r\n//       });\r\n\r\n//       notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\r\n//         setNotification(notification);\r\n//       });\r\n\r\n//       responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\r\n//         console.log(response);\r\n//       });\r\n\r\n//       return () => {\r\n//         Notifications.removeNotificationSubscription(notificationListener);\r\n//         Notifications.removeNotificationSubscription(responseListener);\r\n//       };\r\n//     }\r\n//   }, [user]);\r\n    \r\n    return (\r\n      <SafeAreaProvider>\r\n      <NavigationContainer>\r\n        <ParentDrawer.Navigator \r\n        drawerType=\"front\"\r\n        overlayColor={AppConstantsValues.COLORS.primaryColor}\r\n        \r\n        lazy={true}\r\n          drawerContentOptions={{\r\n            \r\n            activeTintColor:AppConstantsValues.COLORS.primaryColor,\r\n            //inactiveTintColor:COLORS.secondaryColor,\r\n            labelStyle:{ fontSize: 16 },\r\n            \r\n          }}>\r\n            {initializing || ((userType == null || userChapter == null) && user) ? (\r\n              <ParentDrawer.Screen name = \"Loading\" component={loading}/>\r\n          ): !user ? (\r\n              <ParentDrawer.Screen name = \"Log In\" component={AllAuth}/>\r\n            ): userType == \"notValidated\" ? (\r\n              <>\r\n              <ParentDrawer.Screen name = \"Confirm Credentials\" component={waitingRoom} />\r\n              <ParentDrawer.Screen name = \"Log Out\" component={LogOutNav}/>\r\n              </>\r\n              ): userType == \"Senior\" ?(\r\n              \r\n              <>\r\n              <ParentDrawer.Screen name = \"Home\" component={HomeSeniorNav} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialCommunityIcons name=\"home-outline\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n              <ParentDrawer.Screen name = \"View Events\" options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialIcons name=\"event\" size={50}\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}>\r\n                {(props) => <ViewEventsNavSenior  {...props} chapter={userChapter} />}\r\n              </ParentDrawer.Screen>\r\n              <ParentDrawer.Screen name = \"Ask Question\" component={AskQuestion} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialCommunityIcons name=\"comment-question-outline\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n              <ParentDrawer.Screen name = \"Previous Questions\" component={SeniorPreviousQuestions} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <Entypo name=\"list\" size={50}\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n              \r\n              <ParentDrawer.Screen name = \"Profile\" component={Profile} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialIcons name=\"person-outline\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n              <ParentDrawer.Screen name = \"Log Out\" component={LogOutNav} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialIcons name=\"logout\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n              </>\r\n            ): userType == \"Volunteer\" ? (\r\n              \r\n              <>\r\n             <ParentDrawer.Screen name = \"Home\" component={HomeVolunteerNav}  options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialCommunityIcons name=\"home-outline\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n             <ParentDrawer.Screen name = \"View Events\"  options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialIcons name=\"event\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}>\r\n                {(props) => <ViewEventsNavVolunteer  {...props} chapter={userChapter} />}\r\n              </ParentDrawer.Screen>\r\n             <ParentDrawer.Screen name = \"Answer Questions\" component={AnswerQuestion}  options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialCommunityIcons name=\"forum-outline\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n             <ParentDrawer.Screen name = \"Profile\" component={Profile} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialIcons name=\"person-outline\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n             <ParentDrawer.Screen name = \"Log Out\" component={LogOutNav}  options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialIcons name=\"logout\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n              </>\r\n            ):userType == \"Head\" ? (\r\n              <>\r\n             <ParentDrawer.Screen name = \"Home\" component={HomeHeadNav} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialCommunityIcons name=\"home-outline\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n             <ParentDrawer.Screen name = \"Create an Event\" component={CreateEvent} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialCommunityIcons name=\"calendar-edit\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n             <ParentDrawer.Screen name = \"View Events\" options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialIcons name=\"event\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}>\r\n                {(props) => <ViewEventsNavHead  {...props} chapter={userChapter} />}\r\n              </ParentDrawer.Screen>\r\n             <ParentDrawer.Screen name = \"Answer Questions\" component = {AnswerQuestion} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialCommunityIcons name=\"forum-outline\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n             <ParentDrawer.Screen name = \"Manage Chapter\" component={ManageChapter} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialCommunityIcons name=\"view-dashboard-outline\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n             <ParentDrawer.Screen name = \"Profile\" component={Profile} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialIcons name=\"person-outline\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n             <ParentDrawer.Screen name = \"Log Out\" component={LogOutNav} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialIcons name=\"logout\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n             </>\r\n            ):userType == \"Admin\" ? (\r\n            <>\r\n             <ParentDrawer.Screen name = \"Home\" component={HomeAdminNav} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialCommunityIcons name=\"home-outline\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n             <ParentDrawer.Screen name = \"Manage Network\" component={ManageNetwork} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialCommunityIcons name=\"server-network\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n                <ParentDrawer.Screen name = \"Network Events\" component={AllEvents} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialCommunityIcons name=\"sitemap\" \r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n             <ParentDrawer.Screen name = \"Create an Event\" component={CreateEvent} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialCommunityIcons name=\"calendar-edit\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n             <ParentDrawer.Screen name = \"View Events\" options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialIcons name=\"event\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}>\r\n                {(props) => <ViewEventsNavHead  {...props} chapter={userChapter} />}\r\n              </ParentDrawer.Screen>\r\n             <ParentDrawer.Screen name = \"Answer Questions\" component = {AnswerQuestion} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialCommunityIcons name=\"forum-outline\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n             <ParentDrawer.Screen name = \"Manage Chapter\" component={ManageChapter} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialCommunityIcons name=\"view-dashboard-outline\" \r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n             <ParentDrawer.Screen name = \"Log Out\" component={LogOutNav} options={{ headerShown: false,drawerIcon: ({focused, size}) => (\r\n                <MaterialIcons name=\"logout\"\r\n                  size={size}\r\n                  color={focused ? COLORS.primaryColor : 'grey'}\r\n                /> )}}/>\r\n             </>\r\n            ):(\r\n            <>\r\n             <ParentDrawer.Screen name = \"Something isn't right\" component={NoScreen}/>\r\n             </>\r\n            )}\r\n          </ParentDrawer.Navigator>\r\n      </NavigationContainer>\r\n      </SafeAreaProvider>\r\n  \r\n    );\r\n}\r\n\r\n//IMPORTS\r\nimport { Dimensions } from 'react-native';\r\nimport {COLORS,STYLEVALS} from './Constants'\r\nimport {LinearGradient} from 'expo-linear-gradient'\r\nimport {Image,ImageBackground} from 'react-native'\r\n// import call from 'react-native-phone-call'\r\nimport email from 'react-native-email'\r\n\r\nconst daysToDownloadForum = -1\r\nconst amountOfMsPerDay = 86400000\r\nconst width = Dimensions.get('window').width;\r\nconst height = Dimensions.get('window').height;\r\nconst searchResultCardColorStart = \"#FFAE5D\"\r\n\r\nasync function openLink(link){\r\n  Linking.canOpenURL(link).then(result => {\r\n      if(result){\r\n          Linking.openURL(link)\r\n      }else{\r\n          alert(\"Sorry, we cannot open this link\",\"It appears to be broken\")\r\n      }\r\n  })\r\n}    \r\n\r\n// const placeCallToCovidNetworks = () => {\r\n//   let args = {\r\n//     number: \"+1 (314) 492-1928\", // String value with the number to call\r\n//     prompt: false // Optional boolean property. Determines if the user should be prompt prior to the call \r\n//   }\r\n   \r\n//   call(args).catch(console.error)\r\n// }\r\n\r\nconst handleEmailToCovidNetworks = () => {\r\n  const to = ['covidnetworksorg@gmail.com'] // string or array of email addresses\r\n  email(to, {\r\n    subject:\"Horizon Networks App help\"\r\n      // Optional additional arguments\r\n       // string or array of email addresses\r\n     \r\n  }).catch(console.error)\r\n}\r\n//IMPORTS\r\n\r\n//Home screens and navs\r\nconst HomeSeniorNavigator = createStackNavigator()\r\nfunction HomeSeniorNav({navigation,route}) {\r\n  return (\r\n    <SafeAreaProvider>\r\n    <HomeSeniorNavigator.Navigator initialRouteName=\"Home\"  >\r\n      <HomeSeniorNavigator.Screen name=\"Home\" component={HomeScreenSenior} options={{\r\n      \r\n      headerStyle: {\r\n        backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n       \r\n      },\r\n      headerTintColor: 'white',\r\n      \r\n      headerLeft: () => <TouchableOpacity transparent onPress={() => navigation.openDrawer()}><Entypo style={{  color: 'white', marginLeft: 15, fontSize: 30, marginTop: 7 }} name='menu'/></TouchableOpacity>\r\n    }}/>\r\n     \r\n    </HomeSeniorNavigator.Navigator>\r\n    </SafeAreaProvider>\r\n  );\r\n}\r\n\r\nfunction HomeScreenSenior({ navigation,route }) {\r\n  console.log(route,\"Props\")\r\n  return (\r\n    <LinearGradient colors={[COLORS.backgroundColor,COLORS.backgroundColorFade]}  style={{ flex: 1 }}>\r\n      <ScrollView style={{ flex: 1 }}>\r\n        <View style={{marginBottom:15,width:width,elevation:10,overflow:'hidden'}}>\r\n       \r\n            <View style={{shadowOpacity:1,shadowOffset:{width:1,height:2},elevation:10}}>\r\n              <ImageBackground style={{height:width * (630/1200) * 0.85,width:width,alignSelf:'center',overflow:'hidden',backfaceVisibility:'hidden'}} imageStyle={{opacity:0.3}}  source={require(\"./assets/homePageImage.png\")}>\r\n                <Text style={{paddingHorizontal:20,paddingTop:'20%',color:\"white\",fontWeight:'bold',fontSize:30,shadowOpacity:0.2}}>Horizon Networks</Text>\r\n                <Text style={{paddingLeft:20,paddingRight:width * 0.35,paddingTop:20,color:\"white\",fontWeight:'bold',fontSize:20,shadowOpacity:0.2}}>Connecting those that are most isolated with the youth.</Text>\r\n              </ImageBackground>\r\n            </View>\r\n              <View style={{flex:1}}>\r\n                <View style={{width:width,alignSelf:'center',marginTop:15,marginBottom:10,flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"View Events\")}>\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialIcons name=\"event\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Events</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"Ask Question\")}>\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialCommunityIcons name=\"comment-question-outline\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Ask a Question</Text>\r\n                      </View>\r\n                    </TouchableOpacity >\r\n                </View>\r\n                <View style={{width:width,alignSelf:'center',marginBottom:15,flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"Previous Questions\")} >\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                        <Entypo name=\"list\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Previous Questions</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"Profile\")}>\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialIcons name=\"person-outline\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Profile</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={{width:width,alignSelf:'center',marginBottom:15,justifyContent:'space-evenly', backgroundColor:\"white\"}}>\r\n                  \r\n                      <View style={{padding:10,backgroundColor:\"white\",marginHorizontal:10}}>\r\n                        <Text style={{paddingBottom:10,color:COLORS.primaryColor,fontWeight:'bold',fontSize:20,alignSelf:'center'}}>Our Mission</Text>\r\n                        <Text style={{paddingBottom:5,color:COLORS.textColor, alignSelf:'center',width:'50%'}}>At Horizon Networks, our mission is to connect young individuals with those who are in at-risk groups, easing the loneliness that many individuals feel whilst under quarantine. We understand the difficulties associated with staying at home for extended periods of time during social distancing, especially for those who are particularly vulnerable or at-risk. However, it is a necessary step to stopping the spread of the disease.</Text>\r\n                        {/* <View style={{flexDirection:'row',alignItems:'center',justifyContent:'space-evenly',padding:10}}>\r\n                          <View style={{width:width * 0.25,alignItems:'center',alignContent:'center'}}>\r\n                              <FontAwesome5 name=\"hands-helping\" size={40} color=\"black\" />\r\n                              <Text style={{fontSize:18}}>26,500+</Text>\r\n                              <Text>Seniors Helped</Text>\r\n                          </View>\r\n            \r\n                          <View style={{width:width * 0.25,alignItems:'center'}}>\r\n                              <MaterialIcons name=\"business\" size={40} color=\"black\" />\r\n                              <Text style={{fontSize:18}}>170+</Text>\r\n                              <Text>Senior Centers</Text>\r\n                          </View>\r\n                  \r\n                          <View style={{width:width * 0.25,alignItems:'center'}}>\r\n                            <MaterialIcons name=\"volunteer-activism\" size={40} color=\"black\" />\r\n                            <Text style={{fontSize:18}}>2,800+</Text>\r\n                              <Text>Volunteers</Text>\r\n                          </View>\r\n\r\n                      </View> */}\r\n                    </View>\r\n                    <View style={{flexDirection:'row',alignItems:'center',justifyContent:'space-evenly',padding:10,backgroundColor:'white',width:'50%',alignSelf:'center'}}>\r\n                      <View style={{width:width * 0.25,alignItems:'center',alignContent:'center'}}>\r\n                          <FontAwesome5 name=\"hands-helping\" size={40} color={COLORS.primaryColor} />\r\n                          <Text style={{fontSize:18,color:COLORS.textColor}}>26,500+</Text>\r\n                          <Text style={{color:COLORS.textColor}}>Seniors Helped</Text>\r\n                      </View>\r\n        \r\n                      <View style={{width:width * 0.25,alignItems:'center'}}>\r\n                          <MaterialIcons name=\"business\" size={40} color={COLORS.primaryColor} />\r\n                          <Text style={{fontSize:18,color:COLORS.textColor}}>170+</Text>\r\n                          <Text style={{color:COLORS.textColor}}>Senior Centers</Text>\r\n                      </View>\r\n              \r\n                      <View style={{width:width * 0.25,alignItems:'center'}}>\r\n                        <MaterialIcons name=\"volunteer-activism\" size={40} color={COLORS.primaryColor} />\r\n                        <Text style={{fontSize:18, color:COLORS.textColor}}>2,800+</Text>\r\n                          <Text style={{color:COLORS.textColor}}>Volunteers</Text>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n                </View>\r\n                \r\n                \r\n                <View style={{flexDirection:'row',justifyContent:'center',alignItems:'center',shadowOpacity:1,shadowOffset:{width:1,height:2},elevation:10}}>\r\n                  <View>\r\n                    <Text style={{alignSelf:'center',color:COLORS.textInButtonColor,fontSize:20,fontWeight:'bold',padding:10}}>Support Us</Text>\r\n                    <View style={{marginBottom:15,marginHorizontal:10,flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                        <TouchableOpacity onPress={() => openLink(\"https://www.covidnetworks.org/\")} >\r\n                          <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.25,alignItems:'center'}}>\r\n                              <FontAwesome5 name=\"donate\" size={40} color=\"black\" />\r\n                              <Text style={{fontSize:15}}>Donate</Text>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                        \r\n                    </View>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{alignSelf:'center',color:COLORS.textInButtonColor,fontSize:20,fontWeight:'bold',padding:10}}>Contact Us</Text>\r\n                    <View style={{marginBottom:15,marginHorizontal:10,flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                        \r\n                        <TouchableOpacity onPress={() => handleEmailToCovidNetworks()}>\r\n                          <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.25,alignItems:'center'}}>\r\n                              <FontAwesome name=\"envelope\" size={40} color=\"black\" />\r\n                              <Text style={{fontSize:15}}>Email</Text>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n                {/* <View style={{flexDirection:'column',justifyContent:'center',alignItems:'center',marginTop:25}}>\r\n                    <TouchableOpacity onPress={() => Linking.openURL(\"https://apps.apple.com/ph/app/horizon-networks-senior-games/id1558778490\")}>\r\n                        <Image source={require(\"./assets/DownloadApple.png\")} style={{height:Dimensions.get('window').height * 0.075,width:400}} resizeMode=\"contain\"/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => Linking.openURL(\"https://play.google.com/store/apps/details?id=com.aparson.horizonnetworks\")}>\r\n                        <Image source={require(\"./assets/google-play-badge (1).png\")} style={{height:Dimensions.get('window').height * 0.1,width:400}} resizeMode=\"contain\"/>\r\n                    </TouchableOpacity>\r\n                    \r\n                </View> */}\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </LinearGradient>\r\n  );\r\n}\r\n\r\nconst HomeVolunteerNavigator = createStackNavigator()\r\nfunction HomeVolunteerNav({navigation,route}) {\r\n  return (\r\n    <SafeAreaProvider>\r\n    <HomeVolunteerNavigator.Navigator  >\r\n      <HomeVolunteerNavigator.Screen name=\"Home\" component={HomeScreenVolunteer} options={{\r\n      \r\n      headerStyle: {\r\n        backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n       \r\n      },\r\n      headerTintColor: 'white',\r\n      \r\n      headerLeft: () => <TouchableOpacity transparent onPress={() => navigation.openDrawer()}><Entypo style={{  color: 'white', marginLeft: 15, fontSize: 30, marginTop: 7 }} name='menu'/></TouchableOpacity>\r\n    }}/>\r\n     \r\n    </HomeVolunteerNavigator.Navigator>\r\n    </SafeAreaProvider>\r\n  );\r\n}\r\nfunction HomeScreenVolunteer({ navigation,route }) {\r\n  console.log(route,\"Props\")\r\n  return (\r\n    <LinearGradient colors={[COLORS.backgroundColor,COLORS.backgroundColorFade]}  style={{ flex: 1 }}>\r\n      <ScrollView style={{ flex: 1 }}>\r\n        <View style={{marginBottom:15,width:width,elevation:10,overflow:'hidden'}}>\r\n       \r\n            <View style={{shadowOpacity:1,shadowOffset:{width:1,height:2},elevation:10}}>\r\n              <ImageBackground style={{height:width * (630/1200) * 0.85,width:width,alignSelf:'center',overflow:'hidden',backfaceVisibility:'hidden'}} imageStyle={{opacity:0.3}}  source={require(\"./assets/homePageImage.png\")}>\r\n                <Text style={{paddingHorizontal:20,paddingTop:'20%',color:\"white\",fontWeight:'bold',fontSize:30,shadowOpacity:0.2}}>Horizon Networks</Text>\r\n                <Text style={{paddingLeft:20,paddingRight:width * 0.35,paddingTop:20,color:\"white\",fontWeight:'bold',fontSize:20,shadowOpacity:0.2}}>Connecting those that are most isolated with the youth.</Text>\r\n              </ImageBackground>\r\n            </View>\r\n              <View style={{flex:1}}>\r\n                <View style={{width:width,alignSelf:'center',marginTop:15,marginBottom:10,flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"View Events\")}>\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialIcons name=\"event\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Events</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"Answer Questions\")} >\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialCommunityIcons name=\"forum-outline\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Answer Questions</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={{width:width,alignSelf:'center',marginBottom:15,flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                    \r\n                    <TouchableOpacity onPress={() => openLink(\"https://www.covidnetworks.org/\")}>\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialCommunityIcons name=\"web\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Website</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"Profile\")}>\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialIcons name=\"person-outline\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Profile</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={{width:width,alignSelf:'center',marginBottom:15,justifyContent:'space-evenly', backgroundColor:\"white\"}}>\r\n                  \r\n                      <View style={{padding:10,backgroundColor:\"white\",marginHorizontal:10}}>\r\n                        <Text style={{paddingBottom:10,color:COLORS.primaryColor,fontWeight:'bold',fontSize:20,alignSelf:'center'}}>Our Mission</Text>\r\n                        <Text style={{paddingBottom:5,color:COLORS.textColor, alignSelf:'center',width:'50%'}}>At Horizon Networks, our mission is to connect young individuals with those who are in at-risk groups, easing the loneliness that many individuals feel whilst under quarantine. We understand the difficulties associated with staying at home for extended periods of time during social distancing, especially for those who are particularly vulnerable or at-risk. However, it is a necessary step to stopping the spread of the disease.</Text>\r\n                        {/* <View style={{flexDirection:'row',alignItems:'center',justifyContent:'space-evenly',padding:10}}>\r\n                          <View style={{width:width * 0.25,alignItems:'center',alignContent:'center'}}>\r\n                              <FontAwesome5 name=\"hands-helping\" size={40} color=\"black\" />\r\n                              <Text style={{fontSize:18}}>26,500+</Text>\r\n                              <Text>Seniors Helped</Text>\r\n                          </View>\r\n            \r\n                          <View style={{width:width * 0.25,alignItems:'center'}}>\r\n                              <MaterialIcons name=\"business\" size={40} color=\"black\" />\r\n                              <Text style={{fontSize:18}}>170+</Text>\r\n                              <Text>Senior Centers</Text>\r\n                          </View>\r\n                  \r\n                          <View style={{width:width * 0.25,alignItems:'center'}}>\r\n                            <MaterialIcons name=\"volunteer-activism\" size={40} color=\"black\" />\r\n                            <Text style={{fontSize:18}}>2,800+</Text>\r\n                              <Text>Volunteers</Text>\r\n                          </View>\r\n\r\n                      </View> */}\r\n                    </View>\r\n                    <View style={{flexDirection:'row',alignItems:'center',justifyContent:'space-evenly',padding:10,backgroundColor:'white',width:'50%',alignSelf:'center'}}>\r\n                      <View style={{width:width * 0.25,alignItems:'center',alignContent:'center'}}>\r\n                          <FontAwesome5 name=\"hands-helping\" size={40} color={COLORS.primaryColor} />\r\n                          <Text style={{fontSize:18,color:COLORS.textColor}}>26,500+</Text>\r\n                          <Text style={{color:COLORS.textColor}}>Seniors Helped</Text>\r\n                      </View>\r\n        \r\n                      <View style={{width:width * 0.25,alignItems:'center'}}>\r\n                          <MaterialIcons name=\"business\" size={40} color={COLORS.primaryColor} />\r\n                          <Text style={{fontSize:18,color:COLORS.textColor}}>170+</Text>\r\n                          <Text style={{color:COLORS.textColor}}>Senior Centers</Text>\r\n                      </View>\r\n              \r\n                      <View style={{width:width * 0.25,alignItems:'center'}}>\r\n                        <MaterialIcons name=\"volunteer-activism\" size={40} color={COLORS.primaryColor} />\r\n                        <Text style={{fontSize:18, color:COLORS.textColor}}>2,800+</Text>\r\n                          <Text style={{color:COLORS.textColor}}>Volunteers</Text>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n                </View>\r\n                \r\n                \r\n                <View style={{flexDirection:'row',justifyContent:'center',alignItems:'center',shadowOpacity:1,shadowOffset:{width:1,height:2},elevation:10}}>\r\n                  <View>\r\n                    <Text style={{alignSelf:'center',color:COLORS.textInButtonColor,fontSize:20,fontWeight:'bold',padding:10}}>Support Us</Text>\r\n                    <View style={{marginBottom:15,marginHorizontal:10,flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                        <TouchableOpacity onPress={() => openLink(\"https://www.covidnetworks.org/\")} >\r\n                          <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.25,alignItems:'center'}}>\r\n                              <FontAwesome5 name=\"donate\" size={40} color=\"black\" />\r\n                              <Text style={{fontSize:15}}>Donate</Text>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                        \r\n                    </View>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{alignSelf:'center',color:COLORS.textInButtonColor,fontSize:20,fontWeight:'bold',padding:10}}>Contact Us</Text>\r\n                    <View style={{marginBottom:15,marginHorizontal:10,flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                        \r\n                        <TouchableOpacity onPress={() => handleEmailToCovidNetworks()}>\r\n                          <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.25,alignItems:'center'}}>\r\n                              <FontAwesome name=\"envelope\" size={40} color=\"black\" />\r\n                              <Text style={{fontSize:15}}>Email</Text>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n                {/* <View style={{flexDirection:'column',justifyContent:'center',alignItems:'center',marginTop:25}}>\r\n                    <TouchableOpacity onPress={() => Linking.openURL(\"https://apps.apple.com/ph/app/horizon-networks-senior-games/id1558778490\")}>\r\n                        <Image source={require(\"./assets/DownloadApple.png\")} style={{height:Dimensions.get('window').height * 0.075,width:400}} resizeMode=\"contain\"/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => Linking.openURL(\"https://play.google.com/store/apps/details?id=com.aparson.horizonnetworks\")}>\r\n                        <Image source={require(\"./assets/google-play-badge (1).png\")} style={{height:Dimensions.get('window').height * 0.1,width:400}} resizeMode=\"contain\"/>\r\n                    </TouchableOpacity>\r\n                    \r\n                </View> */}\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </LinearGradient>\r\n  );\r\n}\r\n\r\nconst HomeHeadNavigator = createStackNavigator()\r\nfunction HomeHeadNav({navigation,route}) {\r\n  return (\r\n    <SafeAreaProvider>\r\n    <HomeHeadNavigator.Navigator  >\r\n      <HomeHeadNavigator.Screen name=\"Home\" component={HomeScreenHead} options={{\r\n      \r\n      headerStyle: {\r\n        backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n       \r\n      },\r\n      headerTintColor: 'white',\r\n      \r\n      headerLeft: () => <TouchableOpacity transparent onPress={() => navigation.openDrawer()}><Entypo style={{  color: 'white', marginLeft: 15, fontSize: 30, marginTop: 7 }} name='menu'/></TouchableOpacity>\r\n    }}/>\r\n     \r\n    </HomeHeadNavigator.Navigator>\r\n    </SafeAreaProvider>\r\n  );\r\n}\r\nfunction HomeScreenHead({ navigation,route }) {\r\n  console.log(route,\"Props\")\r\n  return (\r\n    <LinearGradient colors={[COLORS.backgroundColor,COLORS.backgroundColorFade]}  style={{ flex: 1 }}>\r\n      <ScrollView style={{ flex: 1 }}>\r\n        <View style={{marginBottom:15,width:width,elevation:10,overflow:'hidden'}}>\r\n       \r\n            <View style={{shadowOpacity:1,shadowOffset:{width:1,height:2},elevation:10}}>\r\n              <ImageBackground style={{height:width * (630/1200) * 0.85,width:width,alignSelf:'center',overflow:'hidden',backfaceVisibility:'hidden'}} imageStyle={{opacity:0.3}}  source={require(\"./assets/homePageImage.png\")}>\r\n                <Text style={{paddingHorizontal:20,paddingTop:'20%',color:\"white\",fontWeight:'bold',fontSize:30,shadowOpacity:0.2}}>Horizon Networks</Text>\r\n                <Text style={{paddingLeft:20,paddingRight:width * 0.35,paddingTop:20,color:\"white\",fontWeight:'bold',fontSize:20,shadowOpacity:0.2}}>Connecting those that are most isolated with the youth.</Text>\r\n              </ImageBackground>\r\n            </View>\r\n              <View style={{flex:1}}>\r\n                <View style={{width:width,alignSelf:'center',marginTop:15,marginBottom:10,flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"Create an Event\")}>\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialCommunityIcons name=\"calendar-edit\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Create Event</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"View Events\")}>\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialIcons name=\"event\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Events</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                   \r\n                </View>\r\n                <View style={{width:width,alignSelf:'center',flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"Answer Questions\")} >\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialCommunityIcons name=\"forum-outline\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Answer Questions</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"Manage Chapter\")} >\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialCommunityIcons name=\"view-dashboard-outline\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Manage Chapter</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                  \r\n                </View>\r\n                <View style={{width:width,alignSelf:'center',marginTop:10,marginBottom:15,flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                    <TouchableOpacity onPress={() => openLink(\"https://www.covidnetworks.org/\")}>\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialCommunityIcons name=\"web\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Website</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"Profile\")}>\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialIcons name=\"person-outline\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Profile</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    \r\n                </View>\r\n                <View style={{width:width,alignSelf:'center',marginBottom:15,justifyContent:'space-evenly', backgroundColor:\"white\"}}>\r\n                  \r\n                      <View style={{padding:10,backgroundColor:\"white\",marginHorizontal:10}}>\r\n                        <Text style={{paddingBottom:10,color:COLORS.primaryColor,fontWeight:'bold',fontSize:20,alignSelf:'center'}}>Our Mission</Text>\r\n                        <Text style={{paddingBottom:5,color:COLORS.textColor, alignSelf:'center',width:'50%'}}>At Horizon Networks, our mission is to connect young individuals with those who are in at-risk groups, easing the loneliness that many individuals feel whilst under quarantine. We understand the difficulties associated with staying at home for extended periods of time during social distancing, especially for those who are particularly vulnerable or at-risk. However, it is a necessary step to stopping the spread of the disease.</Text>\r\n                        {/* <View style={{flexDirection:'row',alignItems:'center',justifyContent:'space-evenly',padding:10}}>\r\n                          <View style={{width:width * 0.25,alignItems:'center',alignContent:'center'}}>\r\n                              <FontAwesome5 name=\"hands-helping\" size={40} color=\"black\" />\r\n                              <Text style={{fontSize:18}}>26,500+</Text>\r\n                              <Text>Seniors Helped</Text>\r\n                          </View>\r\n            \r\n                          <View style={{width:width * 0.25,alignItems:'center'}}>\r\n                              <MaterialIcons name=\"business\" size={40} color=\"black\" />\r\n                              <Text style={{fontSize:18}}>170+</Text>\r\n                              <Text>Senior Centers</Text>\r\n                          </View>\r\n                  \r\n                          <View style={{width:width * 0.25,alignItems:'center'}}>\r\n                            <MaterialIcons name=\"volunteer-activism\" size={40} color=\"black\" />\r\n                            <Text style={{fontSize:18}}>2,800+</Text>\r\n                              <Text>Volunteers</Text>\r\n                          </View>\r\n\r\n                      </View> */}\r\n                    </View>\r\n                    <View style={{flexDirection:'row',alignItems:'center',justifyContent:'space-evenly',padding:10,backgroundColor:'white',width:'50%',alignSelf:'center'}}>\r\n                      <View style={{width:width * 0.25,alignItems:'center',alignContent:'center'}}>\r\n                          <FontAwesome5 name=\"hands-helping\" size={40} color={COLORS.primaryColor} />\r\n                          <Text style={{fontSize:18,color:COLORS.textColor}}>26,500+</Text>\r\n                          <Text style={{color:COLORS.textColor}}>Seniors Helped</Text>\r\n                      </View>\r\n        \r\n                      <View style={{width:width * 0.25,alignItems:'center'}}>\r\n                          <MaterialIcons name=\"business\" size={40} color={COLORS.primaryColor} />\r\n                          <Text style={{fontSize:18,color:COLORS.textColor}}>170+</Text>\r\n                          <Text style={{color:COLORS.textColor}}>Senior Centers</Text>\r\n                      </View>\r\n              \r\n                      <View style={{width:width * 0.25,alignItems:'center'}}>\r\n                        <MaterialIcons name=\"volunteer-activism\" size={40} color={COLORS.primaryColor} />\r\n                        <Text style={{fontSize:18, color:COLORS.textColor}}>2,800+</Text>\r\n                          <Text style={{color:COLORS.textColor}}>Volunteers</Text>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n                </View>\r\n                \r\n                \r\n                <View style={{flexDirection:'row',justifyContent:'center',alignItems:'center',shadowOpacity:1,shadowOffset:{width:1,height:2},elevation:10}}>\r\n                  <View>\r\n                    <Text style={{alignSelf:'center',color:COLORS.textInButtonColor,fontSize:20,fontWeight:'bold',padding:10}}>Support Us</Text>\r\n                    <View style={{marginBottom:15,marginHorizontal:10,flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                        <TouchableOpacity onPress={() => openLink(\"https://www.covidnetworks.org/\")} >\r\n                          <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.25,alignItems:'center'}}>\r\n                              <FontAwesome5 name=\"donate\" size={40} color=\"black\" />\r\n                              <Text style={{fontSize:15}}>Donate</Text>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                        \r\n                    </View>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{alignSelf:'center',color:COLORS.textInButtonColor,fontSize:20,fontWeight:'bold',padding:10}}>Contact Us</Text>\r\n                    <View style={{marginBottom:15,marginHorizontal:10,flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                        \r\n                        <TouchableOpacity onPress={() => handleEmailToCovidNetworks()}>\r\n                          <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.25,alignItems:'center'}}>\r\n                              <FontAwesome name=\"envelope\" size={40} color=\"black\" />\r\n                              <Text style={{fontSize:15}}>Email</Text>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n                {/* <View style={{flexDirection:'column',justifyContent:'center',alignItems:'center',marginTop:25}}>\r\n                    <TouchableOpacity onPress={() => Linking.openURL(\"https://apps.apple.com/ph/app/horizon-networks-senior-games/id1558778490\")}>\r\n                        <Image source={require(\"./assets/DownloadApple.png\")} style={{height:Dimensions.get('window').height * 0.075,width:400}} resizeMode=\"contain\"/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => Linking.openURL(\"https://play.google.com/store/apps/details?id=com.aparson.horizonnetworks\")}>\r\n                        <Image source={require(\"./assets/google-play-badge (1).png\")} style={{height:Dimensions.get('window').height * 0.1,width:400}} resizeMode=\"contain\"/>\r\n                    </TouchableOpacity>\r\n                    \r\n                </View> */}\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </LinearGradient>\r\n  );\r\n}\r\nconst HomeAdminNavigator = createStackNavigator()\r\nfunction HomeAdminNav({navigation,route}) {\r\n  return (\r\n    <SafeAreaProvider>\r\n    <HomeAdminNavigator.Navigator  >\r\n      <HomeAdminNavigator.Screen name=\"Home\" component={HomeScreenAdmin} options={{\r\n      \r\n      headerStyle: {\r\n        backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n       \r\n      },\r\n      headerTintColor: 'white',\r\n      \r\n      headerLeft: () => <TouchableOpacity transparent onPress={() => navigation.openDrawer()}><Entypo style={{  color: 'white', marginLeft: 15, fontSize: 30, marginTop: 7 }} name='menu'/></TouchableOpacity>\r\n    }}/>\r\n     \r\n    </HomeAdminNavigator.Navigator>\r\n    </SafeAreaProvider>\r\n  );\r\n}\r\nfunction HomeScreenAdmin({ navigation,route }) {\r\n  console.log(route,\"Props\")\r\n  console.log(\"IMAGE SIZE\", width * (630/1200))\r\n\r\n  return (\r\n    <LinearGradient colors={[COLORS.backgroundColor,COLORS.backgroundColorFade]}  style={{ flex: 1 }}>\r\n      <ScrollView style={{ flex: 1 }}>\r\n        <View style={{marginBottom:15,width:width,elevation:10,overflow:'hidden'}}>\r\n           \r\n             <View style={{shadowOpacity:1,shadowOffset:{width:1,height:2},elevation:10}}>\r\n              <ImageBackground style={{height:width * (630/1200) * 0.85,width:width,alignSelf:'center',overflow:'hidden',backfaceVisibility:'hidden'}} imageStyle={{opacity:0.3}}  source={require(\"./assets/homePageImage.png\")}>\r\n                <Text style={{paddingHorizontal:20,paddingTop:'20%',color:\"white\",fontWeight:'bold',fontSize:30,shadowOpacity:0.2}}>Horizon Networks</Text>\r\n                <Text style={{paddingLeft:20,paddingRight:width * 0.35,paddingTop:20,color:\"white\",fontWeight:'bold',fontSize:20,shadowOpacity:0.2}}>Connecting those that are most isolated with the youth.</Text>\r\n              </ImageBackground>\r\n            </View>\r\n              <View style={{flex:1}}>\r\n                <View style={{width:width,alignSelf:'center',marginTop:15,marginBottom:10,flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"Create an Event\")}>\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialCommunityIcons name=\"calendar-edit\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Create Event</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"View Events\")}>\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialIcons name=\"event\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Events</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                   \r\n                </View>\r\n                <View style={{width:width,alignSelf:'center',flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"Answer Questions\")} >\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialCommunityIcons name=\"forum-outline\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Answer Questions</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"Manage Chapter\")} >\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialCommunityIcons name=\"view-dashboard-outline\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Manage Chapter</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                  \r\n                </View>\r\n                <View style={{width:width,alignSelf:'center',marginTop:10,marginBottom:15,flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"Manage Network\")}>\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.20,alignItems:'center'}}>\r\n                          <MaterialCommunityIcons name=\"server-network\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Manage Network</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() =>  navigation.navigate(\"Network Events\")}>\r\n                      <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.2,alignItems:'center'}}>\r\n                          <MaterialCommunityIcons name=\"sitemap\" size={50} color=\"black\" />\r\n                          <Text style={{fontSize:15}}>Network Events</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={{width:width,alignSelf:'center',marginBottom:15,justifyContent:'space-evenly', backgroundColor:\"white\"}}>\r\n                  \r\n                      <View style={{padding:10,backgroundColor:\"white\",marginHorizontal:10}}>\r\n                        <Text style={{paddingBottom:10,color:COLORS.primaryColor,fontWeight:'bold',fontSize:20,alignSelf:'center'}}>Our Mission</Text>\r\n                        <Text style={{paddingBottom:5,color:COLORS.textColor, alignSelf:'center',width:'60%'}}>At Horizon Networks, our mission is to connect young individuals with those who are in at-risk groups, easing the loneliness that many individuals feel whilst under quarantine. We understand the difficulties associated with staying at home for extended periods of time during social distancing, especially for those who are particularly vulnerable or at-risk. However, it is a necessary step to stopping the spread of the disease.</Text>\r\n                        {/* <View style={{flexDirection:'row',alignItems:'center',justifyContent:'space-evenly',padding:10}}>\r\n                          <View style={{width:width * 0.25,alignItems:'center',alignContent:'center'}}>\r\n                              <FontAwesome5 name=\"hands-helping\" size={40} color=\"black\" />\r\n                              <Text style={{fontSize:18}}>26,500+</Text>\r\n                              <Text>Seniors Helped</Text>\r\n                          </View>\r\n            \r\n                          <View style={{width:width * 0.25,alignItems:'center'}}>\r\n                              <MaterialIcons name=\"business\" size={40} color=\"black\" />\r\n                              <Text style={{fontSize:18}}>170+</Text>\r\n                              <Text>Senior Centers</Text>\r\n                          </View>\r\n                  \r\n                          <View style={{width:width * 0.25,alignItems:'center'}}>\r\n                            <MaterialIcons name=\"volunteer-activism\" size={40} color=\"black\" />\r\n                            <Text style={{fontSize:18}}>2,800+</Text>\r\n                              <Text>Volunteers</Text>\r\n                          </View>\r\n\r\n                      </View> */}\r\n                    </View>\r\n                    <View style={{flexDirection:'row',alignItems:'center',justifyContent:'space-evenly',padding:10,backgroundColor:'white',width:'50%',alignSelf:'center'}}>\r\n                      <View style={{width:width * 0.25,alignItems:'center',alignContent:'center'}}>\r\n                          <FontAwesome5 name=\"hands-helping\" size={40} color={COLORS.primaryColor} />\r\n                          <Text style={{fontSize:18,color:COLORS.textColor}}>26,500+</Text>\r\n                          <Text style={{color:COLORS.textColor}}>Seniors Helped</Text>\r\n                      </View>\r\n        \r\n                      <View style={{width:width * 0.25,alignItems:'center'}}>\r\n                          <MaterialIcons name=\"business\" size={40} color={COLORS.primaryColor} />\r\n                          <Text style={{fontSize:18,color:COLORS.textColor}}>170+</Text>\r\n                          <Text style={{color:COLORS.textColor}}>Senior Centers</Text>\r\n                      </View>\r\n              \r\n                      <View style={{width:width * 0.25,alignItems:'center'}}>\r\n                        <MaterialIcons name=\"volunteer-activism\" size={40} color={COLORS.primaryColor} />\r\n                        <Text style={{fontSize:18, color:COLORS.textColor}}>2,800+</Text>\r\n                          <Text style={{color:COLORS.textColor}}>Volunteers</Text>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n                </View>\r\n                \r\n                \r\n                <View style={{flexDirection:'row',justifyContent:'center',alignItems:'center'}}>\r\n                  <View>\r\n                    <Text style={{alignSelf:'center',color:COLORS.textInButtonColor,fontSize:20,fontWeight:'bold',padding:10}}>Support Us</Text>\r\n                    <View style={{marginBottom:15,marginHorizontal:10,flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                        <TouchableOpacity onPress={() => openLink(\"https://www.covidnetworks.org/\")} >\r\n                          <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.25,alignItems:'center'}}>\r\n                              <FontAwesome5 name=\"donate\" size={40} color=\"black\" />\r\n                              <Text style={{fontSize:15}}>Donate</Text>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                        \r\n                    </View>\r\n                  </View>\r\n                  <View>\r\n                    <Text style={{alignSelf:'center',color:COLORS.textInButtonColor,fontSize:20,fontWeight:'bold',padding:10}}>Contact Us</Text>\r\n                    <View style={{marginBottom:15,marginHorizontal:10,flexDirection:'row',justifyContent:'space-evenly'}}>\r\n                        \r\n                        <TouchableOpacity onPress={() => handleEmailToCovidNetworks()}>\r\n                          <View style={{padding:10,borderRadius: STYLEVALS.borderRadius,backgroundColor:COLORS.cardColor,width:width * 0.25,alignItems:'center'}}>\r\n                              <FontAwesome name=\"envelope\" size={40} color=\"black\" />\r\n                              <Text style={{fontSize:15}}>Email</Text>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n\r\n                {/* <View style={{flexDirection:'column',justifyContent:'center',alignItems:'center',marginTop:25}}>\r\n                    <TouchableOpacity onPress={() => Linking.openURL(\"https://apps.apple.com/ph/app/horizon-networks-senior-games/id1558778490\")}>\r\n                        <Image source={require(\"./assets/DownloadApple.png\")} style={{height:Dimensions.get('window').height * 0.075,width:400}} resizeMode=\"contain\"/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => Linking.openURL(\"https://play.google.com/store/apps/details?id=com.aparson.horizonnetworks\")}>\r\n                        <Image source={require(\"./assets/google-play-badge (1).png\")} style={{height:Dimensions.get('window').height * 0.1,width:400}} resizeMode=\"contain\"/>\r\n                    </TouchableOpacity>\r\n                    \r\n                </View> */}\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </LinearGradient>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n//HOME SCREENS\r\n\r\n\r\n//SMALL COMPOENNETS\r\nfunction loading(){\r\n  return(\r\n    <View style={{flex:1,margin:20}}>\r\n        <Spinner color={AppConstantsValues.COLORS.primaryColor}/>\r\n       \r\n        <Text style={{color:AppConstantsValues.COLORS.textInButtonColor}}>Loading...</Text>\r\n       \r\n    </View>\r\n  )\r\n}\r\nconst LogOutNavigator = createStackNavigator()\r\nfunction LogOutNav({navigation,route}) {\r\n  return (\r\n    <SafeAreaProvider>\r\n    <LogOutNavigator.Navigator  >\r\n      <LogOutNavigator.Screen name=\"Log Out\" component={logOut} options={{\r\n      \r\n      headerStyle: {\r\n        backgroundColor: AppConstantsValues.COLORS.primaryColor,\r\n       \r\n      },\r\n      headerTintColor: 'white',\r\n      \r\n      headerLeft: () => <TouchableOpacity transparent onPress={() => navigation.openDrawer()}><Entypo style={{  color: 'white', marginLeft: 15, fontSize: 30, marginTop: 7 }} name='menu'/></TouchableOpacity>\r\n    }}/>\r\n     \r\n    </LogOutNavigator.Navigator>\r\n    </SafeAreaProvider>\r\n  );\r\n}\r\nfunction logOut(){\r\n  const logout = async() => {\r\n\r\n    Firebase.auth().signOut()\r\n    \r\n  }\r\n  return(\r\n    <SafeAreaView style={{flex:1,margin:20}}>\r\n      <Button block style={{alignSelf:'center',backgroundColor:AppConstantsValues.COLORS.primaryColor}} onPress={() => logout()}>\r\n          <Text style={{color:AppConstantsValues.COLORS.textInButtonColor,paddingHorizontal:20}}>Log Out</Text>\r\n      </Button>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nfunction NoScreen(){\r\n  return(\r\n    <View style={{flex:1,margin:20}}>\r\n        <Spinner color={AppConstantsValues.COLORS.primaryColor}/>\r\n       \r\n        <Text style={{color:AppConstantsValues.COLORS.textInButtonColor}}>Something isn't right...reload the app?</Text>\r\n        <Text style={{color:AppConstantsValues.COLORS.textInButtonColor}}>Check your internet connection.</Text>\r\n       \r\n    </View>\r\n  )\r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n//SMALL COMPONENTS\r\n\r\n//ASK FOR RE-ENTERING CREDENTIALS TO LOG OUT AND LOGIN\r\nclass waitingRoom extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n       \r\n        ready:false\r\n      };\r\n      \r\n    }\r\n  \r\n  async componentDidMount(){\r\n      console.log(this.props.route.params,\"PARAMS\")\r\n      await this.setUp()\r\n  }\r\n\r\n  setUp = async () => {\r\n      if(await this.connectToInternet()){\r\n    \r\n          this.setState({ready:true})\r\n      }else{\r\n          alert(\"No Internet Detected\")\r\n      }\r\n  }\r\n\r\n  connectToInternet = async() => {\r\n      return await AppConstantsValues.checkInternet()\r\n  }\r\n  render(){\r\n      if(this.state.ready == false){\r\n          return(\r\n              <View style={{flex:1,margin:20}}>\r\n                  <Spinner color={AppConstantsValues.COLORS.primaryColor}/>\r\n                  <Button block style={{alignSelf:'center',backgroundColor:AppConstantsValues.COLORS.primaryColor}} onPress={() => this.setUp()}>\r\n                      <Text style={{color:AppConstantsValues.COLORS.textInButtonColor}}>Try again!</Text>\r\n                  </Button>\r\n              </View>\r\n          )\r\n      }\r\n      return(\r\n          <SafeAreaView style={{flex:1,margin:20}}>\r\n            <Text>Waiting Room</Text>\r\n          </SafeAreaView>\r\n      )\r\n  }\r\n\r\n\r\n}\r\n\r\nregisterRootComponent(App)"],"sourceRoot":""}